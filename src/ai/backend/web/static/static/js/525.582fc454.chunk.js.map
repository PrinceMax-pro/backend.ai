{"version":3,"file":"static/js/525.582fc454.chunk.js","mappings":"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","sources":["helper/graphql-transformer.ts","RelayEnvironment.ts","components/DefaultProviders.tsx","components/ResetPasswordRequired.tsx","components/TOTPActivateModal.tsx","components/UserProfileSettingModal.tsx","components/__generated__/TOTPActivateModalFragment.graphql.ts","components/__generated__/UserProfileSettingModalQuery.graphql.ts","hooks/backendai.tsx","../node_modules/@ant-design/icons-svg/es/asn/WarningTwoTone.js","../node_modules/@ant-design/icons/es/icons/WarningTwoTone.js"],"sourcesContent":["import { parse, print, visit } from 'graphql';\n\n// Delete nodes in enter\n// Remove unnecessary arguments or directives in leave\nexport function manipulateGraphQLQueryWithClientDirectives(\n  query: string,\n  variables: any = {},\n  isCompatibleWith: (version: string) => boolean,\n) {\n  const ast = parse(query);\n  let newAst = visit(ast, {\n    Field: {\n      enter(node) {\n        if (\n          node?.directives?.find((directive) => {\n            const directiveName = directive.name.value;\n            const firstArgName = directive.arguments?.[0].name.value;\n            // @ts-ignore\n            const firstArgValue = directive.arguments?.[0].value?.value;\n            const arg = directive.arguments?.[0];\n\n            if (directiveName === 'since' && firstArgName === 'version') {\n              if (isCompatibleWith(firstArgValue)) {\n                return true;\n              }\n            } else if (\n              directiveName === 'deprecatedSince' &&\n              firstArgName === 'version'\n            ) {\n              const version =\n                arg?.value.kind === 'StringValue'\n                  ? arg?.value.value\n                  : // @ts-ignore\n                    variables[arg?.value.name.value];\n\n              if (!isCompatibleWith(version)) {\n                return true;\n              }\n            } else if (\n              directiveName === 'skipOnClient' &&\n              firstArgName === 'if'\n            ) {\n              if (arg?.value.kind === 'BooleanValue' && arg.value.value) {\n                return true;\n              }\n\n              if (\n                arg?.value.kind === 'Variable' &&\n                variables[arg.value.name.value]\n              ) {\n                return true;\n              }\n            }\n            return false;\n          })\n        ) {\n          return null;\n        }\n      },\n      leave(node) {\n        // when field has a empty selectionSet, delete it\n        if (\n          node.selectionSet &&\n          node.selectionSet.kind === 'SelectionSet' &&\n          node.selectionSet.selections?.length === 0\n        ) {\n          return null;\n        }\n      },\n    },\n    Directive: {\n      // delete all onClient directives\n      leave(directive) {\n        const directiveName = directive.name.value;\n        if (\n          ['since', 'deprecatedSince', 'skipOnClient'].includes(directiveName)\n        ) {\n          return null;\n        }\n      },\n    },\n  });\n\n  // count used variables\n  const usedVariables: {\n    [key: string]: number;\n  } = {};\n  visit(newAst, {\n    Variable(node) {\n      usedVariables[node.name.value] =\n        (usedVariables[node.name.value] || 0) + 1;\n    },\n  });\n\n  // delete unused variables\n  newAst = visit(newAst, {\n    VariableDefinition: {\n      enter(variableDefinition) {\n        if (usedVariables[variableDefinition.variable.name.value] <= 1) {\n          return null;\n        }\n      },\n    },\n  });\n\n  return print(newAst);\n}\n","// import { createClient } from \"graphql-ws\";\nimport { manipulateGraphQLQueryWithClientDirectives } from './helper/graphql-transformer';\nimport {\n  Environment,\n  Network,\n  RecordSource,\n  Store,\n  FetchFunction,\n  SubscribeFunction,\n  RelayFeatureFlags,\n} from 'relay-runtime';\n\nRelayFeatureFlags.ENABLE_RELAY_RESOLVERS = true;\n\nconst fetchFn: FetchFunction = async (\n  request,\n  variables,\n  // cacheConfig,\n  // uploadables\n) => {\n  //@ts-ignore\n  if (globalThis.backendaiclient === undefined) {\n    // If globalThis.backendaiclient is not defined, wait for the backend-ai-connected event.\n    await new Promise((resolve) => {\n      const onBackendAIConnected = () => {\n        // When the backend-ai-connected event occurs, remove the event listener and execute the function.\n        document.removeEventListener(\n          'backend-ai-connected',\n          onBackendAIConnected,\n        );\n        resolve(undefined);\n      };\n      document.addEventListener('backend-ai-connected', onBackendAIConnected);\n    });\n  }\n\n  const transformedQuery = manipulateGraphQLQueryWithClientDirectives(\n    request.text || '',\n    variables,\n    (version) => {\n      // @ts-ignore\n      return !globalThis.backendaiclient?.isManagerVersionCompatibleWith(\n        version,\n      );\n    },\n  );\n\n  const reqBody = {\n    query: transformedQuery,\n    variables: variables,\n  };\n\n  //@ts-ignore\n  const reqInfo = globalThis.backendaiclient?.newSignedRequest(\n    'POST',\n    '/admin/gql',\n    reqBody,\n  );\n\n  const result =\n    //@ts-ignore\n    (await globalThis.backendaiclient\n      ?._wrapWithPromise(reqInfo, false, null, 10000, 0)\n      .catch((err: any) => {\n        // console.log(err);\n      })) || {};\n\n  return result;\n};\n\nlet subscribeFn: SubscribeFunction;\n\n// if (typeof window !== \"undefined\") {\n//   // We only want to setup subscriptions if we are on the client.\n//   const subscriptionsClient = createClient({\n//     url: WEBSOCKET_ENDPOINT,\n//   });\n\n//   subscribeFn = (request, variables) => {\n//     // To understand why we return Observable.create<any>,\n//     // please see: https://github.com/enisdenjo/graphql-ws/issues/316#issuecomment-1047605774\n//     return Observable.create<any>((sink) => {\n//       if (!request.text) {\n//         return sink.error(new Error(\"Operation text cannot be empty\"));\n//       }\n\n//       return subscriptionsClient.subscribe(\n//         {\n//           operationName: request.name,\n//           query: request.text,\n//           variables,\n//         },\n//         sink\n//       );\n//     });\n//   };\n// }\n\nfunction createRelayEnvironment() {\n  return new Environment({\n    network: Network.create(fetchFn, subscribeFn),\n    store: new Store(new RecordSource()),\n  });\n}\n\nexport const RelayEnvironment = createRelayEnvironment();\n","import { RelayEnvironment } from '../RelayEnvironment';\n// @ts-ignore\nimport rawFixAntCss from '../fix_antd.css?raw';\nimport { useCustomThemeConfig } from '../helper/customThemeConfig';\nimport { ReactWebComponentProps } from '../helper/react-to-webcomponent';\nimport { StyleProvider, createCache } from '@ant-design/cssinjs';\nimport { App, ConfigProvider } from 'antd';\nimport en_US from 'antd/locale/en_US';\nimport ko_KR from 'antd/locale/ko_KR';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/ko';\nimport localeData from 'dayjs/plugin/localeData';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport timezone from 'dayjs/plugin/timezone';\nimport utc from 'dayjs/plugin/utc';\nimport weekday from 'dayjs/plugin/weekday';\nimport i18n from 'i18next';\nimport Backend from 'i18next-http-backend';\nimport React, {\n  Suspense,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useTranslation, initReactI18next } from 'react-i18next';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { RelayEnvironmentProvider } from 'react-relay';\nimport { BrowserRouter, useNavigate } from 'react-router-dom';\nimport { QueryParamProvider } from 'use-query-params';\nimport { ReactRouter6Adapter } from 'use-query-params/adapters/react-router-6';\n\ndayjs.extend(weekday);\ndayjs.extend(localeData);\ndayjs.extend(localizedFormat);\ndayjs.extend(relativeTime);\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\ninterface WebComponentContextType {\n  value?: ReactWebComponentProps['value'];\n  dispatchEvent: ReactWebComponentProps['dispatchEvent'];\n  moveTo: (\n    path: string,\n    params?: {\n      [key in string]?: boolean | string | number;\n    },\n  ) => void;\n}\n\nconst WebComponentContext = React.createContext<WebComponentContextType>(null!);\nconst ShadowRootContext = React.createContext<ShadowRoot>(null!);\nexport const useShadowRoot = () => React.useContext(ShadowRootContext);\nexport const useWebComponentInfo = () => React.useContext(WebComponentContext);\n\n// Create a client\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      suspense: true,\n      refetchOnWindowFocus: false,\n      retry: false,\n    },\n  },\n});\n\nexport interface DefaultProvidersProps extends ReactWebComponentProps {\n  children?: React.ReactNode;\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(Backend)\n  .init({\n    backend: {\n      loadPath: '/resources/i18n/{{lng}}.json',\n    },\n    //@ts-ignore\n    lng: globalThis?.backendaioptions?.get('current_language') || 'en',\n    fallbackLng: 'en',\n    interpolation: {\n      escapeValue: false, // react already safes from xss => https://www.i18next.com/translation-function/interpolation#unescape\n    },\n    react: {\n      transSupportBasicHtmlNodes: true,\n      transKeepBasicHtmlNodesFor: ['br', 'strong', 'span', 'code', 'p'],\n    },\n  });\n\nconst useCurrentLanguage = () => {\n  const [lang, _setLang] = useState(\n    //@ts-ignore\n    globalThis?.backendaioptions?.get('current_language'),\n  );\n  const { i18n } = useTranslation();\n\n  useEffect(() => {\n    // TODO: remove this hack to initialize i18next\n    setTimeout(() => i18n?.changeLanguage(lang), 0);\n    // For changing locale globally, use dayjs.locale instead of dayjs().locale\n    dayjs.locale(lang);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const handler = (e: Event) => {\n      //@ts-ignore\n      _setLang(e?.detail?.lang);\n      //@ts-ignore\n      const lang: string = e?.detail?.lang || 'en';\n      i18n?.changeLanguage(lang);\n      // For changing locale globally, use dayjs.locale instead of dayjs().locale\n      dayjs.locale(lang);\n    };\n    window.addEventListener('langChanged', handler);\n    return () => window.removeEventListener('langChanged', handler);\n  }, [i18n]);\n\n  return [lang] as const;\n};\n\nconst DefaultProviders: React.FC<DefaultProvidersProps> = ({\n  children,\n  value,\n  styles,\n  shadowRoot,\n  dispatchEvent,\n}) => {\n  const cache = useMemo(() => createCache(), []);\n  const [lang] = useCurrentLanguage();\n  const themeConfig = useCustomThemeConfig();\n\n  const componentValues = useMemo(() => {\n    return {\n      value,\n      dispatchEvent,\n      moveTo: (path, params) => {\n        dispatchEvent('moveTo', { path, params: params });\n      },\n    } as WebComponentContextType;\n  }, [value, dispatchEvent]);\n  return (\n    <>\n      {RelayEnvironment && (\n        <RelayEnvironmentProvider environment={RelayEnvironment}>\n          <React.StrictMode>\n            <style>\n              {styles}\n              {rawFixAntCss}\n            </style>\n            <QueryClientProvider client={queryClient}>\n              <ShadowRootContext.Provider value={shadowRoot}>\n                <WebComponentContext.Provider value={componentValues}>\n                  <ConfigProvider\n                    // @ts-ignore\n                    getPopupContainer={(triggerNode) => {\n                      return triggerNode?.parentNode || shadowRoot;\n                    }}\n                    //TODO: apply other supported locales\n                    locale={'ko' === lang ? ko_KR : en_US}\n                    theme={themeConfig}\n                  >\n                    <App>\n                      <StyleProvider container={shadowRoot} cache={cache}>\n                        <Suspense fallback=\"\">\n                          <BrowserRouter>\n                            <QueryParamProvider\n                              adapter={ReactRouter6Adapter}\n                              options={\n                                {\n                                  // searchStringToObject: queryString.parse,\n                                  // objectToSearchString: queryString.stringify,\n                                }\n                              }\n                            >\n                              <RoutingEventHandler />\n                              {children}\n                            </QueryParamProvider>\n                          </BrowserRouter>\n                        </Suspense>\n                      </StyleProvider>\n                    </App>\n                  </ConfigProvider>\n                </WebComponentContext.Provider>\n              </ShadowRootContext.Provider>\n            </QueryClientProvider>\n          </React.StrictMode>\n        </RelayEnvironmentProvider>\n      )}\n    </>\n  );\n};\n\nconst RoutingEventHandler = () => {\n  const navigate = useNavigate();\n  useLayoutEffect(() => {\n    const handleNavigate = (e: any) => {\n      const { detail } = e;\n      navigate(detail, {\n        // we don't want to add duplicated one to history.\n        // On lit component side, it adds to history already.\n        replace: true,\n      });\n    };\n    document.addEventListener('react-navigate', handleNavigate);\n\n    return () => {\n      document.removeEventListener('react-navigate', handleNavigate);\n    };\n  }, [navigate]);\n\n  return null;\n};\n\nexport default DefaultProviders;\n","import { baiSignedRequestWithPromise } from '../helper';\nimport { useAnonymousBackendaiClient } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport { useWebComponentInfo } from './DefaultProviders';\nimport Flex from './Flex';\nimport { WarningTwoTone } from '@ant-design/icons';\nimport { Button, Form, Modal, Typography, Input, theme } from 'antd';\nimport { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\n// src/components/backend-ai-common-utils.ts\nexport const passwordPattern = /^(?=.*\\d)(?=.*[a-zA-Z])(?=.*[_\\W]).{8,}$/;\n\nconst ResetPasswordRequired = () => {\n  const { value, dispatchEvent } = useWebComponentInfo();\n  let parsedValue: {\n    open: boolean;\n    currentPassword: string;\n    username: string;\n    api_endpoint: string;\n  };\n  try {\n    parsedValue = JSON.parse(value || '');\n  } catch (error) {\n    parsedValue = {\n      open: false,\n      currentPassword: '',\n      username: '',\n      api_endpoint: '',\n    };\n  }\n  const { open, currentPassword, username, api_endpoint } = parsedValue;\n\n  const { token } = theme.useToken();\n  const [form] = Form.useForm<{\n    newPassword: string;\n    confirm: string;\n  }>();\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    if (open) {\n      form.resetFields();\n    }\n  }, [open, form]);\n\n  const anonymousBaiClient = useAnonymousBackendaiClient({ api_endpoint });\n\n  const mutation = useTanMutation({\n    mutationFn: (body: {\n      username: string;\n      current_password: string;\n      new_password: string;\n    }) => {\n      return baiSignedRequestWithPromise({\n        method: 'POST',\n        url: '/server/update-password-no-auth',\n        body,\n        client: anonymousBaiClient,\n      });\n    },\n  });\n\n  const onSubmit = () => {\n    form.validateFields().then((values) => {\n      mutation.mutate(\n        {\n          username: username,\n          current_password: currentPassword,\n          new_password: values.newPassword,\n        },\n        {\n          onSuccess(data, variables, context) {\n            dispatchEvent('ok', null);\n          },\n          onError(error, variables, context) {},\n        },\n      );\n    });\n  };\n\n  return (\n    <Modal\n      open={open}\n      centered\n      mask={false}\n      onCancel={() => {\n        dispatchEvent('cancel', null);\n      }}\n      keyboard={false}\n      maskClosable={false}\n      footer={null}\n      width={450}\n      destroyOnClose={true}\n      forceRender\n    >\n      <Flex\n        direction=\"column\"\n        justify=\"start\"\n        align=\"stretch\"\n        gap={'md'}\n        style={{\n          alignSelf: 'stretch',\n          paddingTop: token.paddingMD,\n          paddingBottom: token.paddingMD,\n        }}\n      >\n        <Typography.Title level={3} style={{ margin: 0 }}>\n          <WarningTwoTone twoToneColor={token.colorWarning} />{' '}\n          {t('webui.menu.PleaseChangeYourPassword')}\n        </Typography.Title>\n        {t('webui.menu.YouMushChangeYourPassword')}\n        <Form\n          form={form}\n          layout=\"vertical\"\n          initialValues={{\n            currentPassword: currentPassword,\n          }}\n          disabled={mutation.isLoading}\n        >\n          <Form.Item\n            name=\"newPassword\"\n            label={t('webui.menu.NewPassword')}\n            rules={[\n              {\n                required: true,\n              },\n              {\n                pattern: passwordPattern,\n                message: t('webui.menu.InvalidPasswordMessage').toString(),\n              },\n              () => ({\n                validator(_, value) {\n                  if (currentPassword === value) {\n                    return Promise.reject(\n                      new Error(\n                        t('webui.menu.NewPasswordCannotBeSame').toString(),\n                      ),\n                    );\n                  }\n                  return Promise.resolve();\n                },\n              }),\n            ]}\n            hasFeedback\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item\n            name=\"confirm\"\n            label={t('webui.menu.NewPasswordAgain')}\n            dependencies={['newPassword']}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('newPassword') === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\n                    new Error(t('environment.PasswordsDoNotMatch').toString()),\n                  );\n                },\n              }),\n            ]}\n          >\n            <Input.Password onPressEnter={onSubmit} />\n          </Form.Item>\n        </Form>\n        <Button type=\"primary\" onClick={onSubmit} loading={mutation.isLoading}>\n          {t('webui.menu.Update')}\n        </Button>\n      </Flex>\n    </Modal>\n  );\n};\n\nexport default ResetPasswordRequired;\n","import { useSuspendedBackendaiClient } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport { TOTPActivateModalFragment$key } from './__generated__/TOTPActivateModalFragment.graphql';\nimport { QRCode, Typography, Input, theme, Form, message, Spin } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery } from 'react-query';\nimport { useFragment } from 'react-relay';\n\ntype TOTPActivateFormInput = {\n  otp: number;\n};\n\ninterface Props extends BAIModalProps {\n  userFrgmt?: TOTPActivateModalFragment$key | null;\n  onRequestClose: (success?: boolean) => void;\n}\n\nconst TOTPActivateModal: React.FC<Props> = ({\n  userFrgmt = null,\n  onRequestClose,\n  ...baiModalProps\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const [form] = Form.useForm<TOTPActivateFormInput>();\n\n  const user = useFragment(\n    graphql`\n      fragment TOTPActivateModalFragment on User {\n        email\n        totp_activated @skipOnClient(if: $isNotSupportTotp)\n      }\n    `,\n    userFrgmt,\n  );\n\n  const baiClient = useSuspendedBackendaiClient();\n  let initializedTotp = useQuery<{\n    totp_key: string;\n    totp_uri: string;\n  }>({\n    queryKey: ['initialize_totp', baiClient?.email, baiModalProps.open],\n    queryFn: () => {\n      return user?.email === baiClient?.email &&\n        !user?.totp_activated &&\n        baiModalProps.open\n        ? baiClient.initialize_totp()\n        : null;\n    },\n    suspense: false,\n    staleTime: 0,\n    cacheTime: 0,\n  });\n\n  const mutationToActivateTotp = useTanMutation({\n    mutationFn: (values: TOTPActivateFormInput) => {\n      return baiClient.activate_totp(values.otp);\n    },\n  });\n\n  const _onOk = () => {\n    form.validateFields().then((values) => {\n      mutationToActivateTotp.mutate(values, {\n        onSuccess: () => {\n          message.success(t('totp.TotpSetupCompleted'));\n          onRequestClose(true);\n        },\n        onError: () => {\n          message.error(t('totp.InvalidTotpCode'));\n        },\n      });\n      new Promise((resolve, reject) => {}).then(() => {\n        onRequestClose(true);\n      });\n    });\n  };\n\n  return (\n    <BAIModal\n      title={t('webui.menu.SetupTotp')}\n      maskClosable={false}\n      confirmLoading={mutationToActivateTotp.isLoading}\n      onOk={_onOk}\n      onCancel={() => {\n        onRequestClose();\n      }}\n      style={{ zIndex: 1 }}\n      {...baiModalProps}\n    >\n      {initializedTotp.isLoading ? (\n        <Flex justify=\"center\" direction=\"row\">\n          <Spin />\n        </Flex>\n      ) : !initializedTotp.data ? (\n        <Flex justify=\"center\" direction=\"row\">\n          {t('totp.TotpSetupNotAvailable')}\n        </Flex>\n      ) : (\n        <Form\n          preserve={false}\n          form={form}\n          validateTrigger={['onChange', 'onBlur']}\n        >\n          {t('totp.TypeInAuthKey')}\n          <Flex\n            justify=\"center\"\n            style={{ margin: token.marginSM, gap: token.margin }}\n          >\n            <QRCode value={initializedTotp.data.totp_uri} />\n          </Flex>\n          {t('totp.ScanQRToEnable')}\n          <Flex\n            justify=\"center\"\n            style={{ margin: token.marginSM, gap: token.margin }}\n          >\n            <Typography.Text copyable code>\n              {initializedTotp.data.totp_key}\n            </Typography.Text>\n          </Flex>\n          {t('totp.TypeInAuthKey')}\n          <Flex\n            justify=\"center\"\n            style={{ margin: token.marginSM, gap: token.margin }}\n          >\n            <Form.Item required name=\"otp\">\n              <Input\n                maxLength={6}\n                allowClear\n                placeholder=\"000000\"\n                style={{ maxWidth: 120 }}\n              />\n            </Form.Item>\n          </Flex>\n        </Form>\n      )}\n    </BAIModal>\n  );\n};\n\nexport default TOTPActivateModal;\n","/**\n @license\n Copyright (c) 2015-2023 Lablup Inc. All rights reserved.\n */\nimport { useSuspendedBackendaiClient, useUpdatableState } from '../hooks';\nimport { useCurrentUserInfo } from '../hooks/backendai';\nimport { useTanQuery, useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal from './BAIModal';\nimport { passwordPattern } from './ResetPasswordRequired';\nimport TOTPActivateModal from './TOTPActivateModal';\n// @ts-ignore\nimport { UserProfileSettingModalQuery } from './__generated__/UserProfileSettingModalQuery.graphql';\nimport { ExclamationCircleFilled } from '@ant-design/icons';\nimport { useToggle } from 'ahooks';\nimport { Modal, ModalProps, Input, Form, message, Switch } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React, { useDeferredValue } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface Props extends ModalProps {\n  onRequestClose: (success?: boolean) => void;\n}\n\ntype UserProfileFormValues = {\n  full_name: string;\n  originalPassword?: string;\n  newPasswordConfirm?: string;\n  newPassword?: string;\n  totp_activated: boolean;\n};\n\nconst UserProfileSettingModal: React.FC<Props> = ({\n  onRequestClose,\n  ...baiModalProps\n}) => {\n  const { t } = useTranslation();\n  const [form] = Form.useForm<UserProfileFormValues>();\n  const [messageApi, contextHolder] = message.useMessage();\n  const [modal, modalContextHolder] = Modal.useModal();\n  const [isOpenTOTPActivateModal, { toggle: toggleTOTPActivateModal }] =\n    useToggle(false);\n  const baiClient = useSuspendedBackendaiClient();\n\n  const { data: isManagerSupportingTOTP } = useTanQuery(\n    'isManagerSupportingTOTP',\n    () => {\n      return baiClient.isManagerSupportingTOTP();\n    },\n    {\n      suspense: true,\n    },\n  );\n  const totpSupported = baiClient.supports('2FA') && isManagerSupportingTOTP;\n\n  const [userInfo, userMutations] = useCurrentUserInfo();\n  const [fetchKey, updateFetchKey] = useUpdatableState('initial-fetch');\n  const deferredMergedFetchKey = useDeferredValue(fetchKey);\n\n  const { user } = useLazyLoadQuery<UserProfileSettingModalQuery>(\n    graphql`\n      query UserProfileSettingModalQuery(\n        $email: String!\n        $isNotSupportTotp: Boolean!\n      ) {\n        user(email: $email) {\n          id\n          totp_activated @skipOnClient(if: $isNotSupportTotp)\n          ...TOTPActivateModalFragment\n        }\n      }\n    `,\n    {\n      email: userInfo.email,\n      isNotSupportTotp: !totpSupported,\n    },\n    {\n      fetchPolicy: 'network-only',\n      fetchKey: deferredMergedFetchKey,\n    },\n  );\n\n  const mutationToRemoveTotp = useTanMutation({\n    mutationFn: () => {\n      return baiClient.remove_totp();\n    },\n  });\n\n  const onSubmit = () => {\n    form\n      .validateFields()\n      .then((values) => {\n        userMutations.updateFullName(values.full_name, {\n          onSuccess: (newFullName) => {\n            if (newFullName !== userInfo.full_name) {\n              messageApi.open({\n                type: 'success',\n                content: t('webui.menu.FullnameUpdated'),\n              });\n            }\n\n            if (\n              values.newPassword &&\n              values.newPasswordConfirm &&\n              values.originalPassword\n            ) {\n              userMutations.updatePassword(\n                {\n                  new_password: values.newPassword,\n                  new_password2: values.newPasswordConfirm,\n                  old_password: values.originalPassword,\n                },\n                {\n                  onSuccess: () => {\n                    messageApi.open({\n                      type: 'success',\n                      content: t('webui.menu.PasswordUpdated'),\n                    });\n                    onRequestClose(true);\n                  },\n                  onError: (e) => {\n                    messageApi.open({\n                      type: 'error',\n                      content: e.message,\n                    });\n                  },\n                },\n              );\n            } else {\n              onRequestClose(true);\n            }\n          },\n          onError: (e) => {\n            messageApi.open({\n              type: 'error',\n              content: e.message,\n            });\n          },\n        });\n      })\n      .catch(() => {});\n  };\n\n  return (\n    <>\n      <BAIModal\n        {...baiModalProps}\n        okText={t('webui.menu.Update')}\n        cancelText={t('webui.menu.Cancel')}\n        onCancel={() => {\n          onRequestClose();\n        }}\n        confirmLoading={userInfo.isPendingMutation}\n        onOk={() => onSubmit()}\n        centered\n        destroyOnClose\n        title={t('webui.menu.MyAccountInformation')}\n      >\n        <Form\n          layout=\"horizontal\"\n          labelCol={{ span: 8 }}\n          form={form}\n          initialValues={{\n            full_name: userInfo.full_name,\n            totp_activated: user?.totp_activated || false,\n          }}\n          preserve={false}\n        >\n          <Form.Item\n            name=\"full_name\"\n            label={t('webui.menu.FullName')}\n            rules={[\n              () => ({\n                validator(_, value) {\n                  if (value && value.length < 65) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\n                    new Error(t('webui.menu.FullNameInvalid')),\n                  );\n                },\n              }),\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            name=\"originalPassword\"\n            label={t('webui.menu.OriginalPassword')}\n            rules={[\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (\n                    !value &&\n                    (getFieldValue('newPassword') ||\n                      getFieldValue('newPasswordConfirm'))\n                  ) {\n                    return Promise.reject(\n                      new Error(t('webui.menu.InputOriginalPassword')),\n                    );\n                  }\n                  return Promise.resolve();\n                },\n              }),\n            ]}\n            dependencies={['newPassword', 'newPasswordConfirm']}\n          >\n            <Input.Password />\n          </Form.Item>\n          <Form.Item\n            name=\"newPassword\"\n            label={t('webui.menu.NewPassword')}\n            rules={[\n              {\n                pattern: passwordPattern,\n                message: t('webui.menu.InvalidPasswordMessage'),\n              },\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n          <Form.Item\n            name=\"newPasswordConfirm\"\n            label={t('webui.menu.NewPasswordAgain')}\n            dependencies={['newPassword']}\n            rules={[\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('newPassword') === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\n                    new Error(t('webui.menu.NewPasswordMismatch')),\n                  );\n                },\n              }),\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n          {!!totpSupported && (\n            <Form.Item\n              name=\"totp_activated\"\n              label={t('webui.menu.TotpActivated')}\n              valuePropName=\"checked\"\n            >\n              <Switch\n                onChange={(checked: boolean) => {\n                  if (checked) {\n                    toggleTOTPActivateModal();\n                  } else {\n                    if (user?.totp_activated) {\n                      form.setFieldValue('totp_activated', true);\n                      modal.confirm({\n                        title: t('totp.TurnOffTotp'),\n                        icon: <ExclamationCircleFilled />,\n                        content: t('totp.ConfirmTotpRemovalBody'),\n                        okText: t('button.Yes'),\n                        okType: 'danger',\n                        cancelText: t('button.No'),\n                        onOk() {\n                          mutationToRemoveTotp.mutate(undefined, {\n                            onSuccess: () => {\n                              message.success(\n                                t('totp.RemoveTotpSetupCompleted'),\n                              );\n                              updateFetchKey();\n                              form.setFieldValue('totp_activated', false);\n                            },\n                            onError: (error: any) => {\n                              message.error(error.message);\n                            },\n                          });\n                        },\n                        onCancel() {\n                          form.setFieldValue('totp_activated', true);\n                        },\n                      });\n                    }\n                  }\n                }}\n              />\n            </Form.Item>\n          )}\n        </Form>\n        {!!totpSupported && (\n          <TOTPActivateModal\n            userFrgmt={user}\n            open={isOpenTOTPActivateModal}\n            onRequestClose={(success) => {\n              if (success) {\n                updateFetchKey();\n              } else {\n                form.setFieldValue('totp_activated', false);\n              }\n              toggleTOTPActivateModal();\n            }}\n          />\n        )}\n      </BAIModal>\n      {contextHolder}\n      {modalContextHolder}\n    </>\n  );\n};\n\nexport default UserProfileSettingModal;\n","/**\n * @generated SignedSource<<84ef114f996ea8a63ee4526fc5d27953>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type TOTPActivateModalFragment$data = {\n  readonly email: string | null;\n  readonly totp_activated: boolean | null;\n  readonly \" $fragmentType\": \"TOTPActivateModalFragment\";\n};\nexport type TOTPActivateModalFragment$key = {\n  readonly \" $data\"?: TOTPActivateModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"TOTPActivateModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [\n    {\n      \"kind\": \"RootArgument\",\n      \"name\": \"isNotSupportTotp\"\n    }\n  ],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"TOTPActivateModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"email\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"totp_activated\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"User\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"f5da6b3094f7d70bef9373d9c907955c\";\n\nexport default node;\n","/**\n * @generated SignedSource<<2c0e08c01e860fb4e78a264e42a1eeb1>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type UserProfileSettingModalQuery$variables = {\n  email: string;\n  isNotSupportTotp: boolean;\n};\nexport type UserProfileSettingModalQuery$data = {\n  readonly user: {\n    readonly id: string | null;\n    readonly totp_activated: boolean | null;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"TOTPActivateModalFragment\">;\n  } | null;\n};\nexport type UserProfileSettingModalQuery = {\n  response: UserProfileSettingModalQuery$data;\n  variables: UserProfileSettingModalQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"email\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"isNotSupportTotp\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"email\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"totp_activated\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserProfileSettingModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"TOTPActivateModalFragment\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UserProfileSettingModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"email\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"b0c9773ff4a3e759f0f9822463daa757\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserProfileSettingModalQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UserProfileSettingModalQuery(\\n  $email: String!\\n  $isNotSupportTotp: Boolean!\\n) {\\n  user(email: $email) {\\n    id\\n    totp_activated @skipOnClient(if: $isNotSupportTotp)\\n    ...TOTPActivateModalFragment\\n  }\\n}\\n\\nfragment TOTPActivateModalFragment on User {\\n  email\\n  totp_activated @skipOnClient(if: $isNotSupportTotp)\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"c87e74dfaa01d51a1697e67df81e101b\";\n\nexport default node;\n","import { useSuspendedBackendaiClient, useUpdatableState } from '.';\nimport { maskString, useBaiSignedRequestWithPromise } from '../helper';\nimport { useTanMutation, useTanQuery } from './reactQueryAlias';\nimport _ from 'lodash';\nimport { useEffect, useState } from 'react';\n\nexport interface QuotaScope {\n  id: string;\n  quota_scope_id: string;\n  storage_host_name: string;\n  details: {\n    hard_limit_bytes: number | null;\n    usage_bytes: number | null;\n    usage_count: number | null;\n  };\n}\n\nexport const useResourceSlots = () => {\n  const [key, checkUpdate] = useUpdatableState('first');\n  const baiClient = useSuspendedBackendaiClient();\n  const { data: resourceSlots } = useTanQuery<{\n    cpu?: string;\n    mem?: string;\n    'cuda.shares'?: string;\n    'cuda.device'?: string;\n    'rocm.device'?: string;\n    'tpu.device'?: string;\n    'ipu.device'?: string;\n    'atom.device'?: string;\n    'warboy.device'?: string;\n  }>({\n    queryKey: ['useResourceSlots', key],\n    queryFn: () => {\n      return baiClient.get_resource_slots();\n    },\n    staleTime: 0,\n  });\n  return [\n    resourceSlots,\n    {\n      refresh: () => checkUpdate(),\n    },\n  ] as const;\n};\n\nexport const useResourceSlotsByResourceGroup = (name?: string) => {\n  const [key, checkUpdate] = useUpdatableState('first');\n  const baiRequestWithPromise = useBaiSignedRequestWithPromise();\n  const { data: resourceSlots } = useTanQuery<{\n    cpu: string;\n    mem: string;\n    'cuda.shares': string;\n    'cuda.device': string;\n    'rocm.device': string;\n    'ipu.device': string;\n    'atom.device': string;\n    'warboy.device': string;\n    [key: string]: string;\n  }>({\n    queryKey: ['useResourceSlots', name, key],\n    queryFn: () => {\n      // return baiClient.get_resource_slots();\n      if (_.isEmpty(name)) {\n        return;\n      } else {\n        return baiRequestWithPromise({\n          method: 'GET',\n          url: `/config/resource-slots/details?sgroup=${name}`,\n        });\n      }\n    },\n    staleTime: 0,\n  });\n  return [\n    resourceSlots,\n    {\n      refresh: () => checkUpdate(),\n    },\n  ] as const;\n};\n\ninterface UserInfo {\n  full_name: string;\n  email: string;\n}\n\ntype mutationOptions<T> = {\n  onSuccess?: (value: T) => void;\n  onError?: (error: any) => void;\n};\n\nexport const useCurrentUserInfo = () => {\n  const baiClient = useSuspendedBackendaiClient();\n\n  const [userInfo, _setUserInfo] = useState<UserInfo>({\n    full_name: baiClient.full_name,\n    email: baiClient.email,\n  });\n\n  const getUsername = () => {\n    let name: string =\n      _.trim(userInfo.full_name).length > 0\n        ? userInfo.full_name\n        : userInfo.email;\n    // mask username only when the configuration is enabled\n    if (baiClient._config.maskUserInfo) {\n      const maskStartIdx = 2;\n      const emailPattern =\n        /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      const isEmail: boolean = emailPattern.test(name);\n      const maskLength = isEmail\n        ? name.split('@')[0].length - maskStartIdx\n        : name.length - maskStartIdx;\n      name = maskString(name, '*', maskStartIdx, maskLength);\n    }\n    return name;\n  };\n\n  useEffect(() => {\n    const handler = (e: any) => {\n      if (baiClient.supports('change-user-name')) {\n        const input = e.detail;\n        _setUserInfo((v) => ({\n          ...v,\n          full_name: input,\n        }));\n      }\n    };\n    document.addEventListener('current-user-info-changed', handler);\n    return () => {\n      document.removeEventListener('current-user-info-changed', handler);\n    };\n  }, [baiClient]);\n\n  const mutationToUpdateUserFullName = useTanMutation({\n    mutationFn: (values: { email: string; full_name: string }) => {\n      return baiClient.update_full_name(values.email, values.full_name);\n    },\n  });\n  const mutationToUpdateUserPassword = useTanMutation({\n    mutationFn: (values: {\n      old_password: string;\n      new_password: string;\n      new_password2: string;\n    }) => {\n      return baiClient.update_password(\n        values.old_password,\n        values.new_password,\n        values.new_password2,\n      );\n    },\n  });\n\n  return [\n    {\n      ...userInfo,\n      username: getUsername(),\n      isPendingMutation:\n        mutationToUpdateUserFullName.isLoading ||\n        mutationToUpdateUserPassword.isLoading,\n    },\n    {\n      updateFullName: (\n        newFullName: string,\n        options?: mutationOptions<string>,\n      ) => {\n        mutationToUpdateUserFullName.mutate(\n          {\n            full_name: newFullName,\n            email: baiClient.email,\n          },\n          {\n            onSuccess: () => {\n              options?.onSuccess && options.onSuccess(newFullName);\n              document.dispatchEvent(\n                new CustomEvent('current-user-info-changed', {\n                  detail: newFullName,\n                }),\n              );\n              _setUserInfo((v) => ({\n                ...v,\n                full_name: newFullName,\n              }));\n            },\n            onError: (error: any) => {\n              options?.onError && options.onError(error);\n            },\n          },\n        );\n      },\n      updatePassword: (\n        params: {\n          old_password: string;\n          new_password: string;\n          new_password2: string;\n        },\n        options?: mutationOptions<undefined>,\n      ) => {\n        mutationToUpdateUserPassword.mutate(params, {\n          onSuccess: () => {\n            options?.onSuccess && options.onSuccess(undefined);\n          },\n          onError: (error: any) => {\n            options?.onError && options.onError(error);\n          },\n        });\n      },\n    },\n  ] as const;\n};\n","// This icon file is generated automatically.\nvar WarningTwoTone = { \"icon\": function render(primaryColor, secondaryColor) { return { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M955.7 856l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zm-783.5-27.9L512 239.9l339.8 588.2H172.2z\", \"fill\": primaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M172.2 828.1h679.6L512 239.9 172.2 828.1zM560 720a48.01 48.01 0 01-96 0 48.01 48.01 0 0196 0zm-16-304v184c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V416c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M464 720a48 48 0 1096 0 48 48 0 10-96 0zm16-304v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8z\", \"fill\": primaryColor } }] }; }, \"name\": \"warning\", \"theme\": \"twotone\" };\nexport default WarningTwoTone;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport WarningTwoToneSvg from \"@ant-design/icons-svg/es/asn/WarningTwoTone\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar WarningTwoTone = function WarningTwoTone(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: WarningTwoToneSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  WarningTwoTone.displayName = 'WarningTwoTone';\n}\nexport default /*#__PURE__*/React.forwardRef(WarningTwoTone);"],"names":["manipulateGraphQLQueryWithClientDirectives","query","variables","arguments","length","undefined","isCompatibleWith","ast","parse","newAst","visit","Field","enter","node","_node$directives","directives","find","directive","_directive$arguments","_directive$arguments2","_directive$arguments3","_directive$arguments4","directiveName","name","value","firstArgName","firstArgValue","arg","version","kind","leave","_node$selectionSet$se","selectionSet","selections","Directive","includes","usedVariables","Variable","VariableDefinition","variableDefinition","variable","print","RelayFeatureFlags","ENABLE_RELAY_RESOLVERS","fetchFn","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","_globalThis$backendai2","_globalThis$backendai3","transformedQuery","reqBody","reqInfo","result","wrap","_context","prev","next","globalThis","backendaiclient","Promise","resolve","document","addEventListener","onBackendAIConnected","removeEventListener","text","_globalThis$backendai","isManagerVersionCompatibleWith","newSignedRequest","_wrapWithPromise","catch","err","t0","sent","abrupt","stop","_x","_x2","apply","RelayEnvironment","Environment","network","Network","create","subscribeFn","store","Store","RecordSource","dayjs","weekday","localeData","localizedFormat","relativeTime","utc","timezone","WebComponentContext","React","ShadowRootContext","useShadowRoot","useWebComponentInfo","queryClient","QueryClient","defaultOptions","queries","suspense","refetchOnWindowFocus","retry","i18n","initReactI18next","use","Backend","init","backend","loadPath","lng","backendaioptions","get","fallbackLng","interpolation","escapeValue","react","transSupportBasicHtmlNodes","transKeepBasicHtmlNodesFor","RoutingEventHandler","navigate","useNavigate","useLayoutEffect","handleNavigate","e","detail","replace","children","styles","shadowRoot","dispatchEvent","cache","useMemo","createCache","_useCurrentLanguage","_useState","useState","_useState2","_slicedToArray","lang","_setLang","useTranslation","useEffect","setTimeout","changeLanguage","handler","_e$detail","_e$detail2","window","useCurrentLanguage","themeConfig","useCustomThemeConfig","componentValues","moveTo","path","params","_jsx","_Fragment","RelayEnvironmentProvider","environment","_jsxs","QueryClientProvider","client","Provider","ConfigProvider","getPopupContainer","triggerNode","parentNode","locale","ko_KR","en_US","theme","App","StyleProvider","container","Suspense","fallback","BrowserRouter","QueryParamProvider","adapter","ReactRouter6Adapter","options","passwordPattern","parsedValue","_useWebComponentInfo","JSON","error","open","currentPassword","username","api_endpoint","_parsedValue","token","useToken","_Form$useForm","Form","useForm","form","t","resetFields","anonymousBaiClient","useAnonymousBackendaiClient","mutation","useTanMutation","mutationFn","body","baiSignedRequestWithPromise","method","url","onSubmit","validateFields","then","values","mutate","current_password","new_password","newPassword","onSuccess","data","context","onError","Modal","centered","mask","onCancel","keyboard","maskClosable","footer","width","destroyOnClose","forceRender","Flex","direction","justify","align","gap","style","alignSelf","paddingTop","paddingMD","paddingBottom","Typography","Title","level","margin","WarningTwoTone","twoToneColor","colorWarning","layout","initialValues","disabled","isLoading","Item","label","rules","required","pattern","message","toString","validator","_","reject","Error","hasFeedback","Input","Password","dependencies","getFieldValue","onPressEnter","Button","type","onClick","loading","_ref$userFrgmt","userFrgmt","onRequestClose","baiModalProps","_objectWithoutProperties","_excluded","user","useFragment","_TOTPActivateModalFragment","require","baiClient","useSuspendedBackendaiClient","initializedTotp","useQuery","queryKey","email","queryFn","totp_activated","initialize_totp","staleTime","cacheTime","mutationToActivateTotp","activate_totp","otp","BAIModal","_objectSpread","title","confirmLoading","onOk","success","zIndex","Spin","preserve","validateTrigger","marginSM","QRCode","totp_uri","Text","copyable","code","totp_key","maxLength","allowClear","placeholder","maxWidth","_message$useMessage","useMessage","_message$useMessage2","messageApi","contextHolder","_Modal$useModal","useModal","_Modal$useModal2","modal","modalContextHolder","_useToggle","useToggle","_useToggle2","isOpenTOTPActivateModal","toggleTOTPActivateModal","toggle","isManagerSupportingTOTP","useTanQuery","totpSupported","supports","_useCurrentUserInfo","useCurrentUserInfo","_useCurrentUserInfo2","userInfo","userMutations","_useUpdatableState","useUpdatableState","_useUpdatableState2","fetchKey","updateFetchKey","deferredMergedFetchKey","useDeferredValue","useLazyLoadQuery","_UserProfileSettingModalQuery","isNotSupportTotp","fetchPolicy","mutationToRemoveTotp","remove_totp","okText","cancelText","isPendingMutation","updateFullName","full_name","newFullName","content","newPasswordConfirm","originalPassword","updatePassword","new_password2","old_password","labelCol","span","_ref2","_ref3","valuePropName","Switch","onChange","checked","setFieldValue","confirm","icon","ExclamationCircleFilled","okType","TOTPActivateModal","v0","v1","v2","v3","hash","useResourceSlots","key","checkUpdate","get_resource_slots","refresh","_setUserInfo","input","v","mutationToUpdateUserFullName","update_full_name","mutationToUpdateUserPassword","update_password","_config","maskUserInfo","maskLength","test","split","maskString","getUsername","CustomEvent","primaryColor","secondaryColor","props","ref","AntdIcon","_extends","WarningTwoToneSvg"],"sourceRoot":""}