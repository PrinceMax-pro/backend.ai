{"version":3,"file":"static/js/805.19245d32.chunk.js","mappings":"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","sources":["components/ContainerRegistryEditorModal.tsx","../node_modules/@ant-design/icons-svg/es/asn/SyncOutlined.js","../node_modules/@ant-design/icons/es/icons/SyncOutlined.js","components/ContainerRegistryList.tsx","components/__generated__/ContainerRegistryEditorModalCreateMutation.graphql.ts","components/__generated__/ContainerRegistryEditorModalFragment.graphql.ts","components/__generated__/ContainerRegistryEditorModalModifyMutation.graphql.ts","components/__generated__/ContainerRegistryListDeleteMutation.graphql.ts","components/__generated__/ContainerRegistryListDomainMutation.graphql.ts","components/__generated__/ContainerRegistryListQuery.graphql.ts","../node_modules/@ant-design/icons-svg/es/asn/DeleteOutlined.js","../node_modules/@ant-design/icons/es/icons/DeleteOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/ExclamationCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/ExclamationCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/SettingOutlined.js","../node_modules/@ant-design/icons/es/icons/SettingOutlined.js"],"sourcesContent":["import BAIModal, { BAIModalProps } from './BAIModal';\nimport { ContainerRegistryEditorModalCreateMutation } from './__generated__/ContainerRegistryEditorModalCreateMutation.graphql';\nimport { ContainerRegistryEditorModalFragment$key } from './__generated__/ContainerRegistryEditorModalFragment.graphql';\nimport { ContainerRegistryEditorModalModifyMutation } from './__generated__/ContainerRegistryEditorModalModifyMutation.graphql';\nimport { message, Form, Input, Select, Modal, Checkbox } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment, useMutation } from 'react-relay';\n\ninterface ContainerRegistryEditorModalProps\n  extends Omit<BAIModalProps, 'onOk'> {\n  existingHostnames?: string[];\n  onOk: (type: 'create' | 'modify') => void;\n  containerRegistryFrgmt?: ContainerRegistryEditorModalFragment$key | null;\n}\nconst ContainerRegistryEditorModal: React.FC<\n  ContainerRegistryEditorModalProps\n> = ({\n  existingHostnames,\n  containerRegistryFrgmt = null,\n  onOk,\n  ...modalProps\n}) => {\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n\n  const [messageAPI, contextHolder] = message.useMessage();\n  const [modal, modalContextHolder] = Modal.useModal();\n\n  const containerRegistry = useFragment(\n    graphql`\n      fragment ContainerRegistryEditorModalFragment on ContainerRegistry {\n        id\n        hostname\n        config {\n          url\n          type\n          project\n          username\n          ssl_verify\n        }\n      }\n    `,\n    containerRegistryFrgmt,\n  );\n  const [commitCreateRegistry, isInflightCreateRegistry] =\n    useMutation<ContainerRegistryEditorModalCreateMutation>(graphql`\n      mutation ContainerRegistryEditorModalCreateMutation(\n        $hostname: String!\n        $props: CreateContainerRegistryInput!\n      ) {\n        create_container_registry(hostname: $hostname, props: $props) {\n          container_registry {\n            id\n            hostname\n            config {\n              url\n              type\n              project\n              username\n              password\n              ssl_verify\n            }\n          }\n        }\n      }\n    `);\n\n  const [commitModifyRegistry, isInflightModifyRegistry] =\n    useMutation<ContainerRegistryEditorModalModifyMutation>(graphql`\n      mutation ContainerRegistryEditorModalModifyMutation(\n        $hostname: String!\n        $props: ModifyContainerRegistryInput!\n      ) {\n        modify_container_registry(hostname: $hostname, props: $props) {\n          container_registry {\n            id\n            hostname\n            config {\n              url\n              type\n              project\n              username\n              password\n              ssl_verify\n            }\n          }\n        }\n      }\n    `);\n\n  const handleSave = async () => {\n    return form\n      .validateFields()\n      .then((values) => {\n        const mutationVariables = {\n          hostname: values.hostname,\n          props: {\n            url: values.config.url,\n            type: values.config.type,\n            project:\n              values.config.project === 'docker'\n                ? undefined\n                : values.config.project,\n            username: _.isEmpty(values.config.username)\n              ? null\n              : values.config.username,\n            password: values.isChangedPassword\n              ? _.isEmpty(values.config.password)\n                ? null // unset\n                : values.config.password\n              : undefined, // no change\n          },\n        };\n        if (containerRegistry) {\n          if (!values.isChangedPassword) {\n            delete mutationVariables.props.password;\n          }\n          commitModifyRegistry({\n            variables: mutationVariables,\n            onCompleted: (res, error) => {\n              if (error) {\n                messageAPI.error(t('dialog.ErrorOccurred'));\n              } else {\n                onOk && onOk('modify');\n              }\n            },\n            onError: (error) => {\n              messageAPI.error(t('dialog.ErrorOccurred'));\n            },\n          });\n        } else {\n          commitCreateRegistry({\n            variables: mutationVariables,\n            onCompleted: (res, error) => {\n              if (error) {\n                messageAPI.error(t('dialog.ErrorOccurred'));\n              } else {\n                onOk && onOk('create');\n              }\n            },\n            onError(error) {\n              messageAPI.error(t('dialog.ErrorOccurred'));\n            },\n          });\n        }\n      })\n      .catch((error) => {});\n  };\n  return (\n    <BAIModal\n      title={\n        containerRegistry\n          ? t('registry.ModifyRegistry')\n          : t('registry.AddRegistry')\n      }\n      okText={containerRegistry ? t('button.Save') : t('button.Add')}\n      confirmLoading={isInflightCreateRegistry || isInflightModifyRegistry}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            if (_.includes(values.config?.type, 'harbor')) {\n              modal.confirm({\n                title: t('button.Confirm'),\n                content: t('registry.ConfirmNoUserName'),\n                onOk: () => {\n                  handleSave();\n                },\n              });\n            } else {\n              handleSave();\n            }\n          })\n          .catch(() => {});\n      }}\n      {...modalProps}\n      destroyOnClose\n    >\n      {contextHolder}\n      {modalContextHolder}\n      <Form\n        form={form}\n        layout=\"vertical\"\n        requiredMark=\"optional\"\n        initialValues={\n          containerRegistry\n            ? {\n                ...containerRegistry,\n                config: {\n                  ...containerRegistry.config,\n                  project: containerRegistry.config?.project || undefined,\n                },\n              }\n            : {\n                config: {\n                  type: 'docker',\n                },\n              }\n        }\n        preserve={false}\n      >\n        <Form.Item\n          label={t('registry.Hostname')}\n          name=\"hostname\"\n          required\n          rules={[\n            {\n              required: true,\n              message: t('registry.DescHostnameIsEmpty'),\n              pattern: new RegExp('^.+$'),\n            },\n            {\n              validator: (_, value) => {\n                if (!containerRegistry && existingHostnames?.includes(value)) {\n                  return Promise.reject(\n                    t('registry.RegistryHostnameAlreadyExists'),\n                  );\n                }\n                return Promise.resolve();\n              },\n            },\n          ]}\n        >\n          <Input\n            disabled={!!containerRegistry}\n            // placeholder={t('registry.Hostname')}\n            value={containerRegistry?.hostname || undefined}\n          />\n        </Form.Item>\n        <Form.Item\n          name={['config', 'url']}\n          label={t('registry.RegistryURL')}\n          required\n          rules={[\n            {\n              required: true,\n            },\n            {\n              type: 'url',\n            },\n            {\n              validator: (_, value) => {\n                if (\n                  value &&\n                  !value.startsWith('http://') &&\n                  !value.startsWith('https://')\n                ) {\n                  return Promise.reject(t('registry.DescURLStartString'));\n                }\n                return Promise.resolve();\n              },\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          noStyle\n          shouldUpdate={(prev, next) =>\n            _.isEmpty(prev.config?.password) !==\n            _.isEmpty(next.config?.password)\n          }\n        >\n          {() => {\n            form.validateFields([['config', 'username']]);\n            return (\n              <Form.Item\n                name={['config', 'username']}\n                label={t('registry.Username')}\n                rules={[\n                  {\n                    required: !_.isEmpty(\n                      form.getFieldValue(['config', 'password']),\n                    ),\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            );\n          }}\n        </Form.Item>\n\n        <Form.Item label={t('registry.Password')}>\n          <Form.Item\n            noStyle\n            shouldUpdate={(prev, next) =>\n              prev.isChangedPassword !== next.isChangedPassword\n            }\n          >\n            {() => (\n              <Form.Item noStyle name={['config', 'password']}>\n                <Input.Password\n                  disabled={\n                    !_.isEmpty(containerRegistry) &&\n                    !form.getFieldValue('isChangedPassword')\n                  }\n                />\n              </Form.Item>\n            )}\n          </Form.Item>\n          {!_.isEmpty(containerRegistry) && (\n            <Form.Item noStyle name=\"isChangedPassword\" valuePropName=\"checked\">\n              <Checkbox\n                onChange={(e) => {\n                  if (!e.target.checked) {\n                    form.setFieldValue(['config', 'password'], '');\n                  }\n                }}\n              >\n                {t('webui.menu.ChangePassword')}\n              </Checkbox>\n            </Form.Item>\n          )}\n        </Form.Item>\n        <Form.Item\n          name={['config', 'type']}\n          label={t('registry.RegistryType')}\n          required\n          rules={[\n            {\n              required: true,\n              message: t('registry.PleaseSelectOption'),\n            },\n          ]}\n        >\n          <Select\n            options={[\n              {\n                value: 'docker',\n              },\n              {\n                value: 'harbor',\n              },\n              {\n                value: 'harbor2',\n              },\n            ]}\n            onChange={() => {\n              // form.validateFields();\n            }}\n          ></Select>\n        </Form.Item>\n        <Form.Item\n          shouldUpdate={(prev, next) =>\n            prev?.config?.type !== next?.config?.type\n          }\n          noStyle\n        >\n          {() => {\n            return (\n              form.getFieldValue(['config', 'type']) !== 'docker' && (\n                <Form.Item\n                  name={['config', 'project']}\n                  label={t('registry.ProjectName')}\n                  required\n                  rules={[\n                    {\n                      required: true,\n                      message: t('registry.ProjectNameIsRequired'),\n                    },\n                  ]}\n                >\n                  {/* <Input\n                  // disabled={\n                  //   form.getFieldValue(['config', 'type']) === 'docker'\n                  // }\n                  /> */}\n                  <Select\n                    mode=\"tags\"\n                    open={false}\n                    tokenSeparators={[',', ' ']}\n                    suffixIcon={null}\n                  />\n                </Form.Item>\n              )\n            );\n          }}\n        </Form.Item>\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default ContainerRegistryEditorModal;\n","// This icon file is generated automatically.\nvar SyncOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M168 504.2c1-43.7 10-86.1 26.9-126 17.3-41 42.1-77.7 73.7-109.4S337 212.3 378 195c42.4-17.9 87.4-27 133.9-27s91.5 9.1 133.8 27A341.5 341.5 0 01755 268.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 003 14.1l175.7 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c0-6.7-7.7-10.5-12.9-6.3l-56.4 44.1C765.8 155.1 646.2 92 511.8 92 282.7 92 96.3 275.6 92 503.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8zm756 7.8h-60c-4.4 0-7.9 3.5-8 7.8-1 43.7-10 86.1-26.9 126-17.3 41-42.1 77.8-73.7 109.4A342.45 342.45 0 01512.1 856a342.24 342.24 0 01-243.2-100.8c-9.9-9.9-19.2-20.4-27.8-31.4l60.2-47a8 8 0 00-3-14.1l-175.7-43c-5-1.2-9.9 2.6-9.9 7.7l-.7 181c0 6.7 7.7 10.5 12.9 6.3l56.4-44.1C258.2 868.9 377.8 932 512.2 932c229.2 0 415.5-183.7 419.8-411.8a8 8 0 00-8-8.2z\" } }] }, \"name\": \"sync\", \"theme\": \"outlined\" };\nexport default SyncOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport SyncOutlinedSvg from \"@ant-design/icons-svg/es/asn/SyncOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar SyncOutlined = function SyncOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: SyncOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  SyncOutlined.displayName = 'SyncOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(SyncOutlined);","import { filterNonNullItems } from '../helper';\nimport { useSuspendedBackendaiClient, useUpdatableState } from '../hooks';\nimport { usePainKiller } from '../hooks/usePainKiller';\nimport BAIModal from './BAIModal';\nimport ContainerRegistryEditorModal from './ContainerRegistryEditorModal';\nimport Flex from './Flex';\nimport { ContainerRegistryListDeleteMutation } from './__generated__/ContainerRegistryListDeleteMutation.graphql';\nimport { ContainerRegistryListDomainMutation } from './__generated__/ContainerRegistryListDomainMutation.graphql';\nimport {\n  ContainerRegistryListQuery,\n  ContainerRegistryListQuery$data,\n} from './__generated__/ContainerRegistryListQuery.graphql';\nimport {\n  DeleteOutlined,\n  ExclamationCircleOutlined,\n  PlusOutlined,\n  ReloadOutlined,\n  SettingOutlined,\n  SyncOutlined,\n} from '@ant-design/icons';\nimport {\n  Button,\n  Form,\n  Input,\n  Switch,\n  Table,\n  Tag,\n  Tooltip,\n  Typography,\n  theme,\n  message,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport { useState, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery, useMutation } from 'react-relay';\n\nexport type ContainerRegistry = NonNullable<\n  NonNullable<\n    NonNullable<ContainerRegistryListQuery$data>['container_registries']\n  >\n>[0];\n\nconst ContainerRegistryList = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  const [fetchKey, updateFetchKey] = useUpdatableState('initial-fetch');\n  const [isPendingReload, startReloadTransition] = useTransition();\n  const painKiller = usePainKiller();\n  const [messageAPI, contextHolder] = message.useMessage();\n  const { container_registries, domain } =\n    useLazyLoadQuery<ContainerRegistryListQuery>(\n      graphql`\n        query ContainerRegistryListQuery($domain: String!) {\n          container_registries {\n            ...ContainerRegistryEditorModalFragment\n            id\n            hostname\n            config {\n              url\n              type\n              project\n              username\n              password\n              ssl_verify\n            }\n          }\n          domain(name: $domain) {\n            name\n            allowed_docker_registries\n          }\n        }\n      `,\n      {\n        domain: baiClient._config.domainName,\n      },\n      {\n        fetchPolicy: 'network-only',\n        fetchKey,\n      },\n    );\n\n  const [commitDeleteMutation, isInFlightDeleteMutation] =\n    useMutation<ContainerRegistryListDeleteMutation>(graphql`\n      mutation ContainerRegistryListDeleteMutation($hostname: String!) {\n        delete_container_registry(hostname: $hostname) {\n          container_registry {\n            id\n          }\n        }\n      }\n    `);\n\n  const [commitDomainMutation, isInFlightDomationMutation] =\n    useMutation<ContainerRegistryListDomainMutation>(graphql`\n      mutation ContainerRegistryListDomainMutation(\n        $domain: String!\n        $allowed_docker_registries: [String]!\n      ) {\n        modify_domain(\n          name: $domain\n          props: { allowed_docker_registries: $allowed_docker_registries }\n        ) {\n          ok\n          # TODO: update domain when it supports relay global id\n          # domain {\n          #   name\n          #   allowed_vfolder_hosts\n          # }\n        }\n      }\n    `);\n\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const [editingRegistry, setEditingRegistry] =\n    useState<ContainerRegistry>(null);\n  const [deletingRegistry, setDeletingRegistry] =\n    useState<ContainerRegistry>(null);\n  const [deletingConfirmText, setDeletingConfirmText] = useState('');\n  const [isNewModalOpen, setIsNewModalOpen] = useState(false);\n\n  const [inFlightHostName, setInFlightHostName] = useState<string>();\n\n  // const deferredInFlightDomainName = useDeferredValue(inFlightDomainName);\n\n  const rescanImage = async (hostname: string) => {\n    const indicator: any =\n      // @ts-ignore\n      await globalThis.lablupIndicator.start('indeterminate');\n    const handleReScanError = (err: any) => {\n      console.log(err);\n      indicator.set(50, t('registry.RescanFailed'));\n      indicator.end(1000);\n      if (err && err.message) {\n        // @ts-ignore\n        globalThis.lablupNotification.text = painKiller.relieve(err.title);\n        // @ts-ignore\n        globalThis.lablupNotification.detail = err.message;\n        // @ts-ignore\n        globalThis.lablupNotification.show(true, err);\n      }\n    };\n    indicator.set(10, t('registry.UpdatingRegistryInfo'));\n    baiClient.maintenance\n      .rescan_images(hostname)\n      .then(({ rescan_images }: any) => {\n        if (rescan_images.ok) {\n          indicator.set(0, t('registry.RescanImages'));\n          const sse: EventSource = baiClient.maintenance.attach_background_task(\n            rescan_images.task_id,\n          );\n          sse.addEventListener('bgtask_updated', (e) => {\n            const data = JSON.parse(e['data']);\n            const ratio = data.current_progress / data.total_progress;\n            indicator.set(100 * ratio, t('registry.RescanImages'));\n          });\n          sse.addEventListener('bgtask_done', () => {\n            const event = new CustomEvent('image-rescanned');\n            document.dispatchEvent(event);\n            indicator.set(100, t('registry.RegistryUpdateFinished'));\n            sse.close();\n          });\n          sse.addEventListener('bgtask_failed', (e) => {\n            console.log('bgtask_failed', e['data']);\n            sse.close();\n            handleReScanError(\n              new Error('Background Image scanning task has failed'),\n            );\n          });\n          sse.addEventListener('bgtask_cancelled', () => {\n            sse.close();\n            handleReScanError(\n              new Error('Background Image scanning task has been cancelled'),\n            );\n          });\n        } else {\n          indicator.set(50, t('registry.RegistryUpdateFailed'));\n          indicator.end(1000);\n\n          // TODO: handle notification in react side\n          // @ts-ignore\n          globalThis.lablupNotification.text = painKiller.relieve(\n            rescan_images.msg,\n          );\n          // @ts-ignore\n          globalThis.lablupNotification.detail = rescan_images.msg;\n          // @ts-ignore\n          globalThis.lablupNotification.show();\n        }\n      })\n      .catch(handleReScanError);\n  };\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      style={{\n        flex: 1,\n        // height: 'calc(100vh - 183px)',\n      }}\n    >\n      {contextHolder}\n      <Flex\n        direction=\"row\"\n        justify=\"end\"\n        gap={'sm'}\n        style={{ padding: token.paddingSM }}\n      >\n        <Button\n          type=\"primary\"\n          icon={<PlusOutlined />}\n          onClick={() => {\n            setIsNewModalOpen(true);\n          }}\n        >\n          {t('registry.AddRegistry')}\n        </Button>\n        <Tooltip title={t('button.Refresh')}>\n          <Button\n            loading={isPendingReload}\n            icon={<ReloadOutlined />}\n            onClick={() => {\n              startReloadTransition(() => {\n                updateFetchKey();\n              });\n            }}\n          />\n        </Tooltip>\n      </Flex>\n      <Table\n        scroll={{ x: 'max-content' }}\n        pagination={false}\n        columns={[\n          // {\n          //   title: '#',\n          //   dataIndex: 'id',\n          // },\n          {\n            title: t('registry.Hostname'),\n            dataIndex: 'hostname',\n            // fixed: 'left',\n          },\n          {\n            title: t('registry.RegistryURL'),\n            dataIndex: ['config', 'url'],\n          },\n          {\n            title: t('registry.Type'),\n            dataIndex: ['config', 'type'],\n          },\n          {\n            title: t('registry.HarborProject'),\n            render: (value, record) => {\n              return _.map(record.config?.project, (prjName) => {\n                return <Tag key={prjName}>{prjName || ''}</Tag>;\n              });\n            },\n          },\n          {\n            title: t('registry.Username'),\n            dataIndex: ['config', 'username'],\n          },\n          {\n            title: t('registry.Password'),\n            dataIndex: ['config', 'password'],\n          },\n          {\n            title: t('general.Enabled'),\n            render: (value, record) => {\n              const isEnabled = _.includes(\n                domain?.allowed_docker_registries,\n                record.hostname,\n              );\n              return (\n                <Switch\n                  checked={\n                    inFlightHostName === record.hostname + fetchKey\n                      ? !isEnabled\n                      : isEnabled\n                  }\n                  disabled={isPendingReload || isInFlightDomationMutation}\n                  loading={inFlightHostName === record.hostname + fetchKey}\n                  onChange={(isOn) => {\n                    if (!_.isString(record.hostname)) return;\n                    let newAllowedDockerRegistries = _.clone(\n                      domain?.allowed_docker_registries || [],\n                    ) as string[];\n                    if (isOn) {\n                      newAllowedDockerRegistries.push(record.hostname);\n                    } else {\n                      newAllowedDockerRegistries = _.without(\n                        newAllowedDockerRegistries,\n                        record.hostname,\n                      );\n                    }\n\n                    setInFlightHostName(record.hostname + fetchKey);\n                    commitDomainMutation({\n                      variables: {\n                        domain: baiClient._config.domainName,\n                        allowed_docker_registries: newAllowedDockerRegistries,\n                      },\n                      onCompleted: (data) => {\n                        startReloadTransition(() => {\n                          updateFetchKey();\n                        });\n\n                        messageAPI.info({\n                          key: 'registry-enabled',\n                          content: isOn\n                            ? t('registry.RegistryTurnedOn')\n                            : t('registry.RegistryTurnedOff'),\n                        });\n                      },\n                    });\n                  }}\n                />\n                // <Button type=\"primary\">\n                //   {record?.config?.ssl_verify ? 'Yes' : 'No'}\n                // </Button>\n              );\n            },\n          },\n          {\n            title: t('general.Control'),\n            fixed: 'right',\n            render(value, record, index) {\n              return (\n                <Flex>\n                  <Tooltip title={t('button.Edit')}>\n                    <Button\n                      size=\"large\"\n                      style={{\n                        color: token.colorInfo,\n                      }}\n                      type=\"text\"\n                      icon={<SettingOutlined />}\n                      onClick={() => {\n                        setEditingRegistry(record);\n                      }}\n                    />\n                  </Tooltip>\n                  <Tooltip title={t('button.Delete')}>\n                    <Button\n                      size=\"large\"\n                      danger\n                      type=\"text\"\n                      icon={<DeleteOutlined />}\n                      onClick={() => {\n                        setDeletingRegistry(record);\n                      }}\n                    />\n                  </Tooltip>\n                  <Tooltip title={t('maintenance.RescanImages')}>\n                    <Button\n                      size=\"large\"\n                      type=\"text\"\n                      icon={\n                        <SyncOutlined\n                          onClick={() => {\n                            record.hostname && rescanImage(record.hostname);\n                          }}\n                        />\n                      }\n                    />\n                  </Tooltip>\n                </Flex>\n              );\n            },\n          },\n        ]}\n        dataSource={filterNonNullItems(container_registries)}\n      />\n      <ContainerRegistryEditorModal\n        containerRegistryFrgmt={editingRegistry}\n        existingHostnames={_.map(\n          container_registries,\n          (r) => r?.hostname || '',\n        )}\n        open={!!editingRegistry || isNewModalOpen}\n        onOk={(type) => {\n          if (type === 'create') {\n            updateFetchKey();\n            messageAPI.info(t('registry.RegistrySuccessfullyAdded'));\n          } else if (type === 'modify') {\n            messageAPI.info(t('registry.RegistrySuccessfullyModified'));\n          }\n          setEditingRegistry(null);\n          setIsNewModalOpen(false);\n        }}\n        onCancel={() => {\n          setEditingRegistry(null);\n          setIsNewModalOpen(false);\n        }}\n        centered={false}\n      />\n      <BAIModal\n        title={\n          <>\n            <ExclamationCircleOutlined\n              style={{\n                color: token.colorWarning,\n              }}\n            />{' '}\n            {t('dialog.warning.CannotBeUndone')}\n          </>\n        }\n        okText={t('button.Delete')}\n        okButtonProps={{\n          danger: true,\n          disabled: deletingConfirmText !== deletingRegistry?.hostname,\n        }}\n        onOk={() => {\n          if (deletingRegistry) {\n            commitDeleteMutation({\n              variables: {\n                hostname: deletingRegistry.hostname || '',\n              },\n              onCompleted: (response, error) => {\n                if (error) {\n                  setDeletingRegistry(null);\n                  messageAPI.error({\n                    key: 'registry-deletion-failed',\n                    content: t('dialog.ErrorOccurred'),\n                  });\n                } else {\n                  startReloadTransition(() => {\n                    updateFetchKey();\n                  });\n                  messageAPI.info({\n                    key: 'registry-deleted',\n                    content: t('registry.RegistrySuccessfullyDeleted'),\n                  });\n                  setDeletingRegistry(null);\n                }\n              },\n              onError: (error) => {\n                messageAPI.error({\n                  key: 'registry-deletion-failed',\n                  content: t('dialog.ErrorOccurred'),\n                });\n              },\n            });\n          } else {\n            setDeletingRegistry(null);\n          }\n        }}\n        confirmLoading={isInFlightDeleteMutation}\n        onCancel={() => {\n          setDeletingRegistry(null);\n        }}\n        destroyOnClose\n        open={!!deletingRegistry}\n      >\n        <Flex\n          direction=\"column\"\n          align=\"stretch\"\n          gap=\"sm\"\n          style={{\n            marginTop: token.marginMD,\n          }}\n        >\n          <Typography.Text>\n            <Typography.Text code>{deletingRegistry?.hostname}</Typography.Text>{' '}\n            {t('registry.TypeRegistryNameToDelete')}\n          </Typography.Text>\n          <Form>\n            <Form.Item\n              name={'confirmText'}\n              // help=\"asdf\"\n              // validateStatus={\n              //   deletingConfirmText &&\n              //   deletingConfirmText !== deletingRegistry?.hostname\n              //     ? 'error'\n              //     : undefined\n              // }\n              rules={[\n                {\n                  required: true,\n                  message: t('registry.HostnameDoesNotMatch'),\n                  validator: async () => {\n                    if (deletingConfirmText === deletingRegistry?.hostname) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject();\n                  },\n                },\n              ]}\n            >\n              <Input\n                autoComplete=\"off\"\n                value={deletingConfirmText}\n                onChange={(e) => setDeletingConfirmText(e.target.value)}\n              />\n            </Form.Item>\n          </Form>\n        </Flex>\n      </BAIModal>\n    </Flex>\n  );\n};\n\nexport default ContainerRegistryList;\n","/**\n * @generated SignedSource<<6b43f0cb806de0ee3c3c1e66e826d277>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type CreateContainerRegistryInput = {\n  password?: string | null;\n  project?: ReadonlyArray<string | null> | null;\n  ssl_verify?: boolean | null;\n  type: string;\n  url: string;\n  username?: string | null;\n};\nexport type ContainerRegistryEditorModalCreateMutation$variables = {\n  hostname: string;\n  props: CreateContainerRegistryInput;\n};\nexport type ContainerRegistryEditorModalCreateMutation$data = {\n  readonly create_container_registry: {\n    readonly container_registry: {\n      readonly config: {\n        readonly password: string | null;\n        readonly project: ReadonlyArray<string | null> | null;\n        readonly ssl_verify: boolean | null;\n        readonly type: string;\n        readonly url: string;\n        readonly username: string | null;\n      } | null;\n      readonly hostname: string | null;\n      readonly id: string;\n    } | null;\n  } | null;\n};\nexport type ContainerRegistryEditorModalCreateMutation = {\n  response: ContainerRegistryEditorModalCreateMutation$data;\n  variables: ContainerRegistryEditorModalCreateMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"hostname\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"props\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"hostname\",\n        \"variableName\": \"hostname\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      }\n    ],\n    \"concreteType\": \"CreateContainerRegistry\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"create_container_registry\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"ContainerRegistry\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"container_registry\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"hostname\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"ContainerRegistryConfig\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"config\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"url\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"type\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"project\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"username\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"password\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"ssl_verify\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ContainerRegistryEditorModalCreateMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ContainerRegistryEditorModalCreateMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"f076fed995ef5122c04aaba2b76d22d5\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ContainerRegistryEditorModalCreateMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation ContainerRegistryEditorModalCreateMutation(\\n  $hostname: String!\\n  $props: CreateContainerRegistryInput!\\n) {\\n  create_container_registry(hostname: $hostname, props: $props) {\\n    container_registry {\\n      id\\n      hostname\\n      config {\\n        url\\n        type\\n        project\\n        username\\n        password\\n        ssl_verify\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"547863dc03f9faf465e8a26175e5a101\";\n\nexport default node;\n","/**\n * @generated SignedSource<<da5f88cb0510adba64bff3a06549f145>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ContainerRegistryEditorModalFragment$data = {\n  readonly config: {\n    readonly project: ReadonlyArray<string | null> | null;\n    readonly ssl_verify: boolean | null;\n    readonly type: string;\n    readonly url: string;\n    readonly username: string | null;\n  } | null;\n  readonly hostname: string | null;\n  readonly id: string;\n  readonly \" $fragmentType\": \"ContainerRegistryEditorModalFragment\";\n};\nexport type ContainerRegistryEditorModalFragment$key = {\n  readonly \" $data\"?: ContainerRegistryEditorModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ContainerRegistryEditorModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ContainerRegistryEditorModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"hostname\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"ContainerRegistryConfig\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"config\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"url\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"type\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"project\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"username\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"ssl_verify\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ContainerRegistry\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"57f748e00ec698f8b3e133570e377c71\";\n\nexport default node;\n","/**\n * @generated SignedSource<<0c8fab778c9e3da8a9fa75a7ebb37d35>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type ModifyContainerRegistryInput = {\n  password?: string | null;\n  project?: ReadonlyArray<string | null> | null;\n  ssl_verify?: boolean | null;\n  type?: string | null;\n  url?: string | null;\n  username?: string | null;\n};\nexport type ContainerRegistryEditorModalModifyMutation$variables = {\n  hostname: string;\n  props: ModifyContainerRegistryInput;\n};\nexport type ContainerRegistryEditorModalModifyMutation$data = {\n  readonly modify_container_registry: {\n    readonly container_registry: {\n      readonly config: {\n        readonly password: string | null;\n        readonly project: ReadonlyArray<string | null> | null;\n        readonly ssl_verify: boolean | null;\n        readonly type: string;\n        readonly url: string;\n        readonly username: string | null;\n      } | null;\n      readonly hostname: string | null;\n      readonly id: string;\n    } | null;\n  } | null;\n};\nexport type ContainerRegistryEditorModalModifyMutation = {\n  response: ContainerRegistryEditorModalModifyMutation$data;\n  variables: ContainerRegistryEditorModalModifyMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"hostname\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"props\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"hostname\",\n        \"variableName\": \"hostname\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      }\n    ],\n    \"concreteType\": \"ModifyContainerRegistry\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"modify_container_registry\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"ContainerRegistry\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"container_registry\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"hostname\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"ContainerRegistryConfig\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"config\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"url\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"type\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"project\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"username\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"password\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"ssl_verify\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ContainerRegistryEditorModalModifyMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ContainerRegistryEditorModalModifyMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"5157cbd573b855028a9856c295dab17c\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ContainerRegistryEditorModalModifyMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation ContainerRegistryEditorModalModifyMutation(\\n  $hostname: String!\\n  $props: ModifyContainerRegistryInput!\\n) {\\n  modify_container_registry(hostname: $hostname, props: $props) {\\n    container_registry {\\n      id\\n      hostname\\n      config {\\n        url\\n        type\\n        project\\n        username\\n        password\\n        ssl_verify\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"0fe59a8682e5d7c502bc48da7cc3320a\";\n\nexport default node;\n","/**\n * @generated SignedSource<<55d0f768ece6af02582233662ba64396>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type ContainerRegistryListDeleteMutation$variables = {\n  hostname: string;\n};\nexport type ContainerRegistryListDeleteMutation$data = {\n  readonly delete_container_registry: {\n    readonly container_registry: {\n      readonly id: string;\n    } | null;\n  } | null;\n};\nexport type ContainerRegistryListDeleteMutation = {\n  response: ContainerRegistryListDeleteMutation$data;\n  variables: ContainerRegistryListDeleteMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"hostname\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"hostname\",\n        \"variableName\": \"hostname\"\n      }\n    ],\n    \"concreteType\": \"DeleteContainerRegistry\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"delete_container_registry\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"ContainerRegistry\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"container_registry\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ContainerRegistryListDeleteMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ContainerRegistryListDeleteMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"4482108b7e256e27225f91b432f0a856\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ContainerRegistryListDeleteMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation ContainerRegistryListDeleteMutation(\\n  $hostname: String!\\n) {\\n  delete_container_registry(hostname: $hostname) {\\n    container_registry {\\n      id\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"131801c7f9561f645743bbbe4b464676\";\n\nexport default node;\n","/**\n * @generated SignedSource<<92bcd8c8585065616500e3e90ed713d0>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type ContainerRegistryListDomainMutation$variables = {\n  allowed_docker_registries: ReadonlyArray<string | null>;\n  domain: string;\n};\nexport type ContainerRegistryListDomainMutation$data = {\n  readonly modify_domain: {\n    readonly ok: boolean | null;\n  } | null;\n};\nexport type ContainerRegistryListDomainMutation = {\n  response: ContainerRegistryListDomainMutation$data;\n  variables: ContainerRegistryListDomainMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"allowed_docker_registries\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"domain\"\n},\nv2 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"domain\"\n      },\n      {\n        \"fields\": [\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"allowed_docker_registries\",\n            \"variableName\": \"allowed_docker_registries\"\n          }\n        ],\n        \"kind\": \"ObjectValue\",\n        \"name\": \"props\"\n      }\n    ],\n    \"concreteType\": \"ModifyDomain\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"modify_domain\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ContainerRegistryListDomainMutation\",\n    \"selections\": (v2/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"ContainerRegistryListDomainMutation\",\n    \"selections\": (v2/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"569e278934331792cc007f79e8e4c44c\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ContainerRegistryListDomainMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation ContainerRegistryListDomainMutation(\\n  $domain: String!\\n  $allowed_docker_registries: [String]!\\n) {\\n  modify_domain(name: $domain, props: {allowed_docker_registries: $allowed_docker_registries}) {\\n    ok\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"d8730f4ae61e895ec64fb03e53998b97\";\n\nexport default node;\n","/**\n * @generated SignedSource<<b1047b7db4722f3b93754a8aa0472272>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ContainerRegistryListQuery$variables = {\n  domain: string;\n};\nexport type ContainerRegistryListQuery$data = {\n  readonly container_registries: ReadonlyArray<{\n    readonly config: {\n      readonly password: string | null;\n      readonly project: ReadonlyArray<string | null> | null;\n      readonly ssl_verify: boolean | null;\n      readonly type: string;\n      readonly url: string;\n      readonly username: string | null;\n    } | null;\n    readonly hostname: string | null;\n    readonly id: string;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"ContainerRegistryEditorModalFragment\">;\n  } | null> | null;\n  readonly domain: {\n    readonly allowed_docker_registries: ReadonlyArray<string | null> | null;\n    readonly name: string | null;\n  } | null;\n};\nexport type ContainerRegistryListQuery = {\n  response: ContainerRegistryListQuery$data;\n  variables: ContainerRegistryListQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"domain\"\n  }\n],\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"hostname\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"type\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"project\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"username\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"password\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"ssl_verify\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": [\n    {\n      \"kind\": \"Variable\",\n      \"name\": \"name\",\n      \"variableName\": \"domain\"\n    }\n  ],\n  \"concreteType\": \"Domain\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"domain\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"allowed_docker_registries\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ContainerRegistryListQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"ContainerRegistry\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"container_registries\",\n        \"plural\": true,\n        \"selections\": [\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"ContainerRegistryEditorModalFragment\"\n          },\n          (v1/*: any*/),\n          (v2/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"ContainerRegistryConfig\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"config\",\n            \"plural\": false,\n            \"selections\": [\n              (v3/*: any*/),\n              (v4/*: any*/),\n              (v5/*: any*/),\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      (v9/*: any*/)\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ContainerRegistryListQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"ContainerRegistry\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"container_registries\",\n        \"plural\": true,\n        \"selections\": [\n          (v1/*: any*/),\n          (v2/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"ContainerRegistryConfig\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"config\",\n            \"plural\": false,\n            \"selections\": [\n              (v3/*: any*/),\n              (v4/*: any*/),\n              (v5/*: any*/),\n              (v6/*: any*/),\n              (v8/*: any*/),\n              (v7/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      (v9/*: any*/)\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"9f9e16fde586191ea3e0ae553f834b51\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ContainerRegistryListQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ContainerRegistryListQuery(\\n  $domain: String!\\n) {\\n  container_registries {\\n    ...ContainerRegistryEditorModalFragment\\n    id\\n    hostname\\n    config {\\n      url\\n      type\\n      project\\n      username\\n      password\\n      ssl_verify\\n    }\\n  }\\n  domain(name: $domain) {\\n    name\\n    allowed_docker_registries\\n  }\\n}\\n\\nfragment ContainerRegistryEditorModalFragment on ContainerRegistry {\\n  id\\n  hostname\\n  config {\\n    url\\n    type\\n    project\\n    username\\n    ssl_verify\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"0f4709e3ecfb8366c214098902385269\";\n\nexport default node;\n","// This icon file is generated automatically.\nvar DeleteOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\" } }] }, \"name\": \"delete\", \"theme\": \"outlined\" };\nexport default DeleteOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: DeleteOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  DeleteOutlined.displayName = 'DeleteOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(DeleteOutlined);","// This icon file is generated automatically.\nvar ExclamationCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M464 688a48 48 0 1096 0 48 48 0 10-96 0zm24-112h48c4.4 0 8-3.6 8-8V296c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8z\" } }] }, \"name\": \"exclamation-circle\", \"theme\": \"outlined\" };\nexport default ExclamationCircleOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport ExclamationCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/ExclamationCircleOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar ExclamationCircleOutlined = function ExclamationCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: ExclamationCircleOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  ExclamationCircleOutlined.displayName = 'ExclamationCircleOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(ExclamationCircleOutlined);","// This icon file is generated automatically.\nvar SettingOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M924.8 625.7l-65.5-56c3.1-19 4.7-38.4 4.7-57.8s-1.6-38.8-4.7-57.8l65.5-56a32.03 32.03 0 009.3-35.2l-.9-2.6a443.74 443.74 0 00-79.7-137.9l-1.8-2.1a32.12 32.12 0 00-35.1-9.5l-81.3 28.9c-30-24.6-63.5-44-99.7-57.6l-15.7-85a32.05 32.05 0 00-25.8-25.7l-2.7-.5c-52.1-9.4-106.9-9.4-159 0l-2.7.5a32.05 32.05 0 00-25.8 25.7l-15.8 85.4a351.86 351.86 0 00-99 57.4l-81.9-29.1a32 32 0 00-35.1 9.5l-1.8 2.1a446.02 446.02 0 00-79.7 137.9l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.3 56.6c-3.1 18.8-4.6 38-4.6 57.1 0 19.2 1.5 38.4 4.6 57.1L99 625.5a32.03 32.03 0 00-9.3 35.2l.9 2.6c18.1 50.4 44.9 96.9 79.7 137.9l1.8 2.1a32.12 32.12 0 0035.1 9.5l81.9-29.1c29.8 24.5 63.1 43.9 99 57.4l15.8 85.4a32.05 32.05 0 0025.8 25.7l2.7.5a449.4 449.4 0 00159 0l2.7-.5a32.05 32.05 0 0025.8-25.7l15.7-85a350 350 0 0099.7-57.6l81.3 28.9a32 32 0 0035.1-9.5l1.8-2.1c34.8-41.1 61.6-87.5 79.7-137.9l.9-2.6c4.5-12.3.8-26.3-9.3-35zM788.3 465.9c2.5 15.1 3.8 30.6 3.8 46.1s-1.3 31-3.8 46.1l-6.6 40.1 74.7 63.9a370.03 370.03 0 01-42.6 73.6L721 702.8l-31.4 25.8c-23.9 19.6-50.5 35-79.3 45.8l-38.1 14.3-17.9 97a377.5 377.5 0 01-85 0l-17.9-97.2-37.8-14.5c-28.5-10.8-55-26.2-78.7-45.7l-31.4-25.9-93.4 33.2c-17-22.9-31.2-47.6-42.6-73.6l75.5-64.5-6.5-40c-2.4-14.9-3.7-30.3-3.7-45.5 0-15.3 1.2-30.6 3.7-45.5l6.5-40-75.5-64.5c11.3-26.1 25.6-50.7 42.6-73.6l93.4 33.2 31.4-25.9c23.7-19.5 50.2-34.9 78.7-45.7l37.9-14.3 17.9-97.2c28.1-3.2 56.8-3.2 85 0l17.9 97 38.1 14.3c28.7 10.8 55.4 26.2 79.3 45.8l31.4 25.8 92.8-32.9c17 22.9 31.2 47.6 42.6 73.6L781.8 426l6.5 39.9zM512 326c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm79.2 255.2A111.6 111.6 0 01512 614c-29.9 0-58-11.7-79.2-32.8A111.6 111.6 0 01400 502c0-29.9 11.7-58 32.8-79.2C454 401.6 482.1 390 512 390c29.9 0 58 11.6 79.2 32.8A111.6 111.6 0 01624 502c0 29.9-11.7 58-32.8 79.2z\" } }] }, \"name\": \"setting\", \"theme\": \"outlined\" };\nexport default SettingOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport SettingOutlinedSvg from \"@ant-design/icons-svg/es/asn/SettingOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar SettingOutlined = function SettingOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: SettingOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  SettingOutlined.displayName = 'SettingOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(SettingOutlined);"],"names":["_ref","_containerRegistry$co","existingHostnames","_ref$containerRegistr","containerRegistryFrgmt","onOk","modalProps","_objectWithoutProperties","_excluded","t","useTranslation","_Form$useForm","Form","useForm","form","_slicedToArray","_message$useMessage","message","useMessage","_message$useMessage2","messageAPI","contextHolder","_Modal$useModal","Modal","useModal","_Modal$useModal2","modal","modalContextHolder","containerRegistry","useFragment","_ContainerRegistryEditorModalFragment","require","_useMutation","useMutation","_ContainerRegistryEditorModalCreateMutation","_useMutation2","commitCreateRegistry","isInflightCreateRegistry","_useMutation3","_ContainerRegistryEditorModalModifyMutation","_useMutation4","commitModifyRegistry","isInflightModifyRegistry","handleSave","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","validateFields","then","values","mutationVariables","hostname","props","url","config","type","project","undefined","username","_","password","isChangedPassword","variables","onCompleted","res","error","onError","catch","stop","apply","arguments","_jsxs","BAIModal","_objectSpread","title","okText","confirmLoading","_values$config","confirm","content","destroyOnClose","children","layout","requiredMark","initialValues","preserve","_jsx","Item","label","name","required","rules","pattern","RegExp","validator","value","includes","Promise","reject","resolve","Input","disabled","startsWith","noStyle","shouldUpdate","_prev$config","_next$config","getFieldValue","Password","valuePropName","Checkbox","onChange","e","target","checked","setFieldValue","Select","options","_prev$config2","_next$config2","mode","open","tokenSeparators","suffixIcon","SyncOutlined","ref","React","AntdIcon","_extends","icon","SyncOutlinedSvg","baiClient","useSuspendedBackendaiClient","_useUpdatableState","useUpdatableState","_useUpdatableState2","fetchKey","updateFetchKey","_useTransition","useTransition","_useTransition2","isPendingReload","startReloadTransition","painKiller","usePainKiller","_useLazyLoadQuery","useLazyLoadQuery","_ContainerRegistryListQuery","domain","_config","domainName","fetchPolicy","container_registries","_ContainerRegistryListDeleteMutation","commitDeleteMutation","isInFlightDeleteMutation","_ContainerRegistryListDomainMutation","commitDomainMutation","isInFlightDomationMutation","token","theme","useToken","_useState","useState","_useState2","editingRegistry","setEditingRegistry","_useState3","_useState4","deletingRegistry","setDeletingRegistry","_useState5","_useState6","deletingConfirmText","setDeletingConfirmText","_useState7","_useState8","isNewModalOpen","setIsNewModalOpen","_useState9","_useState10","inFlightHostName","setInFlightHostName","rescanImage","indicator","handleReScanError","globalThis","lablupIndicator","start","sent","err","console","log","set","end","lablupNotification","text","relieve","detail","show","maintenance","rescan_images","ok","sse","attach_background_task","task_id","addEventListener","data","JSON","parse","ratio","current_progress","total_progress","event","CustomEvent","document","dispatchEvent","close","Error","msg","_x","Flex","direction","align","style","flex","justify","gap","padding","paddingSM","Button","PlusOutlined","onClick","Tooltip","loading","ReloadOutlined","Table","scroll","x","pagination","columns","dataIndex","render","record","_record$config","prjName","Tag","isEnabled","allowed_docker_registries","Switch","isOn","newAllowedDockerRegistries","push","info","key","fixed","index","size","color","colorInfo","SettingOutlined","danger","DeleteOutlined","dataSource","filterNonNullItems","ContainerRegistryEditorModal","r","onCancel","centered","_Fragment","ExclamationCircleOutlined","colorWarning","okButtonProps","response","marginTop","marginMD","Typography","Text","code","_validator","_callee2","_context2","autoComplete","node","v0","v1","hash","v2","v3","v4","v5","v6","v7","v8","v9","DeleteOutlinedSvg","ExclamationCircleOutlinedSvg","SettingOutlinedSvg"],"sourceRoot":""}