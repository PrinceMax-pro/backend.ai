{"version":3,"file":"static/js/648.605cb364.chunk.js","mappings":"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","sources":["components/EndpointStatusTag.tsx","components/ModelServiceSettingModal.tsx","components/__generated__/EndpointStatusTagFragment.graphql.ts","components/__generated__/ModelServiceSettingModal_endpoint.graphql.ts","components/SliderInputFormItem.tsx","components/VFolderSelect.tsx","components/ServiceLauncherModal.tsx","components/TableColumnsSettingModal.tsx","../node_modules/ahooks/es/useRafInterval/index.js","../node_modules/ahooks/es/createUpdateEffect/index.js","../node_modules/ahooks/es/useUpdateEffect/index.js","../node_modules/ahooks/es/utils/isBrowser.js","../node_modules/ahooks/es/createUseStorageState/index.js","../node_modules/ahooks/es/useLocalStorageState/index.js","pages/ServingListPage.tsx","pages/__generated__/ServingListPageQuery.graphql.ts","../node_modules/@ant-design/icons-svg/es/asn/DeleteOutlined.js","../node_modules/@ant-design/icons/es/icons/DeleteOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/SettingOutlined.js","../node_modules/@ant-design/icons/es/icons/SettingOutlined.js"],"sourcesContent":["import { EndpointStatusTagFragment$key } from './__generated__/EndpointStatusTagFragment.graphql';\nimport { Tag } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useFragment } from 'react-relay';\n\ninterface EndpointStatusTagProps {\n  endpointFrgmt: EndpointStatusTagFragment$key | null;\n}\nconst EndpointStatusTag: React.FC<EndpointStatusTagProps> = ({\n  endpointFrgmt,\n}) => {\n  const endpoint = useFragment(\n    graphql`\n      fragment EndpointStatusTagFragment on Endpoint {\n        id\n        status\n      }\n    `,\n    endpointFrgmt,\n  );\n  let color = 'default';\n  switch (endpoint?.status?.toUpperCase()) {\n    case 'RUNNING':\n    case 'HEALTHY':\n      color = 'success';\n      break;\n\n    // case 'TERMINATED':\n    //   color = 'default';\n    //   break;\n  }\n\n  return <Tag color={color}>{endpoint?.status}</Tag>;\n};\n\nexport default EndpointStatusTag;\n","import { baiSignedRequestWithPromise } from '../helper';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport { ModelServiceSettingModal_endpoint$key } from './__generated__/ModelServiceSettingModal_endpoint.graphql';\nimport { Form, InputNumber, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface Props extends BAIModalProps {\n  endpointFrgmt: ModelServiceSettingModal_endpoint$key | null;\n  onRequestClose: (success?: boolean) => void;\n}\n\ninterface ServiceSettingFormInput {\n  desired_session_count: number;\n}\n\nconst ModelServiceSettingModal: React.FC<Props> = ({\n  onRequestClose,\n  endpointFrgmt,\n  ...baiModalProps\n}) => {\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n\n  const endpoint = useFragment(\n    graphql`\n      fragment ModelServiceSettingModal_endpoint on Endpoint {\n        endpoint_id\n        desired_session_count\n      }\n    `,\n    endpointFrgmt,\n  );\n\n  const mutationToUpdateService = useTanMutation({\n    mutationFn: (values: ServiceSettingFormInput) => {\n      const body = {\n        to: values.desired_session_count,\n      };\n      return baiSignedRequestWithPromise({\n        method: 'POST',\n        url: `/services/${endpoint?.endpoint_id}/scale`,\n        body,\n        client: baiClient,\n      });\n    },\n  });\n\n  // Apply any operation after clicking OK button\n  const handleOk = (e: React.MouseEvent<HTMLElement>) => {\n    form\n      .validateFields()\n      .then((values) => {\n        mutationToUpdateService.mutate(values, {\n          onSuccess: () => {\n            console.log('service updated');\n            onRequestClose(true);\n          },\n          onError: (error) => {\n            console.log(error);\n            // TODO: show error message\n          },\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // Apply any operation after clicking Cancel button\n  const handleCancel = () => {\n    // console.log(\"Clicked cancel button\");\n    onRequestClose();\n  };\n\n  return (\n    <BAIModal\n      style={{\n        zIndex: 10000,\n      }}\n      destroyOnClose\n      onOk={handleOk}\n      onCancel={handleCancel}\n      okButtonProps={{\n        loading: mutationToUpdateService.isLoading,\n      }}\n      title={t('modelService.EditModelService')}\n      {...baiModalProps}\n    >\n      <Flex direction=\"row\" align=\"stretch\" justify=\"around\">\n        <Form\n          form={form}\n          preserve={false}\n          validateTrigger={['onChange', 'onBlur']}\n          initialValues={{\n            desired_session_count: endpoint?.desired_session_count,\n          }}\n          style={{ marginBottom: token.marginLG, marginTop: token.margin }}\n        >\n          <Form.Item\n            name=\"desired_session_count\"\n            label={t('modelService.DesiredSessionCount')}\n            rules={[\n              {\n                pattern: /^[0-9]+$/,\n                message: t('modelService.OnlyAllowsNonNegativeIntegers'),\n              },\n            ]}\n          >\n            <InputNumber type=\"number\" min={0} />\n          </Form.Item>\n        </Form>\n      </Flex>\n    </BAIModal>\n  );\n};\n\nexport default ModelServiceSettingModal;\n","/**\n * @generated SignedSource<<8a960e7428e05bcb25f322a53888680e>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointStatusTagFragment$data = {\n  readonly id: string | null;\n  readonly status: string | null;\n  readonly \" $fragmentType\": \"EndpointStatusTagFragment\";\n};\nexport type EndpointStatusTagFragment$key = {\n  readonly \" $data\"?: EndpointStatusTagFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointStatusTagFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"EndpointStatusTagFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"3b31efa50b55edddcb210b59003dc479\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7fb89480050795760143361e3c0e5086>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ModelServiceSettingModal_endpoint$data = {\n  readonly desired_session_count: number | null;\n  readonly endpoint_id: string | null;\n  readonly \" $fragmentType\": \"ModelServiceSettingModal_endpoint\";\n};\nexport type ModelServiceSettingModal_endpoint$key = {\n  readonly \" $data\"?: ModelServiceSettingModal_endpoint$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ModelServiceSettingModal_endpoint\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ModelServiceSettingModal_endpoint\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"endpoint_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"desired_session_count\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"881f18324b27eba6ff0fcfb83ae241d2\";\n\nexport default node;\n","import Flex from './Flex';\nimport {\n  InputNumber,\n  Slider,\n  Form,\n  SliderSingleProps,\n  InputNumberProps,\n} from 'antd';\nimport { NamePath } from 'antd/es/form/interface';\nimport { SliderRangeProps } from 'antd/es/slider';\nimport { FormItemProps } from 'antd/lib/form/FormItem';\nimport React, { useEffect } from 'react';\n\ninterface SliderInputFormItemProps extends Omit<FormItemProps, 'name'> {\n  min?: number;\n  max?: number;\n  step?: number;\n  name: NamePath;\n  inputNumberProps?: InputNumberProps;\n  sliderProps?: SliderSingleProps | SliderRangeProps;\n  disabled?: boolean;\n}\nconst SliderInputFormItem: React.FC<SliderInputFormItemProps> = ({\n  name,\n  min,\n  max,\n  step,\n  rules,\n  required,\n  inputNumberProps,\n  sliderProps,\n  initialValue,\n  disabled,\n  ...formItemProps\n}) => {\n  const form = Form.useFormInstance();\n  useEffect(() => {\n    // when step is 1, make sure the value is integer\n    if (step === 1 && form.getFieldValue(name) % 1 !== 0) {\n      // do not use form.setFieldsValue, because name can be array\n      form.setFieldValue(name, Math.round(form.getFieldValue(name)));\n    }\n  }, [step, form, name]);\n  return (\n    <Form.Item required={required} {...formItemProps}>\n      <Flex direction=\"row\" gap={'md'}>\n        <Flex direction=\"column\" align=\"stretch\" style={{ flex: 3 }}>\n          <Form.Item\n            name={name}\n            noStyle\n            rules={rules}\n            initialValue={initialValue}\n            label={formItemProps.label}\n          >\n            <Slider\n              max={max}\n              min={min}\n              step={step}\n              disabled={disabled}\n              {...sliderProps}\n            />\n          </Form.Item>\n        </Flex>\n        <Flex\n          style={{ flex: 2, minWidth: 130 }}\n          align=\"stretch\"\n          direction=\"column\"\n        >\n          <Form.Item\n            name={name}\n            noStyle\n            rules={rules}\n            initialValue={initialValue}\n            label={formItemProps.label}\n          >\n            <InputNumber\n              max={max}\n              min={min}\n              step={step}\n              onStep={(value, info) => {\n                console.log(value, info);\n              }}\n              disabled={disabled}\n              {...inputNumberProps}\n            />\n          </Form.Item>\n        </Flex>\n      </Flex>\n    </Form.Item>\n    // <Row justify=\"space-around\" align=\"middle\" gutter={20}>\n    //   <Col span={6}>\n    //     <p>Resource</p>\n    //   </Col>\n    //   <Col span={8}>\n    //     <Slider\n    //       min={minValue}\n    //       max={maxValue}\n    //       onChange={onChange}\n    //       value={typeof inputValue === \"number\" ? inputValue : 0}\n    //       step={0.01}\n    //     />\n    //   </Col>\n    //   <Col span={6}>\n    //     <InputNumber\n    //       min={minValue}\n    //       max={maxValue}\n    //       style={\n    //         {\n    //           /* use theme config */\n    //         }\n    //       }\n    //       step={0.01}\n    //       value={inputValue}\n    //       onChange={onChange}\n    //     />\n    //   </Col>\n    // </Row>\n  );\n};\n\nexport default SliderInputFormItem;\n","import { useBaiSignedRequestWithPromise } from '../helper';\nimport { useCurrentProjectValue, useUpdatableState } from '../hooks';\nimport { useTanQuery } from '../hooks/reactQueryAlias';\nimport { Select, SelectProps } from 'antd';\nimport _ from 'lodash';\nimport React, { startTransition, useEffect } from 'react';\n\nexport type VFolder = {\n  name: string;\n  id: string;\n  quota_scope_id: string;\n  host: string;\n  status: string;\n  usage_mode: string;\n  created_at: string;\n  is_owner: boolean;\n  permission: string;\n  user: null;\n  group: string | null;\n  creator: string;\n  user_email: null;\n  group_name: string | null;\n  ownership_type: string;\n  type: string;\n  cloneable: boolean;\n  max_files: number;\n  max_size: null | number;\n  cur_size: number;\n};\n\ninterface VFolderSelectProps extends SelectProps {\n  autoSelectDefault?: boolean;\n  filter?: (vFolder: VFolder) => boolean;\n}\n\nconst VFolderSelect: React.FC<VFolderSelectProps> = ({\n  filter,\n  autoSelectDefault,\n  ...selectProps\n}) => {\n  const currentProject = useCurrentProjectValue();\n  const baiRequestWithPromise = useBaiSignedRequestWithPromise();\n  // const { vfolder_list } = useLazyLoadQuery<VFolderSelectQuery>(\n  //   graphql`\n  //     # query VFolderSelectQuery($group_id: UUID) {\n  //     query VFolderSelectQuery {\n  //       vfolder_list(limit: 20, offset: 0) {\n  //         # vfolder_list(limit: 20, offset: 0, group_id: $group_id) {\n  //         items {\n  //           id\n  //           name\n  //           status\n  //           usage_mode\n  //           ownership_type\n  //           user_email\n  //           group\n  //           group_name\n  //         }\n  //         total_count\n  //       }\n  //     }\n  //   `,\n  //   {\n  //     // group_id: currentProject.id,\n  //   },\n  //   {\n  //     fetchPolicy: \"store-and-network\",\n  //   }\n  // );\n  // console.log(\"vfolder_list\", vfolder_list);\n  const [key, checkUpdate] = useUpdatableState('first');\n\n  const { data } = useTanQuery({\n    queryKey: ['VFolderSelectQuery', key],\n    queryFn: () => {\n      return baiRequestWithPromise({\n        method: 'GET',\n        url: `/folders?group_id=${currentProject.id}`,\n      }) as Promise<VFolder[]>;\n    },\n    staleTime: 0,\n  });\n\n  const filteredVFolders = filter ? _.filter(data, filter) : data;\n\n  const autoSelectedOption = _.first(filteredVFolders)\n    ? {\n        label: _.first(filteredVFolders)?.name,\n        value: _.first(filteredVFolders)?.name,\n      }\n    : undefined;\n  useEffect(() => {\n    if (autoSelectDefault && autoSelectedOption) {\n      selectProps.onChange?.(autoSelectedOption.value, autoSelectedOption);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [autoSelectDefault]);\n  return (\n    <Select\n      showSearch\n      {...selectProps}\n      onDropdownVisibleChange={(open) => {\n        if (open) {\n          startTransition(() => {\n            checkUpdate();\n          });\n        }\n      }}\n    >\n      {_.map(filteredVFolders, (vfolder) => {\n        return (\n          <Select.Option key={vfolder?.id} value={vfolder?.name}>\n            {vfolder?.name}\n          </Select.Option>\n        );\n      })}\n    </Select>\n  );\n};\n\nexport default VFolderSelect;\n","import { baiSignedRequestWithPromise, iSizeToSize } from '../helper';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { useCurrentDomainValue } from '../hooks';\nimport { useResourceSlots } from '../hooks/backendai';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport FlexActivityIndicator from './FlexActivityIndicator';\nimport ImageEnvironmentSelectFormItems, {\n  Image,\n  ImageEnvironmentFormInput,\n} from './ImageEnvironmentSelectFormItems';\nimport ResourceGroupSelect from './ResourceGroupSelect';\nimport { ACCELERATOR_UNIT_MAP } from './ResourceNumber';\nimport SliderInputFormItem from './SliderInputFormItem';\nimport VFolderSelect from './VFolderSelect';\nimport { Card, Form, Input, theme, Select, Switch, message } from 'antd';\nimport _ from 'lodash';\nimport React, { Suspense, useEffect } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\n\ntype ClusterMode = 'single-node' | 'multi-node';\n\ninterface ServiceCreateConfigResourceOptsType {\n  shmem?: number | string;\n}\ninterface ServiceCreateConfigResourceType {\n  cpu: number | string;\n  mem: string;\n  'cuda.device'?: number | string;\n  'cuda.shares'?: number | string;\n  'rocm.device'?: number | string;\n  'tpu.device'?: number | string;\n  'ipu.device'?: number | string;\n  'atom.device'?: number | string;\n  'warboy.device'?: number | string;\n}\n\ninterface ServiceCreateConfigType {\n  model: string;\n  model_version?: string;\n  model_mount_destination: string; // default == \"/models\"\n  environ: object; // environment variable\n  scaling_group: string;\n  resources: ServiceCreateConfigResourceType;\n  resource_opts?: ServiceCreateConfigResourceOptsType;\n}\ninterface ServiceCreateType {\n  name: string;\n  desired_session_count: number;\n  image: string;\n  arch: string;\n  group: string;\n  domain: string;\n  cluster_size: number;\n  cluster_mode: ClusterMode;\n  tag?: string;\n  startup_command?: string;\n  bootstrap_script?: string;\n  owner_access_key?: string;\n  open_to_public: boolean;\n  config: ServiceCreateConfigType;\n}\n\ninterface ServiceLauncherProps\n  extends Omit<BAIModalProps, 'onOK' | 'onCancel'> {\n  extraP?: boolean;\n  onRequestClose: (success?: boolean) => void;\n}\ninterface ServiceLauncherFormInput extends ImageEnvironmentFormInput {\n  serviceName: string;\n  // gpu: number;\n  resource: AIAccelerator;\n  cpu: number;\n  mem: number;\n  shmem: number;\n  resourceGroup: string;\n  vFolderName: string;\n  desiredRoutingCount: number;\n  openToPublic: boolean;\n}\n\ninterface AIAccelerator {\n  accelerator: number;\n  acceleratorType: SelectUIType;\n}\n\ninterface SelectUIType {\n  value: string;\n  label: string;\n}\n\nconst ServiceLauncherModal: React.FC<ServiceLauncherProps> = ({\n  extraP,\n  onRequestClose,\n  ...modalProps\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n  // const [modalText, setModalText] = useState(\"Content of the modal\");\n  const currentDomain = useCurrentDomainValue();\n  const [form] = Form.useForm<ServiceLauncherFormInput>();\n  const [resourceSlots] = useResourceSlots();\n  const currentImage = Form.useWatch(['environments', 'image'], form); //TODO: type // form.getFieldValue(['environments', 'image']);\n  const currentAcceleratorType = form.getFieldValue([\n    'resource',\n    'acceleratorType',\n  ]);\n  const currentImageAcceleratorLimits = _.filter(\n    currentImage?.resource_limits,\n    (limit) =>\n      limit ? !_.includes(['cpu', 'mem', 'shmem'], limit.key) : false,\n  );\n  const currentImageAcceleratorTypeName: string =\n    // NOTE:\n    // filter from resourceSlots since resourceSlots and supported image could be non-identical.\n    // resourceSlots returns \"all resources enable to allocate(including AI accelerator)\"\n    // imageAcceleratorLimit returns \"all resources that is supported in the selected image\"\n    _.filter(currentImageAcceleratorLimits, (acceleratorInfo: any) =>\n      _.keys(resourceSlots).includes(acceleratorInfo?.key),\n    )[0]?.key || '';\n  const acceleratorSlots = _.omit(resourceSlots, ['cpu', 'mem', 'shmem']);\n\n  // change selected accelerator type according to currentImageAcceleratorTypeName\n  useEffect(() => {\n    form.setFieldValue(\n      ['resource', 'accelerator'],\n      getLimitByAccelerator(currentImageAcceleratorTypeName).min || 0,\n    );\n    form.setFieldValue(['resource', 'acceleratorType'], {\n      value: currentImageAcceleratorTypeName,\n      label: ACCELERATOR_UNIT_MAP[currentImageAcceleratorTypeName] || 'UNIT',\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentImage]);\n\n  const getLimitByAccelerator = (acceleratorName: string) => {\n    // FIXME: temporally add hard-coded number when config is undefined\n    let maxLimit = 8;\n    let minLimit = 0;\n\n    // get max\n    switch (acceleratorName) {\n      case 'cuda.device':\n      default:\n        maxLimit = baiClient._config.maxCUDADevicesPerContainer || maxLimit;\n        break;\n      case 'cuda.shares':\n        maxLimit = baiClient._config.maxCUDASharesPerContainer || maxLimit;\n        break;\n      case 'rocm.device':\n        maxLimit = baiClient._config.maxROCMDevicesPerContainer || maxLimit;\n        break;\n      case 'tpu.device':\n        maxLimit = baiClient._config.maxTPUDevicesPerContainer || maxLimit;\n        break;\n      case 'ipu.device':\n        maxLimit = baiClient._config.maxIPUDevicesPerContainer || maxLimit;\n        break;\n      case 'atom.device':\n        maxLimit = baiClient._config.maxATOMDevicesPerContainer || maxLimit;\n        break;\n      case 'warboy.device':\n        maxLimit = baiClient._config.maxWarboyDevicesPerContainer || maxLimit;\n        break;\n    }\n    // get min\n    minLimit = parseInt(\n      _.filter(\n        currentImageAcceleratorLimits,\n        (supportedAcceleratorInfo) =>\n          supportedAcceleratorInfo?.key === currentImageAcceleratorTypeName,\n      )[0]?.min as string,\n    );\n    return {\n      min: minLimit,\n      max: maxLimit,\n    };\n  };\n\n  const mutationToCreateService = useTanMutation<\n    unknown,\n    {\n      message?: string;\n    },\n    ServiceLauncherFormInput\n  >({\n    mutationFn: (values) => {\n      const image: string = `${values.environments.image?.registry}/${values.environments.image?.name}:${values.environments.image?.tag}`;\n      const body: ServiceCreateType = {\n        name: values.serviceName,\n        desired_session_count: values.desiredRoutingCount,\n        image: image,\n        arch: values.environments.image?.architecture as string,\n        group: baiClient.current_group, // current Project Group,\n        domain: currentDomain, // current Domain Group,\n        cluster_size: 1, // FIXME: hardcoded. change it with option later\n        cluster_mode: 'single-node', // FIXME: hardcoded. change it with option later\n        open_to_public: values.openToPublic,\n        config: {\n          model: values.vFolderName,\n          model_mount_destination: '/models', // FIXME: hardcoded. change it with option later\n          environ: {}, // FIXME: hardcoded. change it with option later\n          scaling_group: values.resourceGroup,\n          resources: {\n            cpu: values.cpu,\n            mem: values.mem + 'G',\n          },\n        },\n      };\n      // Set AI accelerator value if set\n      // Currently, we only support one AI accelerator per session\n      if (values.resource.acceleratorType) {\n        const acceleratorTypeName: string =\n          values.resource.acceleratorType?.value;\n        // FIXME: temporally add switch-case\n        switch (acceleratorTypeName) {\n          case 'cuda.shares':\n            body['config'].resources['cuda.shares'] =\n              values.resource.accelerator;\n            break;\n          case 'cuda.device':\n            body['config'].resources['cuda.device'] =\n              values.resource.accelerator;\n            break;\n          case 'rocm.device':\n            body['config'].resources['rocm.device'] =\n              values.resource.accelerator;\n            break;\n          case 'tpu.device':\n            body['config'].resources['tpu.device'] =\n              values.resource.accelerator;\n            break;\n          case 'ipu.device':\n            body['config'].resources['ipu.device'] =\n              values.resource.accelerator;\n            break;\n          case 'warboy.device':\n            body['config'].resources['warboy.device'] =\n              values.resource.accelerator;\n            break;\n        }\n      }\n      if (values.shmem && values.shmem > 0) {\n        body['config'].resource_opts = {\n          shmem: values.shmem + 'G',\n        };\n      }\n      return baiSignedRequestWithPromise({\n        method: 'POST',\n        url: '/services',\n        body,\n        client: baiClient,\n      });\n    },\n  });\n  // const scalingGroupList = use;\n  // modelStorageList: Record<string, any>[];\n  // environmentList: Record<string, any>[];\n  // name?: string;\n  // cpu: number | string;\n  // mem: number | string;\n  // npu?: number | string;\n  // shmem?: number | string;\n\n  // Apply any operation after clicking OK button\n  const handleOk = () => {\n    // setModalText(\"Lorem Ipsum\");\n    // setConfirmLoading(true);\n    // // TODO: send request to start service to manager server\n    // setTimeout(() => {\n    //   setConfirmLoading(false);\n    // }, 2000);\n    form\n      .validateFields()\n      .then((values) => {\n        mutationToCreateService.mutate(values, {\n          onSuccess: () => {\n            onRequestClose(true);\n          },\n          onError: (error) => {\n            if (error?.message) {\n              message.error(\n                _.truncate(error?.message, {\n                  length: 200,\n                }),\n              );\n            } else {\n              message.error(t('modelService.FailedToStartService'));\n            }\n          },\n        });\n      })\n      .catch((err) => {\n        if (err.errorFields?.[0].errors?.[0]) {\n          message.error(err.errorFields?.[0].errors?.[0]);\n        } else {\n          message.error(t('modelService.FormValidationFailed'));\n        }\n      });\n  };\n\n  // Apply any operation after clicking Cancel button\n  const handleCancel = () => {\n    // console.log(\"Clicked cancel button\");\n    onRequestClose();\n  };\n\n  return (\n    <BAIModal\n      title={t('modelService.StartNewServing')}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      destroyOnClose={true}\n      maskClosable={false}\n      confirmLoading={mutationToCreateService.isLoading}\n      {...modalProps}\n    >\n      <Suspense fallback={<FlexActivityIndicator />}>\n        <Form\n          disabled={mutationToCreateService.isLoading}\n          form={form}\n          preserve={false}\n          layout=\"vertical\"\n          labelCol={{ span: 12 }}\n          initialValues={\n            {\n              cpu: 1,\n              // gpu: 0,\n              resource: {\n                accelerator: 0,\n              },\n              mem: 0.25,\n              shmem: 0,\n              desiredRoutingCount: 1,\n            } as ServiceLauncherFormInput\n          }\n        >\n          <Form.Item\n            label={t('modelService.ServiceName')}\n            name=\"serviceName\"\n            rules={[\n              {\n                pattern: /^(?=.{4,24}$)\\w[\\w.-]*\\w$/,\n                message: t('modelService.ServiceNameRule'),\n              },\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            name=\"resourceGroup\"\n            label={t('session.ResourceGroup')}\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <ResourceGroupSelect autoSelectDefault />\n          </Form.Item>\n          <Form.Item\n            name=\"openToPublic\"\n            label={t('modelService.OpenToPublic')}\n            valuePropName=\"checked\"\n          >\n            <Switch></Switch>\n          </Form.Item>\n          <Form.Item\n            name={'vFolderName'}\n            label={t('session.launcher.ModelStorageToMount')}\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <VFolderSelect\n              filter={(vf) => vf.usage_mode === 'model'}\n              autoSelectDefault\n            />\n          </Form.Item>\n          <SliderInputFormItem\n            label={t('modelService.DesiredRoutingCount')}\n            name=\"desiredRoutingCount\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n            inputNumberProps={{\n              //TODO: change unit based on resource limit\n              addonAfter: '#',\n            }}\n            required\n          />\n          <Card\n            style={{\n              marginBottom: token.margin,\n            }}\n          >\n            <ImageEnvironmentSelectFormItems\n            // //TODO: test with real inference images\n            // filter={(image) => {\n            //   return !!_.find(image?.labels, (label) => {\n            //     return (\n            //       label?.key === \"ai.backend.role\" &&\n            //       label.value === \"INFERENCE\" //['COMPUTE', 'INFERENCE', 'SYSTEM']\n            //     );\n            //   });\n            // }}\n            />\n            <Form.Item\n              noStyle\n              shouldUpdate={(prev, cur) =>\n                prev.environments?.image?.digest !==\n                cur.environments?.image?.digest\n              }\n            >\n              {({ getFieldValue }) => {\n                // TODO: change min/max based on selected images resource limit and current user limit\n                const currentImage: Image =\n                  getFieldValue('environments')?.image;\n\n                return (\n                  <>\n                    <SliderInputFormItem\n                      name={'cpu'}\n                      label={t('session.launcher.CPU')}\n                      tooltip={<Trans i18nKey={'session.launcher.DescCPU'} />}\n                      min={parseInt(\n                        _.find(\n                          currentImage?.resource_limits,\n                          (i) => i?.key === 'cpu',\n                        )?.min || '0',\n                      )}\n                      max={baiClient._config.maxCPUCoresPerContainer || 128}\n                      inputNumberProps={{\n                        addonAfter: t('session.launcher.Core'),\n                      }}\n                      required\n                      rules={[\n                        {\n                          required: true,\n                        },\n                      ]}\n                    />\n                    <SliderInputFormItem\n                      name={'mem'}\n                      label={t('session.launcher.Memory')}\n                      tooltip={\n                        <Trans i18nKey={'session.launcher.DescMemory'} />\n                      }\n                      max={baiClient._config.maxMemoryPerContainer || 1536}\n                      min={0}\n                      inputNumberProps={{\n                        addonAfter: 'GiB',\n                      }}\n                      step={0.25}\n                      required\n                      rules={[\n                        {\n                          required: true,\n                        },\n                        ({ getFieldValue }) => ({\n                          validator(_form, value) {\n                            const sizeGInfo = iSizeToSize(\n                              _.find(\n                                currentImage?.resource_limits,\n                                (i) => i?.key === 'mem',\n                              )?.min || '0B',\n                              'G',\n                            );\n\n                            if (\n                              sizeGInfo?.number &&\n                              sizeGInfo?.number > value\n                            ) {\n                              return Promise.reject(\n                                new Error(\n                                  t('session.launcher.MinMemory', {\n                                    size: sizeGInfo?.numberUnit,\n                                  }),\n                                ),\n                              );\n                            }\n                            return Promise.resolve();\n                          },\n                        }),\n                      ]}\n                    />\n                    <SliderInputFormItem\n                      name={'shmem'}\n                      label={t('session.launcher.SharedMemory')}\n                      tooltip={\n                        <Trans i18nKey={'session.launcher.DescSharedMemory'} />\n                      }\n                      max={baiClient._config.maxShmPerContainer || 8}\n                      min={0}\n                      step={0.25}\n                      inputNumberProps={{\n                        addonAfter: 'GiB',\n                      }}\n                      required\n                      rules={[\n                        {\n                          required: true,\n                        },\n                      ]}\n                    />\n                  </>\n                );\n              }}\n            </Form.Item>\n            <Form.Item\n              noStyle\n              shouldUpdate={(prev, cur) =>\n                prev.environments?.environment !== cur.environments?.environment\n              }\n            >\n              {() => {\n                return (\n                  <SliderInputFormItem\n                    name={['resource', 'accelerator']}\n                    label={t(`session.launcher.AIAccelerator`)}\n                    tooltip={\n                      <Trans i18nKey={'session.launcher.DescAIAccelerator'} />\n                    }\n                    sliderProps={\n                      {\n                        // FIXME: temporally comment out min value\n                        // marks: {\n                        //   0: 0,\n                        // },\n                      }\n                    }\n                    min={0}\n                    max={\n                      getLimitByAccelerator(currentImageAcceleratorTypeName).max\n                    }\n                    step={\n                      _.endsWith(currentAcceleratorType, 'shares') ? 0.1 : 1\n                    }\n                    disabled={currentImageAcceleratorLimits.length <= 0}\n                    inputNumberProps={{\n                      addonAfter: (\n                        <Form.Item\n                          noStyle\n                          name={['resource', 'acceleratorType']}\n                          initialValue={currentImageAcceleratorTypeName}\n                        >\n                          <Select\n                            disabled={currentImageAcceleratorLimits.length <= 0}\n                            suffixIcon={\n                              _.size(acceleratorSlots) > 1 ? undefined : null\n                            }\n                            open={\n                              _.size(acceleratorSlots) > 1 ? undefined : false\n                            }\n                            popupMatchSelectWidth={false}\n                            options={_.map(acceleratorSlots, (value, name) => {\n                              return {\n                                value: name,\n                                label: ACCELERATOR_UNIT_MAP[name] || 'UNIT',\n                                disabled:\n                                  currentImageAcceleratorLimits.length > 0 &&\n                                  !_.find(\n                                    currentImageAcceleratorLimits,\n                                    (limit) => {\n                                      return limit?.key === name;\n                                    },\n                                  ),\n                              };\n                            })}\n                          />\n                        </Form.Item>\n                      ),\n                    }}\n                    required\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  />\n                );\n              }}\n            </Form.Item>\n          </Card>\n        </Form>\n      </Suspense>\n    </BAIModal>\n  );\n};\n\nexport default ServiceLauncherModal;\n","import BAIModal, { BAIModalProps } from './BAIModal';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Checkbox, Input, theme, Form } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface FormValues {\n  searchInput?: string;\n  selectedColumnKeys?: string[];\n}\n\ninterface TableColumnsSettingProps extends BAIModalProps {\n  open: boolean;\n  onRequestClose: (formValues?: FormValues) => void;\n  columns: ColumnsType<any>;\n  displayedColumnKeys?: string[];\n}\n\nconst TableColumnsSettingModal: React.FC<TableColumnsSettingProps> = ({\n  open,\n  onRequestClose,\n  columns,\n  displayedColumnKeys,\n  ...modalProps\n}) => {\n  const [form] = Form.useForm<FormValues>();\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const onChangeTitleToString: any = (element: any) => {\n    const text = React.Children.map(element.props.children, (child) => {\n      if (typeof child === 'string') {\n        return child;\n      }\n    });\n    return text;\n  };\n\n  const columnOptions = columns.map((column) => {\n    if (typeof column.title === 'string') {\n      return {\n        label: column.title,\n        value: _.toString(column.key),\n      };\n    } else if (typeof column.title === 'object' && 'props' in column.title!) {\n      return {\n        label: onChangeTitleToString(column.title),\n        value: _.toString(column.key),\n      };\n    } else {\n      return {\n        label: undefined,\n        value: _.toString(column.key),\n      };\n    }\n  });\n\n  return (\n    <BAIModal\n      title={t('table.SettingTable')}\n      open={open}\n      destroyOnClose\n      centered\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            onRequestClose(values);\n          })\n          .catch(() => {});\n      }}\n      onCancel={() => {\n        onRequestClose();\n      }}\n      {...modalProps}\n    >\n      <Form\n        form={form}\n        preserve={false}\n        initialValues={{\n          selectedColumnKeys:\n            displayedColumnKeys ||\n            columnOptions.map((columnOption) => columnOption.value),\n        }}\n        layout=\"vertical\"\n      >\n        <Form.Item\n          name=\"searchInput\"\n          label={t('table.SelectColumnToDisplay')}\n          style={{ marginBottom: 0 }}\n        >\n          <Input\n            prefix={<SearchOutlined />}\n            style={{ marginBottom: token.marginSM }}\n            placeholder={t('table.SearchTableColumn')}\n          />\n        </Form.Item>\n        <Form.Item\n          noStyle\n          shouldUpdate={(prev, cur) => prev.searchInput !== cur.searchInput}\n        >\n          {({ getFieldValue }) => {\n            const searchKeyword = getFieldValue('searchInput')\n              ? _.toLower(getFieldValue('searchInput'))\n              : undefined;\n\n            const filteredColumns = columnOptions.map((columnOption) =>\n              _.toLower(_.toString(columnOption.label)).includes(\n                searchKeyword || '',\n              )\n                ? columnOption\n                : {\n                    ...columnOption,\n                    style: {\n                      display: 'none',\n                    },\n                  },\n            );\n            return (\n              <Form.Item\n                name=\"selectedColumnKeys\"\n                style={{\n                  height: 220,\n                  overflowY: 'auto',\n                }}\n              >\n                <Checkbox.Group\n                  options={filteredColumns}\n                  style={{ flexDirection: 'column' }}\n                />\n              </Form.Item>\n            );\n          }}\n        </Form.Item>\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default TableColumnsSettingModal;\n","import { useCallback, useEffect, useRef } from 'react';\nimport useLatest from '../useLatest';\nimport { isNumber } from '../utils';\nvar setRafInterval = function (callback, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n  if (typeof requestAnimationFrame === typeof undefined) {\n    return {\n      id: setInterval(callback, delay)\n    };\n  }\n  var start = new Date().getTime();\n  var handle = {\n    id: 0\n  };\n  var loop = function () {\n    var current = new Date().getTime();\n    if (current - start >= delay) {\n      callback();\n      start = new Date().getTime();\n    }\n    handle.id = requestAnimationFrame(loop);\n  };\n  handle.id = requestAnimationFrame(loop);\n  return handle;\n};\nfunction cancelAnimationFrameIsNotDefined(t) {\n  return typeof cancelAnimationFrame === typeof undefined;\n}\nvar clearRafInterval = function (handle) {\n  if (cancelAnimationFrameIsNotDefined(handle.id)) {\n    return clearInterval(handle.id);\n  }\n  cancelAnimationFrame(handle.id);\n};\nfunction useRafInterval(fn, delay, options) {\n  var immediate = options === null || options === void 0 ? void 0 : options.immediate;\n  var fnRef = useLatest(fn);\n  var timerRef = useRef();\n  useEffect(function () {\n    if (!isNumber(delay) || delay < 0) return;\n    if (immediate) {\n      fnRef.current();\n    }\n    timerRef.current = setRafInterval(function () {\n      fnRef.current();\n    }, delay);\n    return function () {\n      if (timerRef.current) {\n        clearRafInterval(timerRef.current);\n      }\n    };\n  }, [delay]);\n  var clear = useCallback(function () {\n    if (timerRef.current) {\n      clearRafInterval(timerRef.current);\n    }\n  }, []);\n  return clear;\n}\nexport default useRafInterval;","import { useRef } from 'react';\nexport var createUpdateEffect = function (hook) {\n  return function (effect, deps) {\n    var isMounted = useRef(false);\n    // for react-refresh\n    hook(function () {\n      return function () {\n        isMounted.current = false;\n      };\n    }, []);\n    hook(function () {\n      if (!isMounted.current) {\n        isMounted.current = true;\n      } else {\n        return effect();\n      }\n    }, deps);\n  };\n};\nexport default createUpdateEffect;","import { useEffect } from 'react';\nimport { createUpdateEffect } from '../createUpdateEffect';\nexport default createUpdateEffect(useEffect);","var isBrowser = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nexport default isBrowser;","import { __read } from \"tslib\";\n/* eslint-disable no-empty */\nimport { useState } from 'react';\nimport useMemoizedFn from '../useMemoizedFn';\nimport useUpdateEffect from '../useUpdateEffect';\nimport { isFunction, isUndef } from '../utils';\nexport function createUseStorageState(getStorage) {\n  function useStorageState(key, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var storage;\n    var _a = options.onError,\n      onError = _a === void 0 ? function (e) {\n        console.error(e);\n      } : _a;\n    // https://github.com/alibaba/hooks/issues/800\n    try {\n      storage = getStorage();\n    } catch (err) {\n      onError(err);\n    }\n    var serializer = function (value) {\n      if (options === null || options === void 0 ? void 0 : options.serializer) {\n        return options === null || options === void 0 ? void 0 : options.serializer(value);\n      }\n      return JSON.stringify(value);\n    };\n    var deserializer = function (value) {\n      if (options === null || options === void 0 ? void 0 : options.deserializer) {\n        return options === null || options === void 0 ? void 0 : options.deserializer(value);\n      }\n      return JSON.parse(value);\n    };\n    function getStoredValue() {\n      try {\n        var raw = storage === null || storage === void 0 ? void 0 : storage.getItem(key);\n        if (raw) {\n          return deserializer(raw);\n        }\n      } catch (e) {\n        onError(e);\n      }\n      if (isFunction(options === null || options === void 0 ? void 0 : options.defaultValue)) {\n        return options === null || options === void 0 ? void 0 : options.defaultValue();\n      }\n      return options === null || options === void 0 ? void 0 : options.defaultValue;\n    }\n    var _b = __read(useState(function () {\n        return getStoredValue();\n      }), 2),\n      state = _b[0],\n      setState = _b[1];\n    useUpdateEffect(function () {\n      setState(getStoredValue());\n    }, [key]);\n    var updateState = function (value) {\n      var currentState = isFunction(value) ? value(state) : value;\n      setState(currentState);\n      if (isUndef(currentState)) {\n        storage === null || storage === void 0 ? void 0 : storage.removeItem(key);\n      } else {\n        try {\n          storage === null || storage === void 0 ? void 0 : storage.setItem(key, serializer(currentState));\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    };\n    return [state, useMemoizedFn(updateState)];\n  }\n  return useStorageState;\n}","import { createUseStorageState } from '../createUseStorageState';\nimport isBrowser from '../utils/isBrowser';\nvar useLocalStorageState = createUseStorageState(function () {\n  return isBrowser ? localStorage : undefined;\n});\nexport default useLocalStorageState;","import BAIModal from '../components/BAIModal';\nimport EndpointStatusTag from '../components/EndpointStatusTag';\nimport Flex from '../components/Flex';\nimport ModelServiceSettingModal from '../components/ModelServiceSettingModal';\nimport ServiceLauncherModal from '../components/ServiceLauncherModal';\nimport TableColumnsSettingModal from '../components/TableColumnsSettingModal';\nimport { baiSignedRequestWithPromise } from '../helper';\nimport {\n  useCurrentProjectValue,\n  useSuspendedBackendaiClient,\n  useUpdatableState,\n} from '../hooks';\n// import { getSortOrderByName } from '../hooks/reactPaginationQueryOptions';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport {\n  ServingListPageQuery,\n  ServingListPageQuery$data,\n} from './__generated__/ServingListPageQuery.graphql';\nimport {\n  CheckOutlined,\n  CloseOutlined,\n  DeleteOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { useRafInterval } from 'ahooks';\nimport { useLocalStorageState } from 'ahooks';\nimport { Button, Table, Tabs, Typography, theme } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport graphql from 'babel-plugin-relay/macro';\nimport { default as dayjs } from 'dayjs';\nimport _ from 'lodash';\nimport React, {\n  PropsWithChildren,\n  Suspense,\n  useState,\n  useTransition,\n  startTransition as startTransitionWithoutPendingState,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\nimport { Link } from 'react-router-dom';\n\n// FIXME: need to apply filtering type of service later\ntype TabKey = 'services'; //  \"running\" | \"finished\" | \"others\";\n\nexport type Endpoint = NonNullable<\n  NonNullable<\n    NonNullable<\n      NonNullable<ServingListPageQuery$data>['endpoint_list']\n    >['items']\n  >[0]\n>;\n\nconst ServingListPage: React.FC<PropsWithChildren> = ({ children }) => {\n  const { t } = useTranslation();\n  const baiClient = useSuspendedBackendaiClient();\n  const { token } = theme.useToken();\n  const curProject = useCurrentProjectValue();\n  const [isOpenServiceLauncher, setIsOpenServiceLauncher] = useState(false);\n  const [isOpenColumnsSetting, setIsOpenColumnsSetting] = useState(false);\n  const [selectedModelService, setSelectedModelService] = useState<Endpoint>();\n  const [isOpenModelServiceSettingModal, setIsOpenModelServiceSettingModal] =\n    useState(false);\n\n  // const [paginationState, setPaginationState] = useState<{\n  const [paginationState] = useState<{\n    current: number;\n    pageSize: number;\n  }>({\n    current: 1,\n    pageSize: 100,\n  });\n\n  const [isRefetchPending, startRefetchTransition] = useTransition();\n  const [\n    isOpenModelServiceTerminatingModal,\n    setIsOpenModelServiceTerminatingModal,\n  ] = useState(false);\n  const [servicesFetchKey, updateServicesFetchKey] =\n    useUpdatableState('initial-fetch');\n  // FIXME: need to apply filtering type of service later\n  const [selectedTab, setSelectedTab] = useState<TabKey>('services');\n  // const [selectedGeneration, setSelectedGeneration] = useState<\n  //   \"current\" | \"next\"\n  // >(\"next\");\n\n  const columns: ColumnsType<Endpoint> = [\n    {\n      title: t('modelService.EndpointName'),\n      dataIndex: 'endpoint_id',\n      key: 'endpointName',\n      fixed: 'left',\n      render: (endpoint_id, row) => (\n        <Link to={'/serving/' + endpoint_id}>{row.name}</Link>\n      ),\n    },\n    {\n      title: t('modelService.EndpointId'),\n      dataIndex: 'endpoint_id',\n      key: 'endpoint_id',\n      width: 310,\n      render: (endpoint_id) => (\n        <Typography.Text code>{endpoint_id}</Typography.Text>\n      ),\n    },\n    {\n      title: t('modelService.ServiceEndpoint'),\n      dataIndex: 'endpoint_id',\n      key: 'url',\n      render: (endpoint_id, row) =>\n        row.url ? (\n          <Typography.Link copyable href={row.url} target=\"_blank\">\n            {row.url}\n          </Typography.Link>\n        ) : (\n          '-'\n        ),\n    },\n    {\n      title: t('modelService.Controls'),\n      dataIndex: 'controls',\n      key: 'controls',\n      render: (text, row) => (\n        <Flex direction=\"row\" align=\"stretch\">\n          <Button\n            type=\"text\"\n            icon={<SettingOutlined />}\n            style={\n              row.desired_session_count < 0 ||\n              row.status?.toLowerCase() === 'destroying'\n                ? undefined\n                : {\n                    color: '#29b6f6',\n                  }\n            }\n            disabled={\n              row.desired_session_count < 0 ||\n              row.status?.toLowerCase() === 'destroying'\n            }\n            onClick={() => {\n              setIsOpenModelServiceSettingModal(true);\n              setSelectedModelService(row);\n            }}\n          />\n          <Button\n            type=\"text\"\n            icon={\n              <DeleteOutlined\n                style={\n                  row.desired_session_count < 0 ||\n                  row.status?.toLowerCase() === 'destroying'\n                    ? undefined\n                    : {\n                        color: token.colorError,\n                      }\n                }\n              />\n            }\n            disabled={\n              row.desired_session_count < 0 ||\n              row.status?.toLowerCase() === 'destroying'\n            }\n            onClick={() => {\n              setIsOpenModelServiceTerminatingModal(true);\n              setSelectedModelService(row);\n            }}\n          />\n        </Flex>\n      ),\n    },\n    {\n      title: t('modelService.Status'),\n      key: 'status',\n      render: (text, row) => <EndpointStatusTag endpointFrgmt={row} />,\n    },\n    ...(baiClient.is_admin\n      ? [\n          {\n            title: t('modelService.Owner'),\n            dataIndex: 'created_user',\n            key: 'session_owner',\n            render: (created_user: string) => created_user,\n          },\n        ]\n      : []),\n    {\n      title: t('modelService.CreatedAt'),\n      dataIndex: 'created_at',\n      key: 'createdAt',\n      render: (created_at) => {\n        return dayjs(created_at).format('ll LT');\n      },\n      defaultSortOrder: 'descend',\n      sortDirections: ['descend', 'ascend', 'descend'],\n      sorter: (a, b) => {\n        const date1 = dayjs(a.created_at);\n        const date2 = dayjs(b.created_at);\n        return date1.diff(date2);\n      },\n    },\n    {\n      title: t('modelService.DesiredSessionCount'),\n      dataIndex: 'desired_session_count',\n      key: 'desiredSessionCount',\n      render: (desired_session_count) => {\n        return desired_session_count < 0 ? '-' : desired_session_count;\n      },\n    },\n    {\n      title: (\n        <Flex direction=\"column\" align=\"start\">\n          {t('modelService.RoutingsCount')}\n          <br />\n          <Typography.Text type=\"secondary\" style={{ fontWeight: 'normal' }}>\n            ({t('modelService.Active/Total')})\n          </Typography.Text>\n        </Flex>\n      ),\n      // dataIndex: \"active_route_count\",\n      key: 'routingCount',\n      render: (text, row) => {\n        return (\n          _.filter(row.routings, (r) => r?.status === 'HEALTHY').length +\n          ' / ' +\n          row.routings?.length\n        );\n        // [r for r in endpoint.routings if r.status == RouteStatus.HEALTHY]\n      },\n    },\n    {\n      title: t('modelService.Public'),\n      key: 'public',\n      render: (text, row) =>\n        row.open_to_public ? (\n          <CheckOutlined style={{ color: token.colorSuccess }} />\n        ) : (\n          <CloseOutlined style={{ color: token.colorTextSecondary }} />\n        ),\n    },\n  ];\n  const [displayedColumnKeys, setDisplayedColumnKeys] = useLocalStorageState(\n    'backendaiwebui.ServingListPage.displayedColumnKeys',\n    {\n      defaultValue: columns.map((column) => _.toString(column.key)),\n    },\n  );\n\n  useRafInterval(() => {\n    startTransitionWithoutPendingState(() => {\n      updateServicesFetchKey();\n    });\n  }, 7000);\n\n  const { endpoint_list: modelServiceList } =\n    // TODO: need to convert LazyLoadQuery to pagination query with option\n    useLazyLoadQuery<ServingListPageQuery>(\n      graphql`\n        query ServingListPageQuery(\n          $offset: Int!\n          $limit: Int!\n          $projectID: UUID\n        ) {\n          endpoint_list(\n            offset: $offset\n            limit: $limit\n            project: $projectID\n            filter: \"name != 'koalpaca-test'\"\n          ) {\n            total_count\n            items {\n              name\n              endpoint_id\n              image\n              model\n              domain\n              status\n              project\n              resource_group\n              resource_slots\n              url\n              open_to_public\n              created_at @since(version: \"23.09.0\")\n              created_user\n              desired_session_count @required(action: NONE)\n              routings {\n                routing_id\n                endpoint\n                session\n                traffic_ratio\n                status\n              }\n              ...ModelServiceSettingModal_endpoint\n              ...EndpointStatusTagFragment\n            }\n          }\n        }\n      `,\n      {\n        offset: (paginationState.current - 1) * paginationState.pageSize,\n        limit: paginationState.pageSize,\n        projectID: curProject.id,\n      },\n      {\n        fetchPolicy:\n          servicesFetchKey === 'initial-fetch'\n            ? 'store-and-network'\n            : 'network-only',\n        fetchKey: servicesFetchKey,\n      },\n    );\n\n  const sortedEndpointList = _.sortBy(modelServiceList?.items, 'name');\n\n  // FIXME: struggling with sending data when active tab changes!\n  // const runningModelServiceList = modelServiceList?.filter(\n  //   (item: any) => item.desired_session_count >= 0\n  // );\n\n  // const terminatedModelServiceList = modelServiceList?.filter(\n  //   (item: any) => item.desired_session_count < 0\n  // );\n\n  const terminateModelServiceMutation = useTanMutation({\n    mutationFn: () => {\n      return baiSignedRequestWithPromise({\n        method: 'DELETE',\n        url: '/services/' + selectedModelService?.endpoint_id,\n        client: baiClient,\n      });\n    },\n  });\n  // const { data, refetch } = useTanQuery({\n  //   queryKey: \"terminateModelService\",\n  //   queryFn: () => {\n  //     return baiSignedRequestWithPromise({\n  //       method: \"DELETE\",\n  //       url: \"/services/\" + selectedModelService?.id,\n  //       client: baiClient,\n  //     });\n  //   },\n  //   onSuccess: (res: any) => {\n  //     console.log(res);\n  //   },\n  //   onError: (err: any) => {\n  //     console.log(err);\n  //   },\n  //   enabled: false,\n  //   // for to render even this query fails\n  //   suspense: true,\n  // });\n\n  return (\n    <>\n      <Flex\n        direction=\"column\"\n        align=\"stretch\"\n        style={{ padding: token.padding }}\n        gap={'xs'}\n      >\n        {/* <Card bordered title={t(\"summary.ResourceStatistics\")}>\n          <p>SessionList</p>\n        </Card> */}\n        {/* <Card bodyStyle={{ paddingTop: 0 }}> */}\n        <Flex direction=\"column\" align=\"stretch\">\n          <Flex style={{ flex: 1 }}>\n            <Tabs\n              // type=\"card\"\n              activeKey={selectedTab}\n              onChange={(key) => setSelectedTab(key as TabKey)}\n              tabBarStyle={{ marginBottom: 0 }}\n              style={{\n                width: '100%',\n                paddingLeft: token.paddingMD,\n                paddingRight: token.paddingMD,\n                borderTopLeftRadius: token.borderRadius,\n                borderTopRightRadius: token.borderRadius,\n              }}\n              items={[\n                { key: 'services', label: t('modelService.Services') },\n                // FIXME: need to apply filtering type of service later\n                // {\n                //   key: \"running\",\n                //   label: t(\"session.Running\"),\n                // },\n                // {\n                //   key: \"finished\",\n                //   label: t(\"session.Finished\"),\n                // },\n                // {\n                //   key: \"others\",\n                //   label: t(\"session.Others\"),\n                // },\n              ]}\n              tabBarExtraContent={{\n                right: (\n                  <Button\n                    type=\"primary\"\n                    onClick={() => {\n                      setIsOpenServiceLauncher(true);\n                    }}\n                  >\n                    {t('modelService.StartService')}\n                  </Button>\n                ),\n              }}\n            />\n            {/* <Button type=\"text\" icon={<MoreOutlined />} /> */}\n          </Flex>\n          {/* <Button type=\"primary\" icon={<PoweroffOutlined />}>\n          시작\n        </Button> */}\n\n          {/* @ts-ignore */}\n          {/* <backend-ai-session-launcher\n        location=\"session\"\n        id=\"session-launcher\"\n        active\n      /> */}\n          <Suspense fallback={<div>loading..</div>}>\n            {/* <ServingList\n              loading={isRefetchPending}\n              projectId={curProject.id}\n              status={[]}\n              extraFetchKey={\"\"}\n              dataSource={modelServiceList}\n              onClickEdit={(row) => {\n                setIsOpenModelServiceSettingModal(true);\n                setSelectedModelService(row);\n              }}\n              onClickTerminate={(row) => {\n                setIsOpenModelServiceTerminatingModal(true);\n                setSelectedModelService(row);\n              }}\n            /> */}\n            <Table\n              loading={isRefetchPending}\n              scroll={{ x: 'max-content' }}\n              rowKey={'endpoint_id'}\n              dataSource={(sortedEndpointList || []) as Endpoint[]}\n              columns={columns.filter(\n                (column) =>\n                  displayedColumnKeys?.includes(_.toString(column.key)),\n              )}\n              pagination={false}\n              // pagination={{\n              //   pageSize: paginationState.pageSize,\n              //   current: paginationState.current,\n              //   total: modelServiceList?.total_count || 0,\n              //   showSizeChanger: true,\n              //   // showTotal(total, range) {\n              //   //   return `${range[0]}-${range[1]} of ${total}`;\n              //   // },\n              //   onChange(page, pageSize) {\n              //     startRefetchTransition(() => {\n              //       setPaginationState({\n              //         current: page,\n              //         pageSize: pageSize || 100,\n              //       });\n              //     });\n              //   },\n              // }}\n            />\n          </Suspense>\n        </Flex>\n        <Flex justify=\"end\">\n          <Button\n            type=\"text\"\n            icon={<SettingOutlined />}\n            onClick={() => {\n              setIsOpenColumnsSetting(true);\n            }}\n          />\n        </Flex>\n      </Flex>\n      <BAIModal\n        open={isOpenModelServiceTerminatingModal}\n        title={t('dialog.title.LetsDouble-Check')}\n        okButtonProps={{\n          loading: terminateModelServiceMutation.isLoading,\n        }}\n        onOk={() => {\n          // FIXME: any better idea for handling result?\n          terminateModelServiceMutation.mutate(undefined, {\n            onSuccess: (res) => {\n              startRefetchTransition(() => {\n                updateServicesFetchKey();\n              });\n              setIsOpenModelServiceTerminatingModal(false);\n            },\n            onError: (err) => {\n              console.log('terminateModelServiceMutation Error', err);\n            },\n          });\n        }}\n        onCancel={() => {\n          setIsOpenModelServiceTerminatingModal(false);\n        }}\n      >\n        <Flex direction=\"column\" align=\"stretch\" justify=\"center\">\n          <p>\n            {t('modelService.YouAreAboutToTerminate') +\n              (selectedModelService?.name || '') +\n              '.'}\n          </p>\n          <p>{t('dialog.ask.DoYouWantToProceed')}</p>\n        </Flex>\n      </BAIModal>\n      <ModelServiceSettingModal\n        open={isOpenModelServiceSettingModal}\n        onRequestClose={(success) => {\n          setIsOpenModelServiceSettingModal(false);\n          if (success) {\n            startRefetchTransition(() => {\n              updateServicesFetchKey();\n            });\n          }\n        }}\n        endpointFrgmt={selectedModelService || null}\n      />\n      <ServiceLauncherModal\n        open={isOpenServiceLauncher}\n        onRequestClose={(success) => {\n          setIsOpenServiceLauncher(!isOpenServiceLauncher);\n          if (success) {\n            startRefetchTransition(() => {\n              updateServicesFetchKey();\n            });\n          }\n        }}\n      />\n      <TableColumnsSettingModal\n        open={isOpenColumnsSetting}\n        onRequestClose={(values) => {\n          values?.selectedColumnKeys &&\n            setDisplayedColumnKeys(values?.selectedColumnKeys);\n          setIsOpenColumnsSetting(false);\n        }}\n        columns={columns}\n        displayedColumnKeys={displayedColumnKeys ? displayedColumnKeys : []}\n      />\n    </>\n  );\n};\n\nexport default ServingListPage;\n","/**\n * @generated SignedSource<<924d535c03c0a4c6de25e9db62dfc331>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ServingListPageQuery$variables = {\n  limit: number;\n  offset: number;\n  projectID?: string | null;\n};\nexport type ServingListPageQuery$data = {\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly created_at: string;\n      readonly created_user: string | null;\n      readonly desired_session_count: number;\n      readonly domain: string | null;\n      readonly endpoint_id: string | null;\n      readonly image: string | null;\n      readonly model: string | null;\n      readonly name: string | null;\n      readonly open_to_public: boolean | null;\n      readonly project: string | null;\n      readonly resource_group: string | null;\n      readonly resource_slots: any | null;\n      readonly routings: ReadonlyArray<{\n        readonly endpoint: string | null;\n        readonly routing_id: string | null;\n        readonly session: string | null;\n        readonly status: string | null;\n        readonly traffic_ratio: number | null;\n      } | null> | null;\n      readonly status: string | null;\n      readonly url: string | null;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointStatusTagFragment\" | \"ModelServiceSettingModal_endpoint\">;\n    } | null>;\n    readonly total_count: number;\n  } | null;\n};\nexport type ServingListPageQuery = {\n  response: ServingListPageQuery$data;\n  variables: ServingListPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"projectID\"\n},\nv3 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"filter\",\n    \"value\": \"name != 'koalpaca-test'\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"limit\",\n    \"variableName\": \"limit\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"offset\",\n    \"variableName\": \"offset\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"project\",\n    \"variableName\": \"projectID\"\n  }\n],\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"total_count\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"image\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"model\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"project\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_group\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_slots\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"open_to_public\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"created_at\",\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"created_user\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"desired_session_count\",\n  \"storageKey\": null\n},\nv19 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"routing_id\",\n  \"storageKey\": null\n},\nv20 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint\",\n  \"storageKey\": null\n},\nv21 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"session\",\n  \"storageKey\": null\n},\nv22 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"traffic_ratio\",\n  \"storageKey\": null\n},\nv23 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ServingListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v4/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v5/*: any*/),\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              {\n                \"kind\": \"RequiredField\",\n                \"field\": (v18/*: any*/),\n                \"action\": \"NONE\",\n                \"path\": \"endpoint_list.items.desired_session_count\"\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Routing\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"routings\",\n                \"plural\": true,\n                \"selections\": [\n                  (v19/*: any*/),\n                  (v20/*: any*/),\n                  (v21/*: any*/),\n                  (v22/*: any*/),\n                  (v10/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"ModelServiceSettingModal_endpoint\"\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"EndpointStatusTagFragment\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v0/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"ServingListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v4/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v5/*: any*/),\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              (v18/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Routing\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"routings\",\n                \"plural\": true,\n                \"selections\": [\n                  (v19/*: any*/),\n                  (v20/*: any*/),\n                  (v21/*: any*/),\n                  (v22/*: any*/),\n                  (v10/*: any*/),\n                  (v23/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              (v23/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"b3f7122c428341734000f9de6c03928c\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ServingListPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ServingListPageQuery(\\n  $offset: Int!\\n  $limit: Int!\\n  $projectID: UUID\\n) {\\n  endpoint_list(offset: $offset, limit: $limit, project: $projectID, filter: \\\"name != 'koalpaca-test'\\\") {\\n    total_count\\n    items {\\n      name\\n      endpoint_id\\n      image\\n      model\\n      domain\\n      status\\n      project\\n      resource_group\\n      resource_slots\\n      url\\n      open_to_public\\n      created_at @since(version: \\\"23.09.0\\\")\\n      created_user\\n      desired_session_count\\n      routings {\\n        routing_id\\n        endpoint\\n        session\\n        traffic_ratio\\n        status\\n        id\\n      }\\n      ...ModelServiceSettingModal_endpoint\\n      ...EndpointStatusTagFragment\\n      id\\n    }\\n  }\\n}\\n\\nfragment EndpointStatusTagFragment on Endpoint {\\n  id\\n  status\\n}\\n\\nfragment ModelServiceSettingModal_endpoint on Endpoint {\\n  endpoint_id\\n  desired_session_count\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"4bdd65d4de1c5a874a4377337f62fe49\";\n\nexport default node;\n","// This icon file is generated automatically.\nvar DeleteOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\" } }] }, \"name\": \"delete\", \"theme\": \"outlined\" };\nexport default DeleteOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: DeleteOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  DeleteOutlined.displayName = 'DeleteOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(DeleteOutlined);","// This icon file is generated automatically.\nvar SettingOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M924.8 625.7l-65.5-56c3.1-19 4.7-38.4 4.7-57.8s-1.6-38.8-4.7-57.8l65.5-56a32.03 32.03 0 009.3-35.2l-.9-2.6a443.74 443.74 0 00-79.7-137.9l-1.8-2.1a32.12 32.12 0 00-35.1-9.5l-81.3 28.9c-30-24.6-63.5-44-99.7-57.6l-15.7-85a32.05 32.05 0 00-25.8-25.7l-2.7-.5c-52.1-9.4-106.9-9.4-159 0l-2.7.5a32.05 32.05 0 00-25.8 25.7l-15.8 85.4a351.86 351.86 0 00-99 57.4l-81.9-29.1a32 32 0 00-35.1 9.5l-1.8 2.1a446.02 446.02 0 00-79.7 137.9l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.3 56.6c-3.1 18.8-4.6 38-4.6 57.1 0 19.2 1.5 38.4 4.6 57.1L99 625.5a32.03 32.03 0 00-9.3 35.2l.9 2.6c18.1 50.4 44.9 96.9 79.7 137.9l1.8 2.1a32.12 32.12 0 0035.1 9.5l81.9-29.1c29.8 24.5 63.1 43.9 99 57.4l15.8 85.4a32.05 32.05 0 0025.8 25.7l2.7.5a449.4 449.4 0 00159 0l2.7-.5a32.05 32.05 0 0025.8-25.7l15.7-85a350 350 0 0099.7-57.6l81.3 28.9a32 32 0 0035.1-9.5l1.8-2.1c34.8-41.1 61.6-87.5 79.7-137.9l.9-2.6c4.5-12.3.8-26.3-9.3-35zM788.3 465.9c2.5 15.1 3.8 30.6 3.8 46.1s-1.3 31-3.8 46.1l-6.6 40.1 74.7 63.9a370.03 370.03 0 01-42.6 73.6L721 702.8l-31.4 25.8c-23.9 19.6-50.5 35-79.3 45.8l-38.1 14.3-17.9 97a377.5 377.5 0 01-85 0l-17.9-97.2-37.8-14.5c-28.5-10.8-55-26.2-78.7-45.7l-31.4-25.9-93.4 33.2c-17-22.9-31.2-47.6-42.6-73.6l75.5-64.5-6.5-40c-2.4-14.9-3.7-30.3-3.7-45.5 0-15.3 1.2-30.6 3.7-45.5l6.5-40-75.5-64.5c11.3-26.1 25.6-50.7 42.6-73.6l93.4 33.2 31.4-25.9c23.7-19.5 50.2-34.9 78.7-45.7l37.9-14.3 17.9-97.2c28.1-3.2 56.8-3.2 85 0l17.9 97 38.1 14.3c28.7 10.8 55.4 26.2 79.3 45.8l31.4 25.8 92.8-32.9c17 22.9 31.2 47.6 42.6 73.6L781.8 426l6.5 39.9zM512 326c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm79.2 255.2A111.6 111.6 0 01512 614c-29.9 0-58-11.7-79.2-32.8A111.6 111.6 0 01400 502c0-29.9 11.7-58 32.8-79.2C454 401.6 482.1 390 512 390c29.9 0 58 11.6 79.2 32.8A111.6 111.6 0 01624 502c0 29.9-11.7 58-32.8 79.2z\" } }] }, \"name\": \"setting\", \"theme\": \"outlined\" };\nexport default SettingOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport SettingOutlinedSvg from \"@ant-design/icons-svg/es/asn/SettingOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar SettingOutlined = function SettingOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: SettingOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  SettingOutlined.displayName = 'SettingOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(SettingOutlined);"],"names":["_ref","_endpoint$status","endpointFrgmt","endpoint","useFragment","_EndpointStatusTagFragment","require","color","status","toUpperCase","_jsx","Tag","children","onRequestClose","baiModalProps","_objectWithoutProperties","_excluded","token","theme","useToken","baiClient","useSuspendedBackendaiClient","t","useTranslation","_Form$useForm","Form","useForm","form","_slicedToArray","_ModelServiceSettingModal_endpoint","mutationToUpdateService","useTanMutation","mutationFn","values","body","to","desired_session_count","baiSignedRequestWithPromise","method","url","concat","endpoint_id","client","BAIModal","_objectSpread","style","zIndex","destroyOnClose","onOk","e","validateFields","then","mutate","onSuccess","console","log","onError","error","catch","err","onCancel","okButtonProps","loading","isLoading","title","Flex","direction","align","justify","preserve","validateTrigger","initialValues","marginBottom","marginLG","marginTop","margin","Item","name","label","rules","pattern","message","InputNumber","type","min","node","max","step","required","inputNumberProps","sliderProps","initialValue","disabled","formItemProps","useFormInstance","useEffect","getFieldValue","setFieldValue","Math","round","_jsxs","gap","flex","noStyle","Slider","minWidth","onStep","value","info","_$first","_$first2","filter","autoSelectDefault","selectProps","currentProject","useCurrentProjectValue","baiRequestWithPromise","useBaiSignedRequestWithPromise","_useUpdatableState","useUpdatableState","_useUpdatableState2","key","checkUpdate","data","useTanQuery","queryKey","queryFn","id","staleTime","filteredVFolders","_","autoSelectedOption","undefined","_selectProps$onChange","onChange","call","Select","showSearch","onDropdownVisibleChange","open","startTransition","vfolder","Option","extraP","_$filter$","modalProps","currentDomain","useCurrentDomainValue","_useResourceSlots","useResourceSlots","resourceSlots","currentImage","useWatch","currentAcceleratorType","currentImageAcceleratorLimits","resource_limits","limit","currentImageAcceleratorTypeName","acceleratorInfo","includes","acceleratorSlots","getLimitByAccelerator","ACCELERATOR_UNIT_MAP","acceleratorName","_$filter$2","maxLimit","_config","maxCUDADevicesPerContainer","maxCUDASharesPerContainer","maxROCMDevicesPerContainer","maxTPUDevicesPerContainer","maxIPUDevicesPerContainer","maxATOMDevicesPerContainer","maxWarboyDevicesPerContainer","parseInt","supportedAcceleratorInfo","mutationToCreateService","_values$environments$","_values$environments$2","_values$environments$3","_values$environments$4","_values$resource$acce","image","environments","registry","tag","serviceName","desiredRoutingCount","arch","architecture","group","current_group","domain","cluster_size","cluster_mode","open_to_public","openToPublic","config","model","vFolderName","model_mount_destination","environ","scaling_group","resourceGroup","resources","cpu","mem","resource","acceleratorType","accelerator","shmem","resource_opts","length","_err$errorFields","_err$errorFields$0$er","_err$errorFields2","_err$errorFields2$0$e","errorFields","errors","maskClosable","confirmLoading","Suspense","fallback","FlexActivityIndicator","layout","labelCol","span","Input","ResourceGroupSelect","valuePropName","Switch","VFolderSelect","vf","usage_mode","SliderInputFormItem","addonAfter","Card","ImageEnvironmentSelectFormItems","shouldUpdate","prev","cur","_prev$environments","_prev$environments$im","_cur$environments","_cur$environments$ima","digest","_ref2","_getFieldValue","_$find","_Fragment","tooltip","Trans","i18nKey","i","maxCPUCoresPerContainer","maxMemoryPerContainer","_ref3","validator","_form","_$find2","sizeGInfo","iSizeToSize","number","Promise","reject","Error","size","numberUnit","resolve","maxShmPerContainer","_prev$environments2","_cur$environments2","environment","suffixIcon","popupMatchSelectWidth","options","columns","displayedColumnKeys","columnOptions","map","column","element","React","props","child","centered","selectedColumnKeys","columnOption","prefix","SearchOutlined","marginSM","placeholder","searchInput","searchKeyword","filteredColumns","display","height","overflowY","Checkbox","Group","flexDirection","clearRafInterval","handle","cancelAnimationFrame","clearInterval","fn","delay","immediate","fnRef","useLatest","timerRef","useRef","isNumber","current","callback","requestAnimationFrame","setInterval","start","Date","getTime","loop","setRafInterval","useCallback","createUpdateEffect","hook","effect","deps","isMounted","getStorage","window","document","createElement","isBrowser","localStorage","storage","_a","getStoredValue","raw","getItem","deserializer","JSON","parse","isFunction","defaultValue","_b","__read","useState","state","setState","useUpdateEffect","useMemoizedFn","currentState","isUndef","removeItem","setItem","serializer","stringify","curProject","_useState","_useState2","isOpenServiceLauncher","setIsOpenServiceLauncher","_useState3","_useState4","isOpenColumnsSetting","setIsOpenColumnsSetting","_useState5","_useState6","selectedModelService","setSelectedModelService","_useState7","_useState8","isOpenModelServiceSettingModal","setIsOpenModelServiceSettingModal","_useState9","pageSize","paginationState","_useTransition","useTransition","_useTransition2","isRefetchPending","startRefetchTransition","_useState11","_useState12","isOpenModelServiceTerminatingModal","setIsOpenModelServiceTerminatingModal","servicesFetchKey","updateServicesFetchKey","_useState13","_useState14","selectedTab","setSelectedTab","dataIndex","fixed","render","row","Link","width","Typography","Text","code","copyable","href","target","text","_row$status","_row$status2","_row$status3","_row$status4","Button","icon","SettingOutlined","toLowerCase","onClick","DeleteOutlined","colorError","EndpointStatusTag","_toConsumableArray","is_admin","created_user","created_at","dayjs","format","defaultSortOrder","sortDirections","sorter","a","b","date1","date2","diff","fontWeight","_row$routings","routings","r","CheckOutlined","colorSuccess","CloseOutlined","colorTextSecondary","_useLocalStorageState","useLocalStorageState","_useLocalStorageState2","setDisplayedColumnKeys","useRafInterval","startTransitionWithoutPendingState","modelServiceList","useLazyLoadQuery","_ServingListPageQuery","offset","projectID","fetchPolicy","fetchKey","endpoint_list","sortedEndpointList","items","terminateModelServiceMutation","padding","Tabs","activeKey","tabBarStyle","paddingLeft","paddingMD","paddingRight","borderTopLeftRadius","borderRadius","borderTopRightRadius","tabBarExtraContent","right","Table","scroll","x","rowKey","dataSource","pagination","res","ModelServiceSettingModal","success","ServiceLauncherModal","TableColumnsSettingModal","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18","v19","v20","v21","v22","v23","hash","ref","AntdIcon","_extends","DeleteOutlinedSvg","SettingOutlinedSvg"],"sourceRoot":""}