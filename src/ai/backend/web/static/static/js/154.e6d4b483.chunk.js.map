{"version":3,"file":"static/js/154.e6d4b483.chunk.js","mappings":"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","sources":["components/EndpointOwnerInfo.tsx","components/EndpointStatusTag.tsx","components/ModelServiceSettingModal.tsx","components/TableColumnsSettingModal.tsx","components/__generated__/EndpointOwnerInfoFragment.graphql.ts","components/__generated__/EndpointStatusTagFragment.graphql.ts","components/__generated__/ModelServiceSettingModal_endpoint.graphql.ts","components/SliderInputFormItem.tsx","components/VFolderSelect.tsx","components/ServiceLauncherModal.tsx","../node_modules/ahooks/es/useRafInterval/index.js","pages/ServingListPage.tsx","pages/__generated__/ServingListPageQuery.graphql.ts","../node_modules/@ant-design/icons-svg/es/asn/DeleteOutlined.js","../node_modules/@ant-design/icons/es/icons/DeleteOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/SettingOutlined.js","../node_modules/@ant-design/icons/es/icons/SettingOutlined.js"],"sourcesContent":["import { useSuspendedBackendaiClient } from '../hooks';\nimport { EndpointOwnerInfoFragment$key } from './__generated__/EndpointOwnerInfoFragment.graphql';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { Button, Tooltip, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface EndpointOwnerInfoProps {\n  endpointFrgmt: EndpointOwnerInfoFragment$key | null;\n}\nconst EndpointOwnerInfo: React.FC<EndpointOwnerInfoProps> = ({\n  endpointFrgmt,\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n\n  const endpoint = useFragment(\n    graphql`\n      fragment EndpointOwnerInfoFragment on Endpoint {\n        id\n        created_user_email @since(version: \"23.09.8\")\n        session_owner_email @since(version: \"23.09.8\")\n      }\n    `,\n    endpointFrgmt,\n  );\n\n  if (!baiClient.supports('model-serving-endpoint-user-info'))\n    return baiClient.email || '';\n  if (endpoint?.created_user_email === endpoint?.session_owner_email)\n    return endpoint?.session_owner_email || '';\n  else\n    return (\n      <>\n        {endpoint?.session_owner_email || ''}\n        <Tooltip\n          title={t('modelService.ServiceDelegatedFrom', {\n            createdUser: endpoint?.created_user_email || '',\n            sessionOwner: endpoint?.session_owner_email || '',\n          })}\n        >\n          <Button\n            size=\"small\"\n            type=\"text\"\n            icon={<QuestionCircleOutlined />}\n            style={{ color: token.colorTextSecondary }}\n          />\n        </Tooltip>\n      </>\n    );\n};\n\nexport default EndpointOwnerInfo;\n","import { EndpointStatusTagFragment$key } from './__generated__/EndpointStatusTagFragment.graphql';\nimport { Tag } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useFragment } from 'react-relay';\n\ninterface EndpointStatusTagProps {\n  endpointFrgmt: EndpointStatusTagFragment$key | null;\n}\nconst EndpointStatusTag: React.FC<EndpointStatusTagProps> = ({\n  endpointFrgmt,\n}) => {\n  const endpoint = useFragment(\n    graphql`\n      fragment EndpointStatusTagFragment on Endpoint {\n        id\n        status\n      }\n    `,\n    endpointFrgmt,\n  );\n  let color = 'default';\n  switch (endpoint?.status?.toUpperCase()) {\n    case 'RUNNING':\n    case 'HEALTHY':\n      color = 'success';\n      break;\n\n    // case 'TERMINATED':\n    //   color = 'default';\n    //   break;\n  }\n\n  return <Tag color={color}>{endpoint?.status}</Tag>;\n};\n\nexport default EndpointStatusTag;\n","import { baiSignedRequestWithPromise } from '../helper';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport { ModelServiceSettingModal_endpoint$key } from './__generated__/ModelServiceSettingModal_endpoint.graphql';\nimport { Form, InputNumber, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface Props extends BAIModalProps {\n  endpointFrgmt: ModelServiceSettingModal_endpoint$key | null;\n  onRequestClose: (success?: boolean) => void;\n}\n\ninterface ServiceSettingFormInput {\n  desired_session_count: number;\n}\n\nconst ModelServiceSettingModal: React.FC<Props> = ({\n  onRequestClose,\n  endpointFrgmt,\n  ...baiModalProps\n}) => {\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n\n  const endpoint = useFragment(\n    graphql`\n      fragment ModelServiceSettingModal_endpoint on Endpoint {\n        endpoint_id\n        desired_session_count\n      }\n    `,\n    endpointFrgmt,\n  );\n\n  const mutationToUpdateService = useTanMutation({\n    mutationFn: (values: ServiceSettingFormInput) => {\n      const body = {\n        to: values.desired_session_count,\n      };\n      return baiSignedRequestWithPromise({\n        method: 'POST',\n        url: `/services/${endpoint?.endpoint_id}/scale`,\n        body,\n        client: baiClient,\n      });\n    },\n  });\n\n  // Apply any operation after clicking OK button\n  const handleOk = (e: React.MouseEvent<HTMLElement>) => {\n    form\n      .validateFields()\n      .then((values) => {\n        mutationToUpdateService.mutate(values, {\n          onSuccess: () => {\n            console.log('service updated');\n            onRequestClose(true);\n          },\n          onError: (error) => {\n            console.log(error);\n            // TODO: show error message\n          },\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // Apply any operation after clicking Cancel button\n  const handleCancel = () => {\n    // console.log(\"Clicked cancel button\");\n    onRequestClose();\n  };\n\n  return (\n    <BAIModal\n      style={{\n        zIndex: 10000,\n      }}\n      destroyOnClose\n      onOk={handleOk}\n      onCancel={handleCancel}\n      okButtonProps={{\n        loading: mutationToUpdateService.isLoading,\n      }}\n      title={t('modelService.EditModelService')}\n      {...baiModalProps}\n    >\n      <Flex direction=\"row\" align=\"stretch\" justify=\"around\">\n        <Form\n          form={form}\n          preserve={false}\n          validateTrigger={['onChange', 'onBlur']}\n          initialValues={{\n            desired_session_count: endpoint?.desired_session_count,\n          }}\n          style={{ marginBottom: token.marginLG, marginTop: token.margin }}\n        >\n          <Form.Item\n            name=\"desired_session_count\"\n            label={t('modelService.DesiredSessionCount')}\n            rules={[\n              {\n                pattern: /^[0-9]+$/,\n                message: t('modelService.OnlyAllowsNonNegativeIntegers'),\n              },\n            ]}\n          >\n            <InputNumber type=\"number\" min={0} />\n          </Form.Item>\n        </Form>\n      </Flex>\n    </BAIModal>\n  );\n};\n\nexport default ModelServiceSettingModal;\n","import BAIModal, { BAIModalProps } from './BAIModal';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Checkbox, Input, theme, Form } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface FormValues {\n  searchInput?: string;\n  selectedColumnKeys?: string[];\n}\n\ninterface TableColumnsSettingProps extends BAIModalProps {\n  open: boolean;\n  onRequestClose: (formValues?: FormValues) => void;\n  columns: ColumnsType<any>;\n  displayedColumnKeys?: string[];\n}\n\nconst TableColumnsSettingModal: React.FC<TableColumnsSettingProps> = ({\n  open,\n  onRequestClose,\n  columns,\n  displayedColumnKeys,\n  ...modalProps\n}) => {\n  const [form] = Form.useForm<FormValues>();\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const onChangeTitleToString: any = (element: any) => {\n    const text = React.Children.map(element.props.children, (child) => {\n      if (typeof child === 'string') {\n        return child;\n      }\n    });\n    return text;\n  };\n\n  const columnOptions = columns.map((column) => {\n    if (typeof column.title === 'string') {\n      return {\n        label: column.title,\n        value: _.toString(column.key),\n      };\n    } else if (typeof column.title === 'object' && 'props' in column.title!) {\n      return {\n        label: onChangeTitleToString(column.title),\n        value: _.toString(column.key),\n      };\n    } else {\n      return {\n        label: undefined,\n        value: _.toString(column.key),\n      };\n    }\n  });\n\n  return (\n    <BAIModal\n      title={t('table.SettingTable')}\n      open={open}\n      destroyOnClose\n      centered\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            onRequestClose(values);\n          })\n          .catch(() => {});\n      }}\n      onCancel={() => {\n        onRequestClose();\n      }}\n      {...modalProps}\n    >\n      <Form\n        form={form}\n        preserve={false}\n        initialValues={{\n          selectedColumnKeys:\n            displayedColumnKeys ||\n            columnOptions.map((columnOption) => columnOption.value),\n        }}\n        layout=\"vertical\"\n      >\n        <Form.Item\n          name=\"searchInput\"\n          label={t('table.SelectColumnToDisplay')}\n          style={{ marginBottom: 0 }}\n        >\n          <Input\n            prefix={<SearchOutlined />}\n            style={{ marginBottom: token.marginSM }}\n            placeholder={t('table.SearchTableColumn')}\n          />\n        </Form.Item>\n        <Form.Item\n          noStyle\n          shouldUpdate={(prev, cur) => prev.searchInput !== cur.searchInput}\n        >\n          {({ getFieldValue }) => {\n            const searchKeyword = getFieldValue('searchInput')\n              ? _.toLower(getFieldValue('searchInput'))\n              : undefined;\n\n            const filteredColumns = columnOptions.map((columnOption) =>\n              _.toLower(_.toString(columnOption.label)).includes(\n                searchKeyword || '',\n              )\n                ? columnOption\n                : {\n                    ...columnOption,\n                    style: {\n                      display: 'none',\n                    },\n                  },\n            );\n            return (\n              <Form.Item\n                name=\"selectedColumnKeys\"\n                style={{\n                  height: 220,\n                  overflowY: 'auto',\n                }}\n              >\n                <Checkbox.Group\n                  options={filteredColumns}\n                  style={{ flexDirection: 'column' }}\n                />\n              </Form.Item>\n            );\n          }}\n        </Form.Item>\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default TableColumnsSettingModal;\n","/**\n * @generated SignedSource<<2ddd7900d11890e79472613b8d384405>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointOwnerInfoFragment$data = {\n  readonly created_user_email: string | null;\n  readonly id: string | null;\n  readonly session_owner_email: string | null;\n  readonly \" $fragmentType\": \"EndpointOwnerInfoFragment\";\n};\nexport type EndpointOwnerInfoFragment$key = {\n  readonly \" $data\"?: EndpointOwnerInfoFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointOwnerInfoFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"EndpointOwnerInfoFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"created_user_email\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"session_owner_email\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"fb21a441c8873205b5092ae1a5a7157e\";\n\nexport default node;\n","/**\n * @generated SignedSource<<8a960e7428e05bcb25f322a53888680e>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointStatusTagFragment$data = {\n  readonly id: string | null;\n  readonly status: string | null;\n  readonly \" $fragmentType\": \"EndpointStatusTagFragment\";\n};\nexport type EndpointStatusTagFragment$key = {\n  readonly \" $data\"?: EndpointStatusTagFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointStatusTagFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"EndpointStatusTagFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"3b31efa50b55edddcb210b59003dc479\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7fb89480050795760143361e3c0e5086>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ModelServiceSettingModal_endpoint$data = {\n  readonly desired_session_count: number | null;\n  readonly endpoint_id: string | null;\n  readonly \" $fragmentType\": \"ModelServiceSettingModal_endpoint\";\n};\nexport type ModelServiceSettingModal_endpoint$key = {\n  readonly \" $data\"?: ModelServiceSettingModal_endpoint$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ModelServiceSettingModal_endpoint\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ModelServiceSettingModal_endpoint\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"endpoint_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"desired_session_count\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"881f18324b27eba6ff0fcfb83ae241d2\";\n\nexport default node;\n","import Flex from './Flex';\nimport {\n  InputNumber,\n  Slider,\n  Form,\n  SliderSingleProps,\n  InputNumberProps,\n} from 'antd';\nimport { NamePath } from 'antd/es/form/interface';\nimport { SliderRangeProps } from 'antd/es/slider';\nimport { FormItemProps } from 'antd/lib/form/FormItem';\nimport React, { useEffect } from 'react';\n\ninterface SliderInputFormItemProps extends Omit<FormItemProps, 'name'> {\n  min?: number;\n  max?: number;\n  step?: number;\n  name: NamePath;\n  inputNumberProps?: InputNumberProps;\n  sliderProps?: SliderSingleProps | SliderRangeProps;\n  disabled?: boolean;\n}\nconst SliderInputFormItem: React.FC<SliderInputFormItemProps> = ({\n  name,\n  min,\n  max,\n  step,\n  rules,\n  required,\n  inputNumberProps,\n  sliderProps,\n  initialValue,\n  disabled,\n  ...formItemProps\n}) => {\n  const form = Form.useFormInstance();\n  useEffect(() => {\n    // when step is 1, make sure the value is integer\n    if (step === 1 && form.getFieldValue(name) % 1 !== 0) {\n      // do not use form.setFieldsValue, because name can be array\n      form.setFieldValue(name, Math.round(form.getFieldValue(name)));\n    }\n  }, [step, form, name]);\n  return (\n    <Form.Item required={required} {...formItemProps}>\n      <Flex direction=\"row\" gap={'md'}>\n        <Flex direction=\"column\" align=\"stretch\" style={{ flex: 3 }}>\n          <Form.Item\n            name={name}\n            noStyle\n            rules={rules}\n            initialValue={initialValue}\n            label={formItemProps.label}\n          >\n            <Slider\n              max={max}\n              min={min}\n              step={step}\n              disabled={disabled}\n              {...sliderProps}\n            />\n          </Form.Item>\n        </Flex>\n        <Flex\n          style={{ flex: 2, minWidth: 130 }}\n          align=\"stretch\"\n          direction=\"column\"\n        >\n          <Form.Item\n            name={name}\n            noStyle\n            rules={rules}\n            initialValue={initialValue}\n            label={formItemProps.label}\n          >\n            <InputNumber\n              max={max}\n              min={min}\n              step={step}\n              onStep={(value, info) => {\n                console.log(value, info);\n              }}\n              disabled={disabled}\n              {...inputNumberProps}\n            />\n          </Form.Item>\n        </Flex>\n      </Flex>\n    </Form.Item>\n    // <Row justify=\"space-around\" align=\"middle\" gutter={20}>\n    //   <Col span={6}>\n    //     <p>Resource</p>\n    //   </Col>\n    //   <Col span={8}>\n    //     <Slider\n    //       min={minValue}\n    //       max={maxValue}\n    //       onChange={onChange}\n    //       value={typeof inputValue === \"number\" ? inputValue : 0}\n    //       step={0.01}\n    //     />\n    //   </Col>\n    //   <Col span={6}>\n    //     <InputNumber\n    //       min={minValue}\n    //       max={maxValue}\n    //       style={\n    //         {\n    //           /* use theme config */\n    //         }\n    //       }\n    //       step={0.01}\n    //       value={inputValue}\n    //       onChange={onChange}\n    //     />\n    //   </Col>\n    // </Row>\n  );\n};\n\nexport default SliderInputFormItem;\n","import { useBaiSignedRequestWithPromise } from '../helper';\nimport { useCurrentProjectValue, useUpdatableState } from '../hooks';\nimport { useTanQuery } from '../hooks/reactQueryAlias';\nimport { Select, SelectProps } from 'antd';\nimport _ from 'lodash';\nimport React, { startTransition, useEffect } from 'react';\n\nexport type VFolder = {\n  name: string;\n  id: string;\n  quota_scope_id: string;\n  host: string;\n  status: string;\n  usage_mode: string;\n  created_at: string;\n  is_owner: boolean;\n  permission: string;\n  user: null;\n  group: string | null;\n  creator: string;\n  user_email: null;\n  group_name: string | null;\n  ownership_type: string;\n  type: string;\n  cloneable: boolean;\n  max_files: number;\n  max_size: null | number;\n  cur_size: number;\n};\n\ninterface VFolderSelectProps extends SelectProps {\n  autoSelectDefault?: boolean;\n  filter?: (vFolder: VFolder) => boolean;\n}\n\nconst VFolderSelect: React.FC<VFolderSelectProps> = ({\n  filter,\n  autoSelectDefault,\n  ...selectProps\n}) => {\n  const currentProject = useCurrentProjectValue();\n  const baiRequestWithPromise = useBaiSignedRequestWithPromise();\n  // const { vfolder_list } = useLazyLoadQuery<VFolderSelectQuery>(\n  //   graphql`\n  //     # query VFolderSelectQuery($group_id: UUID) {\n  //     query VFolderSelectQuery {\n  //       vfolder_list(limit: 20, offset: 0) {\n  //         # vfolder_list(limit: 20, offset: 0, group_id: $group_id) {\n  //         items {\n  //           id\n  //           name\n  //           status\n  //           usage_mode\n  //           ownership_type\n  //           user_email\n  //           group\n  //           group_name\n  //         }\n  //         total_count\n  //       }\n  //     }\n  //   `,\n  //   {\n  //     // group_id: currentProject.id,\n  //   },\n  //   {\n  //     fetchPolicy: \"store-and-network\",\n  //   }\n  // );\n  // console.log(\"vfolder_list\", vfolder_list);\n  const [key, checkUpdate] = useUpdatableState('first');\n\n  const { data } = useTanQuery({\n    queryKey: ['VFolderSelectQuery', key],\n    queryFn: () => {\n      return baiRequestWithPromise({\n        method: 'GET',\n        url: `/folders?group_id=${currentProject.id}`,\n      }) as Promise<VFolder[]>;\n    },\n    staleTime: 0,\n  });\n\n  const filteredVFolders = filter ? _.filter(data, filter) : data;\n\n  const autoSelectedOption = _.first(filteredVFolders)\n    ? {\n        label: _.first(filteredVFolders)?.name,\n        value: _.first(filteredVFolders)?.name,\n      }\n    : undefined;\n  useEffect(() => {\n    if (autoSelectDefault && autoSelectedOption) {\n      selectProps.onChange?.(autoSelectedOption.value, autoSelectedOption);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [autoSelectDefault]);\n  return (\n    <Select\n      showSearch\n      {...selectProps}\n      onDropdownVisibleChange={(open) => {\n        if (open) {\n          startTransition(() => {\n            checkUpdate();\n          });\n        }\n      }}\n    >\n      {_.map(filteredVFolders, (vfolder) => {\n        return (\n          <Select.Option key={vfolder?.id} value={vfolder?.name}>\n            {vfolder?.name}\n          </Select.Option>\n        );\n      })}\n    </Select>\n  );\n};\n\nexport default VFolderSelect;\n","import ResourceAllocationFormItems, {\n  ResourceAllocationFormValue,\n  RESOURCE_ALLOCATION_INITIAL_FORM_VALUES,\n} from '../components/ResourceAllocationFormItems';\nimport { baiSignedRequestWithPromise, compareNumberWithUnits } from '../helper';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { useCurrentDomainValue } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport FlexActivityIndicator from './FlexActivityIndicator';\nimport ImageEnvironmentSelectFormItems, {\n  ImageEnvironmentFormInput,\n} from './ImageEnvironmentSelectFormItems';\nimport ResourceGroupSelect from './ResourceGroupSelect';\nimport SliderInputFormItem from './SliderInputFormItem';\nimport VFolderSelect from './VFolderSelect';\nimport { Card, Form, Input, theme, Switch, message } from 'antd';\nimport _ from 'lodash';\nimport React, { Suspense } from 'react';\nimport { useTranslation } from 'react-i18next';\n\n// TODO: set initial form values for later use\n// const INITIAL_FORM_VALUES: ServiceLauncherFormValue = {\n// }\n\ntype ClusterMode = 'single-node' | 'multi-node';\n\ninterface ServiceCreateConfigResourceOptsType {\n  shmem?: number | string;\n}\ninterface ServiceCreateConfigResourceType {\n  cpu: number | string;\n  mem: string;\n  'cuda.device'?: number | string;\n  'cuda.shares'?: number | string;\n  'rocm.device'?: number | string;\n  'tpu.device'?: number | string;\n  'ipu.device'?: number | string;\n  'atom.device'?: number | string;\n  'warboy.device'?: number | string;\n}\n\ninterface ServiceCreateConfigType {\n  model: string;\n  model_version?: string;\n  model_mount_destination: string; // default == \"/models\"\n  environ: object; // environment variable\n  scaling_group: string;\n  resources: ServiceCreateConfigResourceType;\n  resource_opts?: ServiceCreateConfigResourceOptsType;\n}\ninterface ServiceCreateType {\n  name: string;\n  desired_session_count: number;\n  image: string;\n  arch: string;\n  group: string;\n  domain: string;\n  cluster_size: number;\n  cluster_mode: ClusterMode;\n  tag?: string;\n  startup_command?: string;\n  bootstrap_script?: string;\n  owner_access_key?: string;\n  open_to_public: boolean;\n  config: ServiceCreateConfigType;\n}\n\ninterface ServiceLauncherProps\n  extends Omit<BAIModalProps, 'onOK' | 'onCancel'> {\n  extraP?: boolean;\n  onRequestClose: (success?: boolean) => void;\n}\ninterface ServiceLauncherInput extends ImageEnvironmentFormInput {\n  serviceName: string;\n  vFolderName: string;\n  desiredRoutingCount: number;\n  openToPublic: boolean;\n}\n\ntype ServiceLauncherFormValue = ServiceLauncherInput &\n  ImageEnvironmentFormInput &\n  ResourceAllocationFormValue;\n\nconst ServiceLauncherModal: React.FC<ServiceLauncherProps> = ({\n  extraP,\n  onRequestClose,\n  ...modalProps\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n  const currentDomain = useCurrentDomainValue();\n  const [form] = Form.useForm<ServiceLauncherFormValue>();\n\n  const mutationToCreateService = useTanMutation<\n    unknown,\n    {\n      message?: string;\n    },\n    ServiceLauncherFormValue\n  >({\n    mutationFn: (values) => {\n      const image: string =\n        baiClient._config.allow_manual_image_name_for_session &&\n        values.environments?.manual &&\n        !_.isEmpty(values.environments.manual)\n          ? values.environments.manual\n          : `${values.environments.image?.registry}/${values.environments.image?.name}:${values.environments.image?.tag}`;\n      const body: ServiceCreateType = {\n        name: values.serviceName,\n        desired_session_count: values.desiredRoutingCount,\n        image: image,\n        arch: values.environments.image?.architecture as string,\n        group: baiClient.current_group, // current Project Group,\n        domain: currentDomain, // current Domain Group,\n        cluster_size: values.cluster_size,\n        cluster_mode: values.cluster_mode,\n        open_to_public: values.openToPublic,\n        config: {\n          model: values.vFolderName,\n          model_mount_destination: '/models', // FIXME: hardcoded. change it with option later\n          environ: {}, // FIXME: hardcoded. change it with option later\n          scaling_group: values.resourceGroup,\n          resources: {\n            // FIXME: manually convert to string since server-side only allows [str,str] tuple\n            cpu: values.resource.cpu.toString(),\n            mem: values.resource.mem,\n            ...(values.resource.accelerator > 0\n              ? {\n                  [values.resource.acceleratorType]:\n                    values.resource.accelerator,\n                }\n              : undefined),\n          },\n          resource_opts: {\n            shmem:\n              compareNumberWithUnits(values.resource.mem, '4g') > 0 &&\n              compareNumberWithUnits(values.resource.shmem, '1g') < 0\n                ? '1g'\n                : values.resource.shmem,\n          },\n        },\n      };\n      return baiSignedRequestWithPromise({\n        method: 'POST',\n        url: '/services',\n        body,\n        client: baiClient,\n      });\n    },\n  });\n\n  // Apply any operation after clicking OK button\n  const handleOk = () => {\n    form\n      .validateFields()\n      .then((values) => {\n        mutationToCreateService.mutate(values, {\n          onSuccess: () => {\n            onRequestClose(true);\n          },\n          onError: (error) => {\n            if (error?.message) {\n              message.error(\n                _.truncate(error?.message, {\n                  length: 200,\n                }),\n              );\n            } else {\n              message.error(t('modelService.FailedToStartService'));\n            }\n          },\n        });\n      })\n      .catch((err) => {\n        if (err.errorFields?.[0].errors?.[0]) {\n          message.error(err.errorFields?.[0].errors?.[0]);\n        } else {\n          message.error(t('modelService.FormValidationFailed'));\n        }\n      });\n  };\n\n  // Apply any operation after clicking Cancel button\n  const handleCancel = () => {\n    onRequestClose();\n  };\n\n  return (\n    <BAIModal\n      title={t('modelService.StartNewServing')}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      destroyOnClose={true}\n      maskClosable={false}\n      confirmLoading={mutationToCreateService.isLoading}\n      {...modalProps}\n    >\n      <Suspense fallback={<FlexActivityIndicator />}>\n        <Form\n          disabled={mutationToCreateService.isLoading}\n          form={form}\n          preserve={false}\n          layout=\"vertical\"\n          labelCol={{ span: 12 }}\n          initialValues={{\n            desiredRoutingCount: 1,\n            ...RESOURCE_ALLOCATION_INITIAL_FORM_VALUES,\n          }}\n          requiredMark=\"optional\"\n        >\n          <Form.Item\n            label={t('modelService.ServiceName')}\n            name=\"serviceName\"\n            rules={[\n              {\n                pattern: /^(?=.{4,24}$)\\w[\\w.-]*\\w$/,\n                message: t('modelService.ServiceNameRule'),\n              },\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            name=\"resourceGroup\"\n            label={t('session.ResourceGroup')}\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <ResourceGroupSelect autoSelectDefault />\n          </Form.Item>\n          <Form.Item\n            name=\"openToPublic\"\n            label={t('modelService.OpenToPublic')}\n            valuePropName=\"checked\"\n          >\n            <Switch></Switch>\n          </Form.Item>\n          {/* <VFolderTableFromItem /> */}\n          <Form.Item\n            name={'vFolderName'}\n            label={t('session.launcher.ModelStorageToMount')}\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <VFolderSelect\n              filter={(vf) => vf.usage_mode === 'model'}\n              autoSelectDefault\n            />\n          </Form.Item>\n          <SliderInputFormItem\n            label={t('modelService.DesiredRoutingCount')}\n            name=\"desiredRoutingCount\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n            inputNumberProps={{\n              //TODO: change unit based on resource limit\n              addonAfter: '#',\n            }}\n            required\n          />\n          <Card\n            style={{\n              marginBottom: token.margin,\n            }}\n          >\n            <ImageEnvironmentSelectFormItems\n            // //TODO: test with real inference images\n            // filter={(image) => {\n            //   return !!_.find(image?.labels, (label) => {\n            //     return (\n            //       label?.key === \"ai.backend.role\" &&\n            //       label.value === \"INFERENCE\" //['COMPUTE', 'INFERENCE', 'SYSTEM']\n            //     );\n            //   });\n            // }}\n            />\n            <ResourceAllocationFormItems />\n          </Card>\n        </Form>\n      </Suspense>\n    </BAIModal>\n  );\n};\n\nexport default ServiceLauncherModal;\n","import { useCallback, useEffect, useRef } from 'react';\nimport useLatest from '../useLatest';\nimport { isNumber } from '../utils';\nvar setRafInterval = function (callback, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n  if (typeof requestAnimationFrame === typeof undefined) {\n    return {\n      id: setInterval(callback, delay)\n    };\n  }\n  var start = new Date().getTime();\n  var handle = {\n    id: 0\n  };\n  var loop = function () {\n    var current = new Date().getTime();\n    if (current - start >= delay) {\n      callback();\n      start = new Date().getTime();\n    }\n    handle.id = requestAnimationFrame(loop);\n  };\n  handle.id = requestAnimationFrame(loop);\n  return handle;\n};\nfunction cancelAnimationFrameIsNotDefined(t) {\n  return typeof cancelAnimationFrame === typeof undefined;\n}\nvar clearRafInterval = function (handle) {\n  if (cancelAnimationFrameIsNotDefined(handle.id)) {\n    return clearInterval(handle.id);\n  }\n  cancelAnimationFrame(handle.id);\n};\nfunction useRafInterval(fn, delay, options) {\n  var immediate = options === null || options === void 0 ? void 0 : options.immediate;\n  var fnRef = useLatest(fn);\n  var timerRef = useRef();\n  useEffect(function () {\n    if (!isNumber(delay) || delay < 0) return;\n    if (immediate) {\n      fnRef.current();\n    }\n    timerRef.current = setRafInterval(function () {\n      fnRef.current();\n    }, delay);\n    return function () {\n      if (timerRef.current) {\n        clearRafInterval(timerRef.current);\n      }\n    };\n  }, [delay]);\n  var clear = useCallback(function () {\n    if (timerRef.current) {\n      clearRafInterval(timerRef.current);\n    }\n  }, []);\n  return clear;\n}\nexport default useRafInterval;","import BAIModal from '../components/BAIModal';\nimport EndpointOwnerInfo from '../components/EndpointOwnerInfo';\nimport EndpointStatusTag from '../components/EndpointStatusTag';\nimport Flex from '../components/Flex';\nimport ModelServiceSettingModal from '../components/ModelServiceSettingModal';\nimport ServiceLauncherModal from '../components/ServiceLauncherModal';\nimport TableColumnsSettingModal from '../components/TableColumnsSettingModal';\nimport { baiSignedRequestWithPromise } from '../helper';\nimport {\n  useCurrentProjectValue,\n  useSuspendedBackendaiClient,\n  useUpdatableState,\n} from '../hooks';\n// import { getSortOrderByName } from '../hooks/reactPaginationQueryOptions';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport {\n  ServingListPageQuery,\n  ServingListPageQuery$data,\n} from './__generated__/ServingListPageQuery.graphql';\nimport {\n  CheckOutlined,\n  CloseOutlined,\n  DeleteOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { useRafInterval } from 'ahooks';\nimport { useLocalStorageState } from 'ahooks';\nimport { Button, Table, Tabs, Typography, theme, message } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport graphql from 'babel-plugin-relay/macro';\nimport { default as dayjs } from 'dayjs';\nimport _ from 'lodash';\nimport React, {\n  PropsWithChildren,\n  Suspense,\n  useState,\n  useTransition,\n  startTransition as startTransitionWithoutPendingState,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\nimport { Link } from 'react-router-dom';\n\n// FIXME: need to apply filtering type of service later\ntype TabKey = 'services'; //  \"running\" | \"finished\" | \"others\";\n\nexport type Endpoint = NonNullable<\n  NonNullable<\n    NonNullable<\n      NonNullable<ServingListPageQuery$data>['endpoint_list']\n    >['items']\n  >[0]\n>;\n\nconst ServingListPage: React.FC<PropsWithChildren> = ({ children }) => {\n  const { t } = useTranslation();\n  const baiClient = useSuspendedBackendaiClient();\n  const { token } = theme.useToken();\n  const curProject = useCurrentProjectValue();\n  const [isOpenServiceLauncher, setIsOpenServiceLauncher] = useState(false);\n  const [isOpenColumnsSetting, setIsOpenColumnsSetting] = useState(false);\n  const [selectedModelService, setSelectedModelService] = useState<Endpoint>();\n  const [isOpenModelServiceSettingModal, setIsOpenModelServiceSettingModal] =\n    useState(false);\n\n  // const [paginationState, setPaginationState] = useState<{\n  const [paginationState] = useState<{\n    current: number;\n    pageSize: number;\n  }>({\n    current: 1,\n    pageSize: 100,\n  });\n\n  const [isRefetchPending, startRefetchTransition] = useTransition();\n  const [\n    isOpenModelServiceTerminatingModal,\n    setIsOpenModelServiceTerminatingModal,\n  ] = useState(false);\n  const [servicesFetchKey, updateServicesFetchKey] =\n    useUpdatableState('initial-fetch');\n  // FIXME: need to apply filtering type of service later\n  const [selectedTab, setSelectedTab] = useState<TabKey>('services');\n  // const [selectedGeneration, setSelectedGeneration] = useState<\n  //   \"current\" | \"next\"\n  // >(\"next\");\n\n  const columns: ColumnsType<Endpoint> = [\n    {\n      title: t('modelService.EndpointName'),\n      dataIndex: 'endpoint_id',\n      key: 'endpointName',\n      fixed: 'left',\n      render: (endpoint_id, row) => (\n        <Link to={'/serving/' + endpoint_id}>{row.name}</Link>\n      ),\n    },\n    {\n      title: t('modelService.EndpointId'),\n      dataIndex: 'endpoint_id',\n      key: 'endpoint_id',\n      width: 310,\n      render: (endpoint_id) => (\n        <Typography.Text code>{endpoint_id}</Typography.Text>\n      ),\n    },\n    {\n      title: t('modelService.ServiceEndpoint'),\n      dataIndex: 'endpoint_id',\n      key: 'url',\n      render: (endpoint_id, row) =>\n        row.url ? (\n          <Typography.Link copyable href={row.url} target=\"_blank\">\n            {row.url}\n          </Typography.Link>\n        ) : (\n          '-'\n        ),\n    },\n    {\n      title: t('modelService.Controls'),\n      dataIndex: 'controls',\n      key: 'controls',\n      render: (text, row) => (\n        <Flex direction=\"row\" align=\"stretch\">\n          <Button\n            type=\"text\"\n            icon={<SettingOutlined />}\n            style={\n              row.desired_session_count < 0 ||\n              row.status?.toLowerCase() === 'destroying'\n                ? undefined\n                : {\n                    color: '#29b6f6',\n                  }\n            }\n            disabled={\n              row.desired_session_count < 0 ||\n              row.status?.toLowerCase() === 'destroying'\n            }\n            onClick={() => {\n              setIsOpenModelServiceSettingModal(true);\n              setSelectedModelService(row);\n            }}\n          />\n          <Button\n            type=\"text\"\n            icon={\n              <DeleteOutlined\n                style={\n                  row.desired_session_count < 0 ||\n                  row.status?.toLowerCase() === 'destroying'\n                    ? undefined\n                    : {\n                        color: token.colorError,\n                      }\n                }\n              />\n            }\n            disabled={\n              row.desired_session_count < 0 ||\n              row.status?.toLowerCase() === 'destroying'\n            }\n            onClick={() => {\n              setIsOpenModelServiceTerminatingModal(true);\n              setSelectedModelService(row);\n            }}\n          />\n        </Flex>\n      ),\n    },\n    {\n      title: t('modelService.Status'),\n      key: 'status',\n      render: (text, row) => <EndpointStatusTag endpointFrgmt={row} />,\n    },\n    ...(baiClient.is_admin\n      ? [\n          {\n            title: t('modelService.Owner'),\n            // created_user_email is refered by EndpointOwnerInfoFragment\n            dataIndex: 'created_user_email',\n            key: 'session_owner',\n            render: (_: string, endpoint_info: Endpoint) => (\n              <EndpointOwnerInfo endpointFrgmt={endpoint_info} />\n            ),\n          },\n        ]\n      : []),\n    {\n      title: t('modelService.CreatedAt'),\n      dataIndex: 'created_at',\n      key: 'createdAt',\n      render: (created_at) => {\n        return dayjs(created_at).format('ll LT');\n      },\n      defaultSortOrder: 'descend',\n      sortDirections: ['descend', 'ascend', 'descend'],\n      sorter: (a, b) => {\n        const date1 = dayjs(a.created_at);\n        const date2 = dayjs(b.created_at);\n        return date1.diff(date2);\n      },\n    },\n    {\n      title: t('modelService.DesiredSessionCount'),\n      dataIndex: 'desired_session_count',\n      key: 'desiredSessionCount',\n      render: (desired_session_count) => {\n        return desired_session_count < 0 ? '-' : desired_session_count;\n      },\n    },\n    {\n      title: (\n        <Flex direction=\"column\" align=\"start\">\n          {t('modelService.RoutingsCount')}\n          <br />\n          <Typography.Text type=\"secondary\" style={{ fontWeight: 'normal' }}>\n            ({t('modelService.Active/Total')})\n          </Typography.Text>\n        </Flex>\n      ),\n      // dataIndex: \"active_route_count\",\n      key: 'routingCount',\n      render: (text, row) => {\n        return (\n          _.filter(row.routings, (r) => r?.status === 'HEALTHY').length +\n          ' / ' +\n          row.routings?.length\n        );\n        // [r for r in endpoint.routings if r.status == RouteStatus.HEALTHY]\n      },\n    },\n    {\n      title: t('modelService.Public'),\n      key: 'public',\n      render: (text, row) =>\n        row.open_to_public ? (\n          <CheckOutlined style={{ color: token.colorSuccess }} />\n        ) : (\n          <CloseOutlined style={{ color: token.colorTextSecondary }} />\n        ),\n    },\n  ];\n  const [displayedColumnKeys, setDisplayedColumnKeys] = useLocalStorageState(\n    'backendaiwebui.ServingListPage.displayedColumnKeys',\n    {\n      defaultValue: columns.map((column) => _.toString(column.key)),\n    },\n  );\n\n  useRafInterval(() => {\n    startTransitionWithoutPendingState(() => {\n      updateServicesFetchKey();\n    });\n  }, 7000);\n\n  const { endpoint_list: modelServiceList } =\n    // TODO: need to convert LazyLoadQuery to pagination query with option\n    useLazyLoadQuery<ServingListPageQuery>(\n      graphql`\n        query ServingListPageQuery(\n          $offset: Int!\n          $limit: Int!\n          $projectID: UUID\n        ) {\n          endpoint_list(\n            offset: $offset\n            limit: $limit\n            project: $projectID\n            filter: \"name != 'koalpaca-test'\"\n          ) {\n            total_count\n            items {\n              name\n              endpoint_id\n              image\n              model\n              domain\n              status\n              project\n              resource_group\n              resource_slots\n              url\n              open_to_public\n              created_at @since(version: \"23.09.0\")\n              desired_session_count @required(action: NONE)\n              routings {\n                routing_id\n                endpoint\n                session\n                traffic_ratio\n                status\n              }\n              ...ModelServiceSettingModal_endpoint\n              ...EndpointOwnerInfoFragment\n              ...EndpointStatusTagFragment\n            }\n          }\n        }\n      `,\n      {\n        offset: (paginationState.current - 1) * paginationState.pageSize,\n        limit: paginationState.pageSize,\n        projectID: curProject.id,\n      },\n      {\n        fetchPolicy:\n          servicesFetchKey === 'initial-fetch'\n            ? 'store-and-network'\n            : 'network-only',\n        fetchKey: servicesFetchKey,\n      },\n    );\n\n  const sortedEndpointList = _.sortBy(modelServiceList?.items, 'name');\n\n  // FIXME: struggling with sending data when active tab changes!\n  // const runningModelServiceList = modelServiceList?.filter(\n  //   (item: any) => item.desired_session_count >= 0\n  // );\n\n  // const terminatedModelServiceList = modelServiceList?.filter(\n  //   (item: any) => item.desired_session_count < 0\n  // );\n\n  const terminateModelServiceMutation = useTanMutation<\n    unknown,\n    {\n      message?: string;\n    }\n  >({\n    mutationFn: () => {\n      return baiSignedRequestWithPromise({\n        method: 'DELETE',\n        url: '/services/' + selectedModelService?.endpoint_id,\n        client: baiClient,\n      });\n    },\n  });\n  // const { data, refetch } = useTanQuery({\n  //   queryKey: \"terminateModelService\",\n  //   queryFn: () => {\n  //     return baiSignedRequestWithPromise({\n  //       method: \"DELETE\",\n  //       url: \"/services/\" + selectedModelService?.id,\n  //       client: baiClient,\n  //     });\n  //   },\n  //   onSuccess: (res: any) => {\n  //     console.log(res);\n  //   },\n  //   onError: (err: any) => {\n  //     console.log(err);\n  //   },\n  //   enabled: false,\n  //   // for to render even this query fails\n  //   suspense: true,\n  // });\n\n  return (\n    <>\n      <Flex\n        direction=\"column\"\n        align=\"stretch\"\n        style={{ padding: token.padding }}\n        gap={'xs'}\n      >\n        {/* <Card bordered title={t(\"summary.ResourceStatistics\")}>\n          <p>SessionList</p>\n        </Card> */}\n        {/* <Card bodyStyle={{ paddingTop: 0 }}> */}\n        <Flex direction=\"column\" align=\"stretch\">\n          <Flex style={{ flex: 1 }}>\n            <Tabs\n              // type=\"card\"\n              activeKey={selectedTab}\n              onChange={(key) => setSelectedTab(key as TabKey)}\n              tabBarStyle={{ marginBottom: 0 }}\n              style={{\n                width: '100%',\n                paddingLeft: token.paddingMD,\n                paddingRight: token.paddingMD,\n                borderTopLeftRadius: token.borderRadius,\n                borderTopRightRadius: token.borderRadius,\n              }}\n              items={[\n                { key: 'services', label: t('modelService.Services') },\n                // FIXME: need to apply filtering type of service later\n                // {\n                //   key: \"running\",\n                //   label: t(\"session.Running\"),\n                // },\n                // {\n                //   key: \"finished\",\n                //   label: t(\"session.Finished\"),\n                // },\n                // {\n                //   key: \"others\",\n                //   label: t(\"session.Others\"),\n                // },\n              ]}\n              tabBarExtraContent={{\n                right: (\n                  <Button\n                    type=\"primary\"\n                    onClick={() => {\n                      setIsOpenServiceLauncher(true);\n                    }}\n                  >\n                    {t('modelService.StartService')}\n                  </Button>\n                ),\n              }}\n            />\n            {/* <Button type=\"text\" icon={<MoreOutlined />} /> */}\n          </Flex>\n          {/* <Button type=\"primary\" icon={<PoweroffOutlined />}>\n          시작\n        </Button> */}\n\n          {/* @ts-ignore */}\n          {/* <backend-ai-session-launcher\n        location=\"session\"\n        id=\"session-launcher\"\n        active\n      /> */}\n          <Suspense fallback={<div>loading..</div>}>\n            {/* <ServingList\n              loading={isRefetchPending}\n              projectId={curProject.id}\n              status={[]}\n              extraFetchKey={\"\"}\n              dataSource={modelServiceList}\n              onClickEdit={(row) => {\n                setIsOpenModelServiceSettingModal(true);\n                setSelectedModelService(row);\n              }}\n              onClickTerminate={(row) => {\n                setIsOpenModelServiceTerminatingModal(true);\n                setSelectedModelService(row);\n              }}\n            /> */}\n            <Table\n              loading={isRefetchPending}\n              scroll={{ x: 'max-content' }}\n              rowKey={'endpoint_id'}\n              dataSource={(sortedEndpointList || []) as Endpoint[]}\n              columns={columns.filter(\n                (column) =>\n                  displayedColumnKeys?.includes(_.toString(column.key)),\n              )}\n              pagination={false}\n              // pagination={{\n              //   pageSize: paginationState.pageSize,\n              //   current: paginationState.current,\n              //   total: modelServiceList?.total_count || 0,\n              //   showSizeChanger: true,\n              //   // showTotal(total, range) {\n              //   //   return `${range[0]}-${range[1]} of ${total}`;\n              //   // },\n              //   onChange(page, pageSize) {\n              //     startRefetchTransition(() => {\n              //       setPaginationState({\n              //         current: page,\n              //         pageSize: pageSize || 100,\n              //       });\n              //     });\n              //   },\n              // }}\n            />\n          </Suspense>\n        </Flex>\n        <Flex justify=\"end\">\n          <Button\n            type=\"text\"\n            icon={<SettingOutlined />}\n            onClick={() => {\n              setIsOpenColumnsSetting(true);\n            }}\n          />\n        </Flex>\n      </Flex>\n      <BAIModal\n        open={isOpenModelServiceTerminatingModal}\n        title={t('dialog.title.LetsDouble-Check')}\n        okButtonProps={{\n          loading: terminateModelServiceMutation.isLoading,\n        }}\n        onOk={() => {\n          // FIXME: any better idea for handling result?\n          terminateModelServiceMutation.mutate(undefined, {\n            onSuccess: (res) => {\n              startRefetchTransition(() => {\n                updateServicesFetchKey();\n              });\n              setIsOpenModelServiceTerminatingModal(false);\n            },\n            onError: (err) => {\n              if (err?.message) {\n                message.error(\n                  _.truncate(err?.message, {\n                    length: 200,\n                  }),\n                );\n              } else {\n                message.error(t('modelService.FailedToTerminateService'));\n              }\n            },\n          });\n        }}\n        onCancel={() => {\n          setIsOpenModelServiceTerminatingModal(false);\n        }}\n      >\n        <Flex direction=\"column\" align=\"stretch\" justify=\"center\">\n          <p>\n            {t('modelService.YouAreAboutToTerminate') +\n              (selectedModelService?.name || '') +\n              '.'}\n          </p>\n          <p>{t('dialog.ask.DoYouWantToProceed')}</p>\n        </Flex>\n      </BAIModal>\n      <ModelServiceSettingModal\n        open={isOpenModelServiceSettingModal}\n        onRequestClose={(success) => {\n          setIsOpenModelServiceSettingModal(false);\n          if (success) {\n            startRefetchTransition(() => {\n              updateServicesFetchKey();\n            });\n          }\n        }}\n        endpointFrgmt={selectedModelService || null}\n      />\n      <ServiceLauncherModal\n        open={isOpenServiceLauncher}\n        onRequestClose={(success) => {\n          setIsOpenServiceLauncher(!isOpenServiceLauncher);\n          if (success) {\n            startRefetchTransition(() => {\n              updateServicesFetchKey();\n            });\n          }\n        }}\n      />\n      <TableColumnsSettingModal\n        open={isOpenColumnsSetting}\n        onRequestClose={(values) => {\n          values?.selectedColumnKeys &&\n            setDisplayedColumnKeys(values?.selectedColumnKeys);\n          setIsOpenColumnsSetting(false);\n        }}\n        columns={columns}\n        displayedColumnKeys={displayedColumnKeys ? displayedColumnKeys : []}\n      />\n    </>\n  );\n};\n\nexport default ServingListPage;\n","/**\n * @generated SignedSource<<bf63d830937068113b5a8461d70e3789>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ServingListPageQuery$variables = {\n  limit: number;\n  offset: number;\n  projectID?: string | null;\n};\nexport type ServingListPageQuery$data = {\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly created_at: string;\n      readonly desired_session_count: number;\n      readonly domain: string | null;\n      readonly endpoint_id: string | null;\n      readonly image: string | null;\n      readonly model: string | null;\n      readonly name: string | null;\n      readonly open_to_public: boolean | null;\n      readonly project: string | null;\n      readonly resource_group: string | null;\n      readonly resource_slots: any | null;\n      readonly routings: ReadonlyArray<{\n        readonly endpoint: string | null;\n        readonly routing_id: string | null;\n        readonly session: string | null;\n        readonly status: string | null;\n        readonly traffic_ratio: number | null;\n      } | null> | null;\n      readonly status: string | null;\n      readonly url: string | null;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointOwnerInfoFragment\" | \"EndpointStatusTagFragment\" | \"ModelServiceSettingModal_endpoint\">;\n    } | null>;\n    readonly total_count: number;\n  } | null;\n};\nexport type ServingListPageQuery = {\n  response: ServingListPageQuery$data;\n  variables: ServingListPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"projectID\"\n},\nv3 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"filter\",\n    \"value\": \"name != 'koalpaca-test'\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"limit\",\n    \"variableName\": \"limit\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"offset\",\n    \"variableName\": \"offset\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"project\",\n    \"variableName\": \"projectID\"\n  }\n],\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"total_count\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"image\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"model\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"project\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_group\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_slots\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"open_to_public\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"created_at\",\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"desired_session_count\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"routing_id\",\n  \"storageKey\": null\n},\nv19 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint\",\n  \"storageKey\": null\n},\nv20 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"session\",\n  \"storageKey\": null\n},\nv21 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"traffic_ratio\",\n  \"storageKey\": null\n},\nv22 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ServingListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v4/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v5/*: any*/),\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              {\n                \"kind\": \"RequiredField\",\n                \"field\": (v17/*: any*/),\n                \"action\": \"NONE\",\n                \"path\": \"endpoint_list.items.desired_session_count\"\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Routing\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"routings\",\n                \"plural\": true,\n                \"selections\": [\n                  (v18/*: any*/),\n                  (v19/*: any*/),\n                  (v20/*: any*/),\n                  (v21/*: any*/),\n                  (v10/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"ModelServiceSettingModal_endpoint\"\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"EndpointOwnerInfoFragment\"\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"EndpointStatusTagFragment\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v0/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"ServingListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v4/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v5/*: any*/),\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Routing\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"routings\",\n                \"plural\": true,\n                \"selections\": [\n                  (v18/*: any*/),\n                  (v19/*: any*/),\n                  (v20/*: any*/),\n                  (v21/*: any*/),\n                  (v10/*: any*/),\n                  (v22/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              (v22/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"created_user_email\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"session_owner_email\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"a32fc5e73f28ab586299252b57c894a1\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ServingListPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ServingListPageQuery(\\n  $offset: Int!\\n  $limit: Int!\\n  $projectID: UUID\\n) {\\n  endpoint_list(offset: $offset, limit: $limit, project: $projectID, filter: \\\"name != 'koalpaca-test'\\\") {\\n    total_count\\n    items {\\n      name\\n      endpoint_id\\n      image\\n      model\\n      domain\\n      status\\n      project\\n      resource_group\\n      resource_slots\\n      url\\n      open_to_public\\n      created_at @since(version: \\\"23.09.0\\\")\\n      desired_session_count\\n      routings {\\n        routing_id\\n        endpoint\\n        session\\n        traffic_ratio\\n        status\\n        id\\n      }\\n      ...ModelServiceSettingModal_endpoint\\n      ...EndpointOwnerInfoFragment\\n      ...EndpointStatusTagFragment\\n      id\\n    }\\n  }\\n}\\n\\nfragment EndpointOwnerInfoFragment on Endpoint {\\n  id\\n  created_user_email @since(version: \\\"23.09.8\\\")\\n  session_owner_email @since(version: \\\"23.09.8\\\")\\n}\\n\\nfragment EndpointStatusTagFragment on Endpoint {\\n  id\\n  status\\n}\\n\\nfragment ModelServiceSettingModal_endpoint on Endpoint {\\n  endpoint_id\\n  desired_session_count\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"0d8ae07e41b0bc9e87961c234e67fdaf\";\n\nexport default node;\n","// This icon file is generated automatically.\nvar DeleteOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\" } }] }, \"name\": \"delete\", \"theme\": \"outlined\" };\nexport default DeleteOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: DeleteOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  DeleteOutlined.displayName = 'DeleteOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(DeleteOutlined);","// This icon file is generated automatically.\nvar SettingOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M924.8 625.7l-65.5-56c3.1-19 4.7-38.4 4.7-57.8s-1.6-38.8-4.7-57.8l65.5-56a32.03 32.03 0 009.3-35.2l-.9-2.6a443.74 443.74 0 00-79.7-137.9l-1.8-2.1a32.12 32.12 0 00-35.1-9.5l-81.3 28.9c-30-24.6-63.5-44-99.7-57.6l-15.7-85a32.05 32.05 0 00-25.8-25.7l-2.7-.5c-52.1-9.4-106.9-9.4-159 0l-2.7.5a32.05 32.05 0 00-25.8 25.7l-15.8 85.4a351.86 351.86 0 00-99 57.4l-81.9-29.1a32 32 0 00-35.1 9.5l-1.8 2.1a446.02 446.02 0 00-79.7 137.9l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.3 56.6c-3.1 18.8-4.6 38-4.6 57.1 0 19.2 1.5 38.4 4.6 57.1L99 625.5a32.03 32.03 0 00-9.3 35.2l.9 2.6c18.1 50.4 44.9 96.9 79.7 137.9l1.8 2.1a32.12 32.12 0 0035.1 9.5l81.9-29.1c29.8 24.5 63.1 43.9 99 57.4l15.8 85.4a32.05 32.05 0 0025.8 25.7l2.7.5a449.4 449.4 0 00159 0l2.7-.5a32.05 32.05 0 0025.8-25.7l15.7-85a350 350 0 0099.7-57.6l81.3 28.9a32 32 0 0035.1-9.5l1.8-2.1c34.8-41.1 61.6-87.5 79.7-137.9l.9-2.6c4.5-12.3.8-26.3-9.3-35zM788.3 465.9c2.5 15.1 3.8 30.6 3.8 46.1s-1.3 31-3.8 46.1l-6.6 40.1 74.7 63.9a370.03 370.03 0 01-42.6 73.6L721 702.8l-31.4 25.8c-23.9 19.6-50.5 35-79.3 45.8l-38.1 14.3-17.9 97a377.5 377.5 0 01-85 0l-17.9-97.2-37.8-14.5c-28.5-10.8-55-26.2-78.7-45.7l-31.4-25.9-93.4 33.2c-17-22.9-31.2-47.6-42.6-73.6l75.5-64.5-6.5-40c-2.4-14.9-3.7-30.3-3.7-45.5 0-15.3 1.2-30.6 3.7-45.5l6.5-40-75.5-64.5c11.3-26.1 25.6-50.7 42.6-73.6l93.4 33.2 31.4-25.9c23.7-19.5 50.2-34.9 78.7-45.7l37.9-14.3 17.9-97.2c28.1-3.2 56.8-3.2 85 0l17.9 97 38.1 14.3c28.7 10.8 55.4 26.2 79.3 45.8l31.4 25.8 92.8-32.9c17 22.9 31.2 47.6 42.6 73.6L781.8 426l6.5 39.9zM512 326c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm79.2 255.2A111.6 111.6 0 01512 614c-29.9 0-58-11.7-79.2-32.8A111.6 111.6 0 01400 502c0-29.9 11.7-58 32.8-79.2C454 401.6 482.1 390 512 390c29.9 0 58 11.6 79.2 32.8A111.6 111.6 0 01624 502c0 29.9-11.7 58-32.8 79.2z\" } }] }, \"name\": \"setting\", \"theme\": \"outlined\" };\nexport default SettingOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport SettingOutlinedSvg from \"@ant-design/icons-svg/es/asn/SettingOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar SettingOutlined = function SettingOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: SettingOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  SettingOutlined.displayName = 'SettingOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(SettingOutlined);"],"names":["_ref","endpointFrgmt","t","useTranslation","token","theme","useToken","baiClient","useSuspendedBackendaiClient","endpoint","useFragment","_EndpointOwnerInfoFragment","require","supports","created_user_email","session_owner_email","_jsxs","_Fragment","children","_jsx","Tooltip","title","createdUser","sessionOwner","Button","size","type","icon","QuestionCircleOutlined","style","color","colorTextSecondary","email","_endpoint$status","_EndpointStatusTagFragment","status","toUpperCase","Tag","onRequestClose","baiModalProps","_objectWithoutProperties","_excluded","_Form$useForm","Form","useForm","form","_slicedToArray","_ModelServiceSettingModal_endpoint","mutationToUpdateService","useTanMutation","mutationFn","values","body","to","desired_session_count","baiSignedRequestWithPromise","method","url","concat","endpoint_id","client","BAIModal","_objectSpread","zIndex","destroyOnClose","onOk","e","validateFields","then","mutate","onSuccess","console","log","onError","error","catch","err","onCancel","okButtonProps","loading","isLoading","Flex","direction","align","justify","preserve","validateTrigger","initialValues","marginBottom","marginLG","marginTop","margin","Item","name","label","rules","pattern","message","InputNumber","min","open","columns","displayedColumnKeys","modalProps","columnOptions","map","column","value","_","key","element","React","props","child","undefined","centered","selectedColumnKeys","columnOption","layout","Input","prefix","SearchOutlined","marginSM","placeholder","noStyle","shouldUpdate","prev","cur","searchInput","_ref2","getFieldValue","searchKeyword","filteredColumns","includes","display","height","overflowY","Checkbox","Group","options","flexDirection","node","max","step","required","inputNumberProps","sliderProps","initialValue","disabled","formItemProps","useFormInstance","useEffect","setFieldValue","Math","round","gap","flex","Slider","minWidth","onStep","info","_$first","_$first2","filter","autoSelectDefault","selectProps","currentProject","useCurrentProjectValue","baiRequestWithPromise","useBaiSignedRequestWithPromise","_useUpdatableState","useUpdatableState","_useUpdatableState2","checkUpdate","data","useTanQuery","queryKey","queryFn","id","staleTime","filteredVFolders","autoSelectedOption","_selectProps$onChange","onChange","call","Select","showSearch","onDropdownVisibleChange","startTransition","vfolder","Option","extraP","currentDomain","useCurrentDomainValue","mutationToCreateService","_values$environments","_values$environments$","_values$environments$2","_values$environments$3","_values$environments$4","image","_config","allow_manual_image_name_for_session","environments","manual","registry","tag","serviceName","desiredRoutingCount","arch","architecture","group","current_group","domain","cluster_size","cluster_mode","open_to_public","openToPublic","config","model","vFolderName","model_mount_destination","environ","scaling_group","resourceGroup","resources","cpu","resource","toString","mem","accelerator","_defineProperty","acceleratorType","resource_opts","shmem","compareNumberWithUnits","length","_err$errorFields","_err$errorFields$0$er","_err$errorFields2","_err$errorFields2$0$e","errorFields","errors","maskClosable","confirmLoading","Suspense","fallback","FlexActivityIndicator","labelCol","span","RESOURCE_ALLOCATION_INITIAL_FORM_VALUES","requiredMark","ResourceGroupSelect","valuePropName","Switch","VFolderSelect","vf","usage_mode","SliderInputFormItem","addonAfter","Card","ImageEnvironmentSelectFormItems","ResourceAllocationFormItems","clearRafInterval","handle","cancelAnimationFrame","clearInterval","fn","delay","immediate","fnRef","useLatest","timerRef","useRef","isNumber","current","callback","requestAnimationFrame","setInterval","start","Date","getTime","loop","setRafInterval","useCallback","curProject","_useState","useState","_useState2","isOpenServiceLauncher","setIsOpenServiceLauncher","_useState3","_useState4","isOpenColumnsSetting","setIsOpenColumnsSetting","_useState5","_useState6","selectedModelService","setSelectedModelService","_useState7","_useState8","isOpenModelServiceSettingModal","setIsOpenModelServiceSettingModal","_useState9","pageSize","paginationState","_useTransition","useTransition","_useTransition2","isRefetchPending","startRefetchTransition","_useState11","_useState12","isOpenModelServiceTerminatingModal","setIsOpenModelServiceTerminatingModal","servicesFetchKey","updateServicesFetchKey","_useState13","_useState14","selectedTab","setSelectedTab","dataIndex","fixed","render","row","Link","width","Typography","Text","code","copyable","href","target","text","_row$status","_row$status2","_row$status3","_row$status4","SettingOutlined","toLowerCase","onClick","DeleteOutlined","colorError","EndpointStatusTag","_toConsumableArray","is_admin","endpoint_info","EndpointOwnerInfo","created_at","dayjs","format","defaultSortOrder","sortDirections","sorter","a","b","date1","date2","diff","fontWeight","_row$routings","routings","r","CheckOutlined","colorSuccess","CloseOutlined","_useLocalStorageState","useLocalStorageState","defaultValue","_useLocalStorageState2","setDisplayedColumnKeys","useRafInterval","startTransitionWithoutPendingState","modelServiceList","useLazyLoadQuery","_ServingListPageQuery","offset","limit","projectID","fetchPolicy","fetchKey","endpoint_list","sortedEndpointList","items","terminateModelServiceMutation","padding","Tabs","activeKey","tabBarStyle","paddingLeft","paddingMD","paddingRight","borderTopLeftRadius","borderRadius","borderTopRightRadius","tabBarExtraContent","right","Table","scroll","x","rowKey","dataSource","pagination","res","ModelServiceSettingModal","success","ServiceLauncherModal","TableColumnsSettingModal","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18","v19","v20","v21","v22","hash","ref","AntdIcon","_extends","DeleteOutlinedSvg","SettingOutlinedSvg"],"sourceRoot":""}