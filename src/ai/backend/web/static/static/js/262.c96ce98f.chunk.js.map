{"version":3,"file":"static/js/262.c96ce98f.chunk.js","mappings":"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","sources":["components/DoubleTag.tsx","components/ImageEnvironmentSelectFormItems.tsx","components/ImageMetaIcon.tsx","hooks/hooksUsingRelay.tsx","hooks/useResourceLimitAndRemaining.tsx","components/DynamicUnitInputNumber.tsx","components/DynamicUnitInputNumberWithSlider.tsx","components/InputNumberWithSlider.tsx","components/ResourcePresetSelect.tsx","components/ResourceAllocationFormItems.tsx","components/__generated__/ImageEnvironmentSelectFormItemsQuery.graphql.ts","components/__generated__/ResourcePresetSelectQuery.graphql.ts","hooks/__generated__/hooksUsingRelay_KeyPairQuery.graphql.ts","hooks/__generated__/hooksUsingRelay_KeyPairResourcePolicyQuery.graphql.ts","hooks/backendai.tsx","hooks/useLocalStorageGlobalState.tsx","hooks/useThemeMode.tsx"],"sourcesContent":["import Flex from './Flex';\nimport { Tag } from 'antd';\nimport _ from 'lodash';\nimport React from 'react';\n\nexport type DoubleTagObjectValue = {\n  label: ValueType;\n  color?: string;\n};\n\ntype ValueType = string | React.ReactNode;\nconst DoubleTag: React.FC<{\n  values?: ValueType[] | DoubleTagObjectValue[];\n}> = ({ values = [] }) => {\n  if (values.length === 0) return null;\n  let objectValues: DoubleTagObjectValue[];\n  if (\n    values[0] &&\n    (typeof values[0] === 'string' || React.isValidElement(values[0]))\n  ) {\n    objectValues = values.map(\n      (value) =>\n        ({\n          label: value,\n          color: 'blue',\n        }) as DoubleTagObjectValue,\n    );\n  } else {\n    objectValues = values as DoubleTagObjectValue[];\n  }\n\n  return (\n    <Flex direction=\"row\">\n      {_.map(objectValues, (objValue, idx) => {\n        return (\n          <Tag\n            key={idx}\n            style={\n              _.last(objectValues) === objValue\n                ? undefined\n                : { margin: 0, marginRight: -1 }\n            }\n            color={objValue.color}\n          >\n            {objValue.label}\n          </Tag>\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport default DoubleTag;\n","import {\n  useBackendAIImageMetaData,\n  useSuspendedBackendaiClient,\n} from '../hooks';\nimport { useThemeMode } from '../hooks/useThemeMode';\nimport DoubleTag from './DoubleTag';\nimport Flex from './Flex';\n// @ts-ignore\nimport cssRaw from './ImageEnvironmentSelectFormItems.css?raw';\nimport ImageMetaIcon from './ImageMetaIcon';\nimport TextHighlighter from './TextHighlighter';\nimport {\n  ImageEnvironmentSelectFormItemsQuery,\n  ImageEnvironmentSelectFormItemsQuery$data,\n} from './__generated__/ImageEnvironmentSelectFormItemsQuery.graphql';\nimport { Divider, Form, Input, RefSelectProps, Select, Tag, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\nexport type Image = NonNullable<\n  NonNullable<ImageEnvironmentSelectFormItemsQuery$data>['images']\n>[0];\n\ntype ImageGroup = {\n  groupName: string;\n  environmentGroups: {\n    environmentName: string;\n    displayName: string;\n    prefix?: string;\n    images: Image[];\n  }[];\n};\n\nexport type ImageEnvironmentFormInput = {\n  environments: {\n    environment: string;\n    version: string;\n    image: Image | undefined;\n    manual?: string;\n  };\n};\n\ninterface ImageEnvironmentSelectFormItemsProps {\n  filter?: (image: Image) => boolean;\n  showPrivate?: boolean;\n}\n\nconst getImageFullName = (image: Image) => {\n  return image\n    ? `${image.registry}/${image.name}:${image.tag}@${image.architecture}`\n    : undefined;\n};\n\nfunction compareVersions(version1: string, version2: string): number {\n  const v1 = version1.split('.').map(Number);\n  const v2 = version2.split('.').map(Number);\n\n  for (let i = 0; i < Math.max(v1.length, v2.length); i++) {\n    const num1 = v1[i] || 0;\n    const num2 = v2[i] || 0;\n\n    if (num1 > num2) {\n      return 1;\n    } else if (num1 < num2) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n\nconst isPrivateImage = (image: Image) => {\n  return _.some(image?.labels, (label) => {\n    return (\n      label?.key === 'ai.backend.features' &&\n      label?.value?.split(' ').includes('private')\n    );\n  });\n};\n\nconst ImageEnvironmentSelectFormItems: React.FC<\n  ImageEnvironmentSelectFormItemsProps\n> = ({ filter, showPrivate }) => {\n  const form = Form.useFormInstance<ImageEnvironmentFormInput>();\n  const environments = Form.useWatch('environments', { form, preserve: true });\n  const baiClient = useSuspendedBackendaiClient();\n\n  const [environmentSearch, setEnvironmentSearch] = useState('');\n  const [versionSearch, setVersionSearch] = useState('');\n  const { t } = useTranslation();\n  const [metadata, { getImageMeta }] = useBackendAIImageMetaData();\n  const { token } = theme.useToken();\n  const { isDarkMode } = useThemeMode();\n\n  const envSelectRef = useRef<RefSelectProps>(null);\n  const versionSelectRef = useRef<RefSelectProps>(null);\n\n  const { images } = useLazyLoadQuery<ImageEnvironmentSelectFormItemsQuery>(\n    graphql`\n      query ImageEnvironmentSelectFormItemsQuery($installed: Boolean) {\n        images(is_installed: $installed) {\n          name\n          humanized_name\n          tag\n          registry\n          architecture\n          digest\n          installed\n          resource_limits {\n            key\n            min\n            max\n          }\n          labels {\n            key\n            value\n          }\n        }\n      }\n    `,\n    {\n      installed: true,\n    },\n    {\n      fetchPolicy: 'store-and-network',\n    },\n  );\n\n  // console.log('nextEnvironmentName form', form.getFieldValue('environments'));\n  // console.log('nextEnvironmentName form', currentEnvironmentsFormData);\n  // If not initial value, select first value\n  // auto select when relative field is changed\n  useEffect(() => {\n    if (!_.isEmpty(environments?.manual)) {\n      return;\n    }\n    // if not initial value, select first value\n    const nextEnvironmentName =\n      form.getFieldValue('environments')?.environment ||\n      imageGroups[0]?.environmentGroups[0]?.environmentName;\n\n    let nextEnvironmentGroup: ImageGroup['environmentGroups'][0] | undefined;\n    _.find(imageGroups, (group) => {\n      return _.find(group.environmentGroups, (environment) => {\n        if (environment.environmentName === nextEnvironmentName) {\n          nextEnvironmentGroup = environment;\n          return true;\n        } else {\n          return false;\n        }\n      });\n    });\n\n    // if current version does'nt exist in next environment group, select a version of the first image of next environment group\n    if (\n      !_.find(\n        nextEnvironmentGroup?.images,\n        (image) =>\n          form.getFieldValue('environments')?.version ===\n          getImageFullName(image),\n      )\n    ) {\n      const nextNewImage = nextEnvironmentGroup?.images[0];\n      if (nextNewImage) {\n        form.setFieldsValue({\n          environments: {\n            environment: nextEnvironmentName,\n            version: getImageFullName(nextNewImage),\n            image: nextNewImage,\n          },\n        });\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [environments?.environment, environments?.manual]);\n\n  const imageGroups: ImageGroup[] = useMemo(\n    () =>\n      _.chain(images)\n        .filter((image) => {\n          return (\n            (showPrivate ? true : !isPrivateImage(image)) &&\n            (filter ? filter(image) : true)\n          );\n        })\n        .groupBy((image) => {\n          // group by using `group` property of image info\n          return (\n            metadata?.imageInfo[getImageMeta(getImageFullName(image) || '').key]\n              ?.group || 'Custom Environments'\n          );\n        })\n        .map((images, groupName) => {\n          return {\n            groupName,\n            environmentGroups: _.chain(images)\n              // sub group by using (environment) `name` property of image info\n              .groupBy((image) => {\n                return (\n                  // metadata?.imageInfo[\n                  //   getImageMeta(getImageFullName(image) || \"\").key\n                  // ]?.name || image?.name\n                  image?.name\n                );\n              })\n              .map((images, environmentName) => {\n                const imageKey = environmentName.split('/')?.[1];\n                const displayName =\n                  imageKey && metadata?.imageInfo[imageKey]?.name;\n\n                return {\n                  environmentName,\n                  displayName:\n                    displayName ||\n                    (_.last(environmentName.split('/')) as string),\n                  prefix: _.chain(environmentName)\n                    .split('/')\n                    .dropRight(1)\n                    .join('/')\n                    .value(),\n                  images: images.sort((a, b) =>\n                    compareVersions(\n                      // latest version comes first\n                      b?.tag?.split('-')?.[0] ?? '',\n                      a?.tag?.split('-')?.[0] ?? '',\n                    ),\n                  ),\n                };\n              })\n\n              .sortBy((item) => item.displayName)\n              .value(),\n          };\n        })\n        .sortBy((item) => item.groupName)\n        .value(),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [images, metadata, filter, showPrivate],\n  );\n\n  // support search image by full name\n  const { fullNameMatchedImage } = useMemo(() => {\n    let fullNameMatchedImage: Image | undefined;\n    let fullNameMatchedImageGroup:\n      | ImageGroup['environmentGroups'][0]\n      | undefined;\n    if (environmentSearch.length) {\n      _.chain(\n        imageGroups\n          .flatMap((group) => group.environmentGroups)\n          .find((envGroup) => {\n            fullNameMatchedImageGroup = envGroup;\n            fullNameMatchedImage = _.find(envGroup.images, (image) => {\n              return getImageFullName(image) === environmentSearch;\n            });\n            return !!fullNameMatchedImage;\n          }),\n      ).value();\n    }\n    return {\n      fullNameMatchedImage,\n      fullNameMatchedImageGroup,\n    };\n  }, [environmentSearch, imageGroups]);\n\n  return (\n    <>\n      <style>{cssRaw}</style>\n      <Form.Item\n        className=\"image-environment-select-form-item\"\n        name={['environments', 'environment']}\n        label={`${t('session.launcher.Environments')} / ${t(\n          'session.launcher.Version',\n        )}`}\n        rules={[{ required: _.isEmpty(environments?.manual) }]}\n        style={{ marginBottom: 10 }}\n      >\n        <Select\n          ref={envSelectRef}\n          showSearch\n          className=\"image-environment-select\"\n          // open={true}\n          // autoClearSearchValue\n          searchValue={environmentSearch}\n          onSearch={setEnvironmentSearch}\n          defaultActiveFirstOption={true}\n          optionFilterProp=\"filterValue\"\n          onChange={(value) => {\n            if (fullNameMatchedImage) {\n              form.setFieldsValue({\n                environments: {\n                  environment: fullNameMatchedImage?.name || '',\n                  version: getImageFullName(fullNameMatchedImage),\n                  image: fullNameMatchedImage,\n                },\n              });\n            }\n          }}\n          disabled={\n            baiClient._config.allow_manual_image_name_for_session &&\n            !_.isEmpty(environments?.manual)\n          }\n        >\n          {fullNameMatchedImage ? (\n            <Select.Option\n              value={fullNameMatchedImage?.name}\n              filterValue={getImageFullName(fullNameMatchedImage)}\n            >\n              <Flex\n                direction=\"row\"\n                align=\"center\"\n                gap=\"xs\"\n                style={{ display: 'inline-flex' }}\n              >\n                <ImageMetaIcon\n                  image={getImageFullName(fullNameMatchedImage) || ''}\n                  style={{\n                    width: 15,\n                    height: 15,\n                  }}\n                />\n                {getImageFullName(fullNameMatchedImage)}\n              </Flex>\n            </Select.Option>\n          ) : (\n            _.map(imageGroups, (group) => {\n              return (\n                <Select.OptGroup key={group.groupName} label={group.groupName}>\n                  {_.map(group.environmentGroups, (environmentGroup) => {\n                    const firstImage = environmentGroup.images[0];\n                    const currentMetaImageInfo =\n                      metadata?.imageInfo[\n                        environmentGroup.environmentName.split('/')?.[1]\n                      ];\n\n                    const extraFilterValues: string[] = [];\n                    let environmentPrefixTag = null;\n                    if (\n                      environmentGroup.prefix &&\n                      !['lablup', 'cloud', 'stable'].includes(\n                        environmentGroup.prefix,\n                      )\n                    ) {\n                      extraFilterValues.push(environmentGroup.prefix);\n                      environmentPrefixTag = (\n                        <Tag color=\"purple\">\n                          <TextHighlighter keyword={environmentSearch}>\n                            {environmentGroup.prefix}\n                          </TextHighlighter>\n                        </Tag>\n                      );\n                    }\n\n                    const tagsFromMetaImageInfoLabel = _.map(\n                      currentMetaImageInfo?.label,\n                      (label) => {\n                        if (\n                          _.isUndefined(label.category) &&\n                          label.tag &&\n                          label.color\n                        ) {\n                          extraFilterValues.push(label.tag);\n                          return (\n                            <Tag color={label.color} key={label.tag}>\n                              <TextHighlighter\n                                keyword={environmentSearch}\n                                key={label.tag}\n                              >\n                                {label.tag}\n                              </TextHighlighter>\n                            </Tag>\n                          );\n                        }\n                        return null;\n                      },\n                    );\n                    return (\n                      <Select.Option\n                        key={environmentGroup.environmentName}\n                        value={environmentGroup.environmentName}\n                        filterValue={\n                          environmentGroup.displayName +\n                          '\\t' +\n                          extraFilterValues.join('\\t')\n                        }\n                      >\n                        <Flex direction=\"row\" justify=\"between\">\n                          <Flex direction=\"row\" align=\"center\" gap=\"xs\">\n                            <ImageMetaIcon\n                              image={getImageFullName(firstImage) || ''}\n                              style={{\n                                width: 15,\n                                height: 15,\n                              }}\n                            />\n                            <TextHighlighter keyword={environmentSearch}>\n                              {environmentGroup.displayName}\n                            </TextHighlighter>\n                          </Flex>\n                          <Flex\n                            direction=\"row\"\n                            // set specific class name to handle flex wrap using css\n                            className={\n                              isDarkMode ? 'tag-wrap-dark' : 'tag-wrap-light'\n                            }\n                            // style={{ flex: 1 }}\n                            style={{\n                              marginLeft: token.marginXS,\n                              flexShrink: 1,\n                            }}\n                          >\n                            {environmentPrefixTag}\n                            {tagsFromMetaImageInfoLabel}\n                          </Flex>\n                        </Flex>\n                      </Select.Option>\n                    );\n                  })}\n                </Select.OptGroup>\n              );\n            })\n          )}\n        </Select>\n      </Form.Item>\n      <Form.Item\n        noStyle\n        shouldUpdate={(prev, cur) =>\n          prev.environments?.environment !== cur.environments?.environment\n        }\n      >\n        {({ getFieldValue }) => {\n          let selectedEnvironmentGroup:\n            | ImageGroup['environmentGroups'][0]\n            | undefined;\n          _.find(imageGroups, (group) => {\n            return _.find(group.environmentGroups, (environment) => {\n              if (\n                environment.environmentName ===\n                getFieldValue('environments')?.environment\n              ) {\n                selectedEnvironmentGroup = environment;\n                return true;\n              } else {\n                return false;\n              }\n            });\n          });\n          return (\n            <Form.Item\n              className=\"image-environment-select-form-item\"\n              name={['environments', 'version']}\n              rules={[{ required: _.isEmpty(environments?.manual) }]}\n            >\n              <Select\n                ref={versionSelectRef}\n                onChange={(value) => {\n                  const selectedImage = _.find(images, (image) => {\n                    return getImageFullName(image) === value;\n                  });\n                  form.setFieldValue(['environments', 'image'], selectedImage);\n                }}\n                showSearch\n                searchValue={versionSearch}\n                onSearch={setVersionSearch}\n                // autoClearSearchValue\n                optionFilterProp=\"filterValue\"\n                // optionLabelProp=\"label\"\n                dropdownRender={(menu) => (\n                  <>\n                    <Flex\n                      style={{\n                        fontWeight: token.fontWeightStrong,\n                        paddingLeft: token.paddingSM,\n                      }}\n                    >\n                      {t('session.launcher.Version')}\n                      <Divider type=\"vertical\" />\n                      {t('session.launcher.Base')}\n                      <Divider type=\"vertical\" />\n                      {t('session.launcher.Architecture')}\n                      <Divider type=\"vertical\" />\n                      {t('session.launcher.Requirements')}\n                    </Flex>\n                    <Divider style={{ margin: '8px 0' }} />\n                    {menu}\n                  </>\n                )}\n                disabled={\n                  baiClient._config.allow_manual_image_name_for_session &&\n                  !_.isEmpty(environments?.manual)\n                }\n              >\n                {_.map(\n                  _.uniqBy(selectedEnvironmentGroup?.images, 'digest'),\n\n                  (image) => {\n                    const [version, tag, ...requirements] = image?.tag?.split(\n                      '-',\n                    ) || ['', '', ''];\n\n                    let tagAlias = metadata?.tagAlias[tag];\n                    if (!tagAlias) {\n                      for (const [key, replaceString] of Object.entries(\n                        metadata?.tagReplace || {},\n                      )) {\n                        const pattern = new RegExp(key);\n                        if (pattern.test(tag)) {\n                          tagAlias = tag?.replace(pattern, replaceString);\n                        }\n                      }\n                      if (!tagAlias) {\n                        tagAlias = tag;\n                      }\n                    }\n\n                    const extraFilterValues: string[] = [];\n                    const requirementTags =\n                      requirements.length > 0\n                        ? _.map(requirements, (requirement, idx) => (\n                            <DoubleTag\n                              key={idx}\n                              values={_.split(\n                                metadata?.tagAlias[requirement] || requirement,\n                                ':',\n                              ).map((str) => {\n                                extraFilterValues.push(str);\n                                return (\n                                  <TextHighlighter\n                                    keyword={versionSearch}\n                                    key={str}\n                                  >\n                                    {str}\n                                  </TextHighlighter>\n                                );\n                              })}\n                            />\n                          ))\n                        : '-';\n                    return (\n                      <Select.Option\n                        key={image?.digest}\n                        value={getImageFullName(image)}\n                        filterValue={[\n                          version,\n                          tagAlias,\n                          image?.architecture,\n                          ...extraFilterValues,\n                        ].join('\\t')}\n                      >\n                        <Flex direction=\"row\" justify=\"between\">\n                          <Flex direction=\"row\">\n                            <TextHighlighter keyword={versionSearch}>\n                              {version}\n                            </TextHighlighter>\n                            <Divider type=\"vertical\" />\n                            <TextHighlighter keyword={versionSearch}>\n                              {tagAlias}\n                            </TextHighlighter>\n                            <Divider type=\"vertical\" />\n                            <TextHighlighter keyword={versionSearch}>\n                              {image?.architecture}\n                            </TextHighlighter>\n                          </Flex>\n                          <Flex\n                            direction=\"row\"\n                            // set specific class name to handle flex wrap using css\n                            className={\n                              isDarkMode ? 'tag-wrap-dark' : 'tag-wrap-light'\n                            }\n                            style={{\n                              marginLeft: token.marginXS,\n                              flexShrink: 1,\n                            }}\n                          >\n                            {requirementTags}\n                          </Flex>\n                        </Flex>\n                      </Select.Option>\n                    );\n                  },\n                )}\n              </Select>\n            </Form.Item>\n          );\n        }}\n      </Form.Item>\n      <Form.Item\n        label={t('session.launcher.ManualImageName')}\n        name={['environments', 'manual']}\n        style={{\n          display: baiClient._config.allow_manual_image_name_for_session\n            ? 'block'\n            : 'none',\n        }}\n      >\n        <Input\n          allowClear\n          onChange={(value) => {\n            if (!_.isEmpty(value)) {\n              form.setFieldsValue({\n                environments: {\n                  environment: undefined,\n                  version: undefined,\n                  image: undefined,\n                },\n              });\n            }\n          }}\n        />\n      </Form.Item>\n      <Form.Item noStyle hidden name={['environments', 'image']}>\n        <Input />\n      </Form.Item>\n    </>\n  );\n};\n\nexport default ImageEnvironmentSelectFormItems;\n","import { useBackendAIImageMetaData } from '../hooks';\nimport React from 'react';\n\nconst ImageMetaIcon: React.FC<{\n  image: string | null;\n  style?: React.CSSProperties;\n  border?: boolean;\n  alt?: string | null;\n}> = ({ image, style = {} }, bordered, alt = '') => {\n  const [, { getImageIcon }] = useBackendAIImageMetaData();\n\n  return (\n    <img\n      src={getImageIcon(image)}\n      style={{\n        width: '1em',\n        height: '1em',\n        ...style,\n      }}\n      alt={alt}\n    />\n  );\n};\n\nexport default React.memo(ImageMetaIcon);\n","import { useSuspendedBackendaiClient, useUpdatableState } from '.';\nimport { hooksUsingRelay_KeyPairQuery } from './__generated__/hooksUsingRelay_KeyPairQuery.graphql';\nimport { hooksUsingRelay_KeyPairResourcePolicyQuery } from './__generated__/hooksUsingRelay_KeyPairResourcePolicyQuery.graphql';\nimport graphql from 'babel-plugin-relay/macro';\nimport { useCallback } from 'react';\nimport { FetchPolicy, useLazyLoadQuery } from 'react-relay';\n\ninterface FetchOptions {\n  fetchKey?: string | number;\n  fetchPolicy?: FetchPolicy;\n}\nexport const useKeyPairLazyLoadQuery = (\n  accessKey: string,\n  options: FetchOptions = {\n    fetchPolicy: 'store-and-network',\n  },\n) => {\n  const [fetchKey, updateFetchKey] = useUpdatableState('first');\n  const { keypair } = useLazyLoadQuery<hooksUsingRelay_KeyPairQuery>(\n    graphql`\n      query hooksUsingRelay_KeyPairQuery($accessKey: String!) {\n        keypair(access_key: $accessKey) {\n          id\n          resource_policy\n          concurrency_used\n        }\n      }\n    `,\n    {\n      accessKey: accessKey,\n    },\n    {\n      ...options,\n      fetchKey: fetchKey + options.fetchKey,\n    },\n  );\n\n  const refresh = useCallback(() => {\n    updateFetchKey();\n  }, [updateFetchKey]);\n\n  return [keypair, { refresh }] as const;\n};\n\nexport const useCurrentKeyPairResourcePolicyLazyLoadQuery = (\n  options: FetchOptions = {\n    fetchPolicy: 'store-and-network',\n  },\n) => {\n  const [fetchKey, updateFetchKey] = useUpdatableState('first');\n  const baiClient = useSuspendedBackendaiClient();\n  const [keypair] = useKeyPairLazyLoadQuery(baiClient?._config.accessKey);\n\n  const { keypair_resource_policy } =\n    useLazyLoadQuery<hooksUsingRelay_KeyPairResourcePolicyQuery>(\n      graphql`\n        query hooksUsingRelay_KeyPairResourcePolicyQuery($name: String!) {\n          keypair_resource_policy(name: $name) {\n            max_containers_per_session\n            max_concurrent_sessions\n          }\n        }\n      `,\n      {\n        name: keypair?.resource_policy || '',\n      },\n      {\n        ...options,\n        fetchKey: fetchKey + options.fetchKey,\n      },\n    );\n\n  const refresh = useCallback(() => {\n    updateFetchKey();\n  }, [updateFetchKey]);\n\n  return [\n    {\n      keypairResourcePolicy: (keypair_resource_policy || {}) as NonNullable<\n        typeof keypair_resource_policy\n      >,\n      keypair: (keypair || {}) as NonNullable<typeof keypair>,\n    },\n    { refresh },\n  ] as const;\n};\n","import { useSuspendedBackendaiClient } from '.';\nimport { Image } from '../components/ImageEnvironmentSelectFormItems';\nimport { AUTOMATIC_DEFAULT_SHMEM } from '../components/ResourceAllocationFormItems';\nimport { addNumberWithUnits, iSizeToSize } from '../helper';\nimport { useResourceSlots } from '../hooks/backendai';\nimport { useTanQuery } from './reactQueryAlias';\nimport _ from 'lodash';\n\ninterface MergedResourceLimits {\n  accelerators: {\n    [key: string]:\n      | {\n          min?: number;\n          max?: number;\n        }\n      | undefined;\n  };\n  cpu?: {\n    min?: number;\n    max?: number;\n  };\n  mem?: {\n    min?: string;\n    max?: string;\n  };\n  shmem?: {\n    min?: string;\n    max?: string;\n  };\n}\n\ntype ResourceLimits = {\n  cpu: string | 'Infinity' | 'NaN';\n  mem: string | 'Infinity' | 'NaN';\n  'cuda.device': string | 'Infinity' | 'NaN';\n};\ntype ResourceUsing = ResourceLimits;\ntype ResourceRemaining = ResourceLimits;\ntype ScalingGroup = {\n  using: ResourceUsing;\n  remaining: ResourceRemaining;\n};\n\ntype ResourceSlots = {\n  cpu: string;\n  mem: string;\n  'cuda.device': string;\n  [key: string]: string;\n};\n\ntype RemainingSlots = {\n  cpu: number;\n  mem: number;\n  accelerators: {\n    [key: string]: number;\n  };\n};\n\ntype Preset = {\n  name: string;\n  resource_slots: ResourceSlots;\n  shared_memory: string | null;\n  allocatable: boolean;\n};\n\ntype ResourceAllocation = {\n  keypair_limits: ResourceLimits;\n  keypair_using: ResourceUsing;\n  keypair_remaining: ResourceRemaining;\n  scaling_group_remaining: ResourceRemaining;\n  scaling_groups: {\n    [key: string]: ScalingGroup;\n  };\n  presets: Preset[];\n  group_limits: ResourceLimits;\n  group_using: ResourceUsing;\n  group_remaining: ResourceRemaining;\n};\n\ninterface Props {\n  currentProjectName: string;\n  currentImage?: Image;\n  currentResourceGroup: string;\n}\n\n// determine resource limits and remaining for current resource group and current image in current project\nexport const useResourceLimitAndRemaining = ({\n  currentImage,\n  currentResourceGroup,\n  currentProjectName,\n}: Props) => {\n  const baiClient = useSuspendedBackendaiClient();\n  const [resourceSlots] = useResourceSlots();\n  const acceleratorSlots = _.omit(resourceSlots, ['cpu', 'mem', 'shmem']);\n\n  const {\n    data: checkPresetInfo,\n    refetch,\n    isRefetching,\n  } = useTanQuery<ResourceAllocation>({\n    queryKey: ['check-resets', currentProjectName, currentResourceGroup],\n    queryFn: () => {\n      if (currentResourceGroup) {\n        return baiClient.resourcePreset.check({\n          group: currentProjectName,\n          scaling_group: currentResourceGroup,\n        });\n      } else {\n        return;\n      }\n    },\n    staleTime: 0,\n    suspense: !_.isEmpty(currentResourceGroup), //prevent flicking\n  });\n\n  const currentImageMinM =\n    _.find(currentImage?.resource_limits, (i) => i?.key === 'mem')?.min || '0g';\n\n  const resourceGroupResourceSize: {\n    cpu?: number;\n    mem?: string;\n    accelerators: {\n      [key: string]: number | undefined;\n    };\n  } = {\n    // scaling group all cpu (using + remaining), string type\n    cpu:\n      !_.isEmpty(\n        checkPresetInfo?.scaling_groups[currentResourceGroup]?.using?.cpu,\n      ) &&\n      !_.isEmpty(\n        checkPresetInfo?.scaling_groups[currentResourceGroup]?.remaining?.cpu,\n      )\n        ? _.toNumber(\n            checkPresetInfo?.scaling_groups[currentResourceGroup]?.using.cpu,\n          ) +\n          _.toNumber(\n            checkPresetInfo?.scaling_groups[currentResourceGroup]?.remaining\n              .cpu,\n          )\n        : undefined,\n    mem:\n      !_.isEmpty(\n        checkPresetInfo?.scaling_groups[currentResourceGroup]?.using?.mem,\n      ) &&\n      !_.isEmpty(\n        checkPresetInfo?.scaling_groups[currentResourceGroup]?.remaining?.mem,\n      )\n        ? iSizeToSize(\n            _.toNumber(\n              checkPresetInfo?.scaling_groups[currentResourceGroup]?.using.mem,\n            ) +\n              _.toNumber(\n                checkPresetInfo?.scaling_groups[currentResourceGroup]?.remaining\n                  .mem,\n              ) +\n              'b',\n            'g',\n            2,\n          )?.numberFixed + 'g'\n        : undefined,\n    accelerators: _.reduce(\n      acceleratorSlots,\n      (result, value, key) => {\n        result[key] =\n          !_.isEmpty(\n            // @ts-ignore\n            checkPresetInfo?.scaling_groups[currentResourceGroup]?.using?.[key],\n          ) &&\n          !_.isEmpty(\n            // @ts-ignore\n            checkPresetInfo?.scaling_groups[currentResourceGroup]?.remaining?.[\n              key\n            ],\n          )\n            ? _.toNumber(\n                // @ts-ignore\n                checkPresetInfo?.scaling_groups[currentResourceGroup]?.using[\n                  key\n                ],\n              ) +\n              _.toNumber(\n                // @ts-ignore\n                checkPresetInfo?.scaling_groups[currentResourceGroup]\n                  ?.remaining[key],\n              )\n            : undefined;\n        return result;\n      },\n      {} as {\n        [key: string]: number | undefined;\n      },\n    ),\n  };\n  const resourceLimits: MergedResourceLimits = {\n    cpu:\n      resourceSlots?.cpu === undefined\n        ? undefined\n        : {\n            min: _.max([\n              _.toNumber(\n                _.find(currentImage?.resource_limits, (i) => i?.key === 'cpu')\n                  ?.min || '0',\n              ),\n            ]),\n            max: _.min([\n              baiClient._config.maxCPUCoresPerContainer,\n              limitParser(checkPresetInfo?.keypair_limits.cpu),\n              limitParser(checkPresetInfo?.group_limits.cpu),\n              resourceGroupResourceSize?.cpu,\n            ]),\n          },\n    mem:\n      resourceSlots?.mem === undefined\n        ? undefined\n        : {\n            // M to max of [ image's mem min, AUTOMATIC_DEFAULT_SHMEM]\n            // mem(M+S) should be larger than _.max([ image's mem min, AUTOMATIC_DEFAULT_SHMEM ]) + AUTOMATIC_DEFAULT_SHMEM (rule: S can not be larger than M)\n            min:\n              //handled by 'b' unit\n              addNumberWithUnits(\n                _.max([\n                  iSizeToSize(currentImageMinM, 'b')?.number,\n                  iSizeToSize(AUTOMATIC_DEFAULT_SHMEM, 'b')?.number,\n                  0,\n                ]) + 'b',\n                AUTOMATIC_DEFAULT_SHMEM,\n              ),\n            max:\n              //handled by 'g(GiB)' unit\n              _.min([\n                baiClient._config.maxMemoryPerContainer,\n                limitParser(checkPresetInfo?.keypair_limits.mem) &&\n                  iSizeToSize(\n                    limitParser(checkPresetInfo?.keypair_limits.mem) + '',\n                    'g',\n                  )?.number,\n                limitParser(checkPresetInfo?.group_limits.mem) &&\n                  iSizeToSize(\n                    limitParser(checkPresetInfo?.group_limits.mem) + '',\n                    'g',\n                  )?.number,\n                // scaling group all mem (using + remaining), string type\n                resourceGroupResourceSize?.mem &&\n                  iSizeToSize(resourceGroupResourceSize?.mem + '', 'g')?.number,\n              ]) + 'g',\n          },\n    // shmem:\n    //   resourceSlots?.mem === undefined\n    //     ? undefined\n    //     : {\n    //         min: _.max([\n    //           _.find(currentImage?.resource_limits, (i) => i?.key === 'shmem')\n    //             ?.min,\n    //           '64m',\n    //         ]),\n    //       },\n    accelerators: _.reduce(\n      acceleratorSlots,\n      (result, value, key) => {\n        const configName =\n          {\n            'cuda.device': 'maxCUDADevicesPerContainer',\n            'cuda.shares': 'maxCUDASharesPerContainer',\n            'rocm.device': 'maxROCMDevicesPerContainer',\n            'tpu.device': 'maxTPUDevicesPerContainer',\n            'ipu.device': 'maxIPUDevicesPerContainer',\n            'atom.device': 'maxATOMDevicesPerContainer',\n            'warboy.device': 'maxWarboyDevicesPerContainer',\n          }[key] || 'cuda.device'; // FIXME: temporally `cuda.device` config, when undefined\n        result[key] = {\n          min: parseInt(\n            _.filter(\n              currentImage?.resource_limits,\n              (supportedAcceleratorInfo) => {\n                return supportedAcceleratorInfo?.key === key;\n              },\n            )?.[0]?.min || '0',\n          ),\n          max: _.min([\n            baiClient._config[configName] || 8,\n            // scaling group all cpu (using + remaining), string type\n            resourceGroupResourceSize.accelerators[key],\n          ]),\n        };\n        return result;\n      },\n      {} as MergedResourceLimits['accelerators'],\n    ),\n  };\n  const remaining: RemainingSlots = {\n    accelerators: _.reduce(\n      acceleratorSlots,\n      (result, value, key) => {\n        result[key] =\n          _.min([\n            // @ts-ignore\n            _.toNumber(checkPresetInfo?.keypair_remaining[key]),\n            // @ts-ignore\n            _.toNumber(checkPresetInfo?.group_remaining[key]),\n            // @ts-ignore\n            _.toNumber(checkPresetInfo?.scaling_group_remaining[key]),\n          ]) ?? Number.MAX_SAFE_INTEGER;\n        return result;\n      },\n      {} as RemainingSlots['accelerators'],\n    ),\n    cpu:\n      _.min([\n        limitParser(checkPresetInfo?.keypair_remaining.cpu),\n        limitParser(checkPresetInfo?.group_remaining.cpu),\n        limitParser(checkPresetInfo?.scaling_group_remaining.cpu),\n      ]) ?? Number.MAX_SAFE_INTEGER,\n    mem:\n      _.min([\n        limitParser(checkPresetInfo?.keypair_remaining.mem),\n        limitParser(checkPresetInfo?.group_remaining.mem),\n        limitParser(checkPresetInfo?.scaling_group_remaining.mem),\n      ]) ?? Number.MAX_SAFE_INTEGER,\n  };\n\n  return [\n    {\n      resourceGroupResourceSize,\n      resourceLimits,\n      remaining,\n      currentImageMinM,\n      isRefetching,\n    },\n    {\n      refetch,\n    },\n  ] as const;\n};\n\nconst limitParser = (limit: string | undefined) => {\n  if (limit === undefined) {\n    return undefined;\n  } else if (limit === 'Infinity') {\n    return undefined;\n  } else if (limit === 'NaN') {\n    return undefined;\n  } else {\n    return _.toNumber(limit);\n  }\n};\n","import { iSizeToSize, parseUnit } from '../helper';\nimport { useControllableValue, usePrevious } from 'ahooks';\nimport { InputNumber, InputNumberProps, Select, Typography } from 'antd';\nimport _ from 'lodash';\nimport React, { useEffect, useRef } from 'react';\n\nexport interface DynamicUnitInputNumberProps\n  extends Omit<\n    InputNumberProps,\n    'step' | 'max' | 'min' | 'value' | 'onChange'\n  > {\n  dynamicSteps?: number[];\n  disableAutoUnit?: boolean;\n  max?: string;\n  min?: string;\n  value?: string | null | undefined;\n  units?: string[];\n  onChange?: (value: string) => void;\n}\n\nconst DynamicUnitInputNumber: React.FC<DynamicUnitInputNumberProps> = ({\n  dynamicSteps = [1, 2, 4, 8, 16, 32, 64, 128, 256, 512],\n  units = ['m', 'g', 't', 'p'],\n  disableAutoUnit = false,\n  min = '0m',\n  max = '300p',\n  // value,\n  // onChange,\n  ...inputNumberProps\n}) => {\n  const [value, setValue] = useControllableValue<string | null | undefined>(\n    inputNumberProps,\n    {\n      defaultValue: '0g',\n    },\n  );\n  const [numValue, _unitFromValue] =\n    value === null || value === undefined ? [null, null] : parseUnit(value);\n  const previousUnit = usePrevious(_unitFromValue);\n  const unit = _unitFromValue || previousUnit || units[0];\n\n  const [minNumValue, minUnit] = parseUnit(min);\n  const [maxNumValue, maxUnit] = parseUnit(max);\n\n  const ref = useRef<HTMLInputElement>(null);\n  useEffect(() => {\n    if (ref.current) {\n      const onInput = (e: Event) => {\n        // @ts-ignore\n        const value = e?.target?.value;\n        if (/^\\d+(g|m)$/.test(value)) {\n          // const [newNumber, newUnit] = parseUnit(value);\n          // if (newNumber === numValue && newUnit === unit) {\n          //   e.target.value = numValue;\n          // } else {\n          setValue(value);\n          // }\n        }\n      };\n      const target = ref.current;\n      target?.addEventListener('input', onInput);\n      return () => {\n        target?.removeEventListener('input', onInput);\n      };\n    }\n  }, [ref, numValue, _unitFromValue, setValue]);\n\n  return (\n    <InputNumber\n      ref={ref}\n      {...inputNumberProps}\n      value={numValue}\n      onChange={(newValue) => {\n        if (newValue === null || newValue === undefined) {\n          setValue(newValue);\n        } else {\n          setValue(`${newValue}${unit}`);\n        }\n      }}\n      //TODO: When min and max have different units, they should be calculated and put in.\n      // 입력의 초소단위 확인 0.4g 가 되는지 확인\n      // @ts-ignore\n      max={maxUnit === unit ? maxNumValue : iSizeToSize(max, unit).number}\n      min={\n        minUnit === unit\n          ? minNumValue\n          : // @ts-ignore\n            iSizeToSize(min, unit).number\n      }\n      addonAfter={\n        <Select\n          tabIndex={-1}\n          value={unit}\n          onChange={(newUnit) => {\n            setValue(`${numValue}${newUnit}`);\n          }}\n          onDropdownVisibleChange={(open) => {\n            // A null or undefined value doesn't have a unit info, so we need to set the value before setting the unit.\n            if ((open && value === null) || value === undefined) {\n              setValue(`0${unit}`);\n            }\n          }}\n          options={_.map(units, (unit) => ({\n            value: unit,\n            label: (\n              <Typography.Text\n                style={{\n                  fontFamily:\n                    \"'SFMono-Regular',Consolas,'Liberation Mono',Menlo,Courier,monospace\",\n                }}\n              >\n                {unit.toUpperCase() + 'iB'}\n              </Typography.Text>\n            ),\n          }))}\n          suffixIcon={units.length > 1 ? undefined : null}\n          open={units.length > 1 ? undefined : false}\n          style={{\n            cursor: units.length > 1 ? undefined : 'default',\n          }}\n        />\n      }\n      step={0} // this step applies when onStep doesn't setValue\n      onStep={(afterStepValue, info) => {\n        const numValueNotNull =\n          _.isNull(numValue) || _.isUndefined(numValue) ? 0 : numValue;\n        const index = _.sortedIndex(_.sortBy(dynamicSteps), numValueNotNull);\n        let nextIndex: number;\n        if (info.type === 'up') {\n          if (numValueNotNull === dynamicSteps[index]) {\n            nextIndex = index + 1;\n          } else {\n            nextIndex = index;\n          }\n        } else {\n          nextIndex = index - 1;\n        }\n\n        const currentUnitIndex = units.indexOf(unit);\n        if (!disableAutoUnit && nextIndex < 0) {\n          // WHEN MOVING TO MORE Smaller Unit: change unit and number\n          if (currentUnitIndex === 0) {\n            // if already at min unit, set to 0\n            setValue(`0${unit}`);\n          } else {\n            const nextValue = dynamicSteps[dynamicSteps.length - 1];\n            const nextUnit = units[currentUnitIndex - 1];\n            setValue(`${nextValue}${nextUnit}`);\n          }\n        } else if (!disableAutoUnit && nextIndex > dynamicSteps.length - 1) {\n          // WHEN MOVING TO MORE Bigger Unit: change unit and number\n          //  if already at max unit, step up/down by 1\n          if (currentUnitIndex === units.length - 1) {\n            setValue(\n              `${numValueNotNull + (info.type === 'up' ? 1 : -1)}${maxUnit}`,\n            );\n          } else {\n            const nextValue = dynamicSteps[0];\n            const nextUnit = units[currentUnitIndex + 1];\n            setValue(`${nextValue}${nextUnit}`);\n          }\n        } else {\n          // WHEN, DON'T NEED TO CHANGE UNIT\n          if (nextIndex >= 0 && nextIndex < dynamicSteps.length) {\n            let nextNumValue = dynamicSteps[nextIndex];\n            if (minUnit === unit && nextNumValue < minNumValue) {\n              nextNumValue = minNumValue;\n            } else if (maxUnit === unit && nextNumValue > maxNumValue) {\n              nextNumValue = maxNumValue;\n            }\n            setValue(`${nextNumValue}${unit}`);\n          }\n        }\n      }}\n    />\n  );\n};\n\nexport default DynamicUnitInputNumber;\n","import { compareNumberWithUnits, iSizeToSize } from '../helper';\nimport DynamicUnitInputNumber, {\n  DynamicUnitInputNumberProps,\n} from './DynamicUnitInputNumber';\nimport Flex from './Flex';\nimport { useControllableValue } from 'ahooks';\nimport { Slider, theme } from 'antd';\nimport { SliderMarks } from 'antd/es/slider';\nimport _ from 'lodash';\nimport React, { useMemo } from 'react';\n\nexport interface DynamicUnitInputNumberWithSliderProps\n  extends DynamicUnitInputNumberProps {\n  extraMarks?: SliderMarks;\n  hideSlider?: boolean;\n  warn?: string;\n}\nconst DynamicUnitInputNumberWithSlider: React.FC<\n  DynamicUnitInputNumberWithSliderProps\n> = ({\n  min = '0m',\n  max = '32g',\n  warn,\n  units = ['m', 'g'],\n  extraMarks,\n  hideSlider,\n  ...otherProps\n}) => {\n  const [value, setValue] = useControllableValue<string | undefined | null>(\n    otherProps,\n    {\n      defaultValue: '0g',\n    },\n  );\n  const { token } = theme.useToken();\n  const minGiB = useMemo(() => iSizeToSize(min, 'g', 2), [min]);\n  const maxGiB = useMemo(() => iSizeToSize(max, 'g', 2), [max]);\n  const valueGiB = useMemo(() => iSizeToSize(value || '0g', 'g', 2), [value]);\n\n  // const warnPercent = useMemo(() => {\n  //   return warn\n  //     ? ((iSizeToSize(warn, 'g', 2)?.number || 0) / (maxGiB?.number || 1)) * 100\n  //     : undefined;\n  // }, [warn, maxGiB?.number]);\n  // console.log('##marks', marks);\n  return (\n    <Flex direction=\"row\" gap={'md'}>\n      <Flex\n        style={{ flex: 2, minWidth: 190 }}\n        direction=\"column\"\n        align=\"stretch\"\n      >\n        <DynamicUnitInputNumber\n          {...otherProps}\n          min={min}\n          max={max}\n          units={units}\n          value={value}\n          onChange={(nextValue) => {\n            setValue(nextValue);\n          }}\n          style={{\n            minWidth: 130,\n          }}\n        />\n      </Flex>\n      <Flex\n        direction=\"column\"\n        align=\"stretch\"\n        style={{\n          flex: 3,\n          ...(hideSlider && {\n            visibility: 'hidden',\n            height: 0,\n          }),\n        }}\n      >\n        <Flex direction=\"column\" align=\"stretch\">\n          {/* {warn && (\n            <Flex\n              direction=\"row\"\n              style={{\n                position: 'absolute',\n                left: 0,\n                top: 14.5,\n                width: '100%',\n                height: 4,\n                padding: '0 5px',\n              }}\n              align=\"start\"\n            >\n              <div\n                style={{\n                  width: warnPercent + '%',\n                  height: 4,\n                }}\n              ></div>\n              <div\n                style={{\n                  marginTop: 3,\n                  marginLeft: -3.5,\n                  width: 0,\n                  height: 0,\n\n                  borderTop: '4px solid transparent',\n                  borderLeft: '4px solid transparent',\n                  borderRight: '4px solid transparent',\n                  borderBottom: `7px solid ${token.colorWarning}`,\n                }}\n              ></div>\n            </Flex>\n          )} */}\n          <Slider\n            max={maxGiB?.number}\n            trackStyle={\n              (warn && {\n                backgroundColor:\n                  compareNumberWithUnits(warn, value || '0b') < 0\n                    ? token.colorWarning\n                    : undefined,\n              }) ||\n              undefined\n            }\n            railStyle={\n              {\n                // backgroundColor:'red',\n                // fill: 'red',\n              }\n            }\n            step={0.125}\n            // min={minGiB.number}  // DO NOT use min, because slider left should be 0\n            value={valueGiB?.number}\n            tooltip={{\n              formatter: (value = 0) => {\n                return value < 1\n                  ? `${(value * 1024).toFixed(2)} MiB`\n                  : `${value.toFixed(2)} GiB`;\n              },\n            }}\n            onChange={(newNumValue) => {\n              if (minGiB?.number && minGiB.number > newNumValue) {\n                setValue(min);\n              } else {\n                setValue(\n                  newNumValue < 1\n                    ? `${newNumValue * 1024}m`\n                    : `${newNumValue}g`,\n                );\n              }\n            }}\n            marks={{\n              // 0: {\n              //   style: {\n              //     color: token.colorTextSecondary,\n              //   },\n              //   label: 0,\n              // },\n              ...(minGiB &&\n                _.isNumber(minGiB?.number) && {\n                  [minGiB.number]: {\n                    style: {\n                      color: token.colorTextSecondary,\n                    },\n                    // if 0, without unit\n                    label:\n                      minGiB.number === 0\n                        ? minGiB.number\n                        : minGiB.number >= 1\n                        ? minGiB.number + 'g'\n                        : minGiB.number * 1024 + 'm',\n                  },\n                }),\n              // extra: remaining mark code should be located before max mark code to prevent overlapping when it is same value\n              ...extraMarks,\n              ...(maxGiB?.number && {\n                [maxGiB.number]: {\n                  style: {\n                    color: token.colorTextSecondary,\n                  },\n                  label:\n                    maxGiB.number === 0\n                      ? maxGiB.number\n                      : maxGiB.number >= 1\n                      ? maxGiB.number + 'g'\n                      : maxGiB.number * 1024 + 'm',\n                },\n              }),\n            }}\n          />\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default DynamicUnitInputNumberWithSlider;\n","import Flex from './Flex';\nimport { useControllableValue } from 'ahooks';\nimport { InputNumber, Slider, InputNumberProps, SliderSingleProps } from 'antd';\nimport { SliderRangeProps } from 'antd/es/slider';\nimport React, { useEffect } from 'react';\n\ntype OmitControlledProps<T> = Omit<T, 'value' | 'onChange'>;\n\ninterface InputNumberWithSliderProps {\n  min?: number;\n  max?: number;\n  step?: number;\n  disabled?: boolean;\n  value?: number;\n  onChange?: (value: number) => void;\n  inputNumberProps?: OmitControlledProps<InputNumberProps>;\n  sliderProps?:\n    | OmitControlledProps<SliderSingleProps>\n    | OmitControlledProps<SliderRangeProps>;\n}\nconst InputNumberWithSlider: React.FC<InputNumberWithSliderProps> = ({\n  min,\n  max,\n  step,\n  disabled,\n  inputNumberProps,\n  sliderProps,\n  ...otherProps\n}) => {\n  const [value, setValue] = useControllableValue(otherProps);\n  useEffect(() => {\n    // when step is 1, make sure the value is integer\n    if (step === 1 && value % 1 !== 0) {\n      setValue(Math.round(value));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [step]);\n  return (\n    <Flex direction=\"row\" gap={'md'}>\n      <Flex\n        style={{ flex: 2, minWidth: 190 }}\n        align=\"stretch\"\n        direction=\"column\"\n      >\n        <InputNumber\n          max={max}\n          min={min}\n          step={step}\n          disabled={disabled}\n          value={value}\n          onChange={setValue}\n          {...inputNumberProps}\n        />\n      </Flex>\n      <Flex direction=\"column\" align=\"stretch\" style={{ flex: 3 }}>\n        <Slider\n          max={max}\n          min={0}\n          step={step}\n          disabled={disabled}\n          value={value}\n          onChange={(value: any) => {\n            if (min !== undefined && value < min) {\n              return;\n            } else {\n              setValue(value);\n            }\n          }}\n          {...sliderProps}\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default InputNumberWithSlider;\n","import { useUpdatableState } from '../hooks';\nimport { useResourceSlots } from '../hooks/backendai';\nimport Flex from './Flex';\nimport ResourceNumber from './ResourceNumber';\nimport { ResourcePresetSelectQuery } from './__generated__/ResourcePresetSelectQuery.graphql';\nimport { EditOutlined } from '@ant-design/icons';\nimport { useThrottleFn } from 'ahooks';\nimport { Select } from 'antd';\nimport { SelectProps } from 'antd/lib';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useTransition } from 'react';\nimport { useLazyLoadQuery } from 'react-relay';\n\n// const myFunc= ()=>{\n//   const param: any = { group: globalThis.backendaiclient.current_group };\n//       if (\n//         this.current_user_group !== globalThis.backendaiclient.current_group ||\n//         this.scaling_groups.length == 0 ||\n//         (this.scaling_groups.length === 1 && this.scaling_groups[0].name === '')\n//       ) {\n//         this.current_user_group = globalThis.backendaiclient.current_group;\n//         const sgs = await globalThis.backendaiclient.scalingGroup.list(\n//           this.current_user_group,\n//         );\n//         // Make empty scaling group item if there is no scaling groups.\n//         this.scaling_groups =\n//           sgs.scaling_groups.length > 0 ? sgs.scaling_groups : [{ name: '' }];\n//       }\n//       if (this.scaling_groups.length > 0) {\n//         const scaling_groups: any = [];\n//         this.scaling_groups.map((group) => {\n//           scaling_groups.push(group.name);\n//         });\n//         if (\n//           this.scaling_group === '' ||\n//           !scaling_groups.includes(this.scaling_group)\n//         ) {\n//           this.scaling_group = this.scaling_groups[0].name;\n//         }\n//         param['scaling_group'] = this.scaling_group;\n//       }\n//       const resourcePresetInfo =\n//         await globalThis.backendaiclient.resourcePreset.check(param);\n// }\n\ntype Y = ArrayElement<NonNullable<SelectProps['options']>>;\ninterface PresetOptionType extends Y {\n  options?: PresetOptionType[];\n  preset?: {\n    name: string;\n    resource_slots: string;\n    shared_memory: string;\n  };\n}\ninterface ResourcePresetSelectProps extends Omit<SelectProps, 'onChange'> {\n  onChange?: (value: string, options: PresetOptionType) => void;\n}\nconst ResourcePresetSelect: React.FC<ResourcePresetSelectProps> = ({\n  ...selectProps\n}) => {\n  const [fetchKey, updateFetchKey] = useUpdatableState('first');\n  const { run: updateFetchKeyThrottled } = useThrottleFn(updateFetchKey, {\n    wait: 3000,\n    trailing: false,\n    leading: true,\n  });\n  const [resourceSlots] = useResourceSlots();\n  const [isPendingUpdate, _startTransition] = useTransition();\n  const updateFetchKeyUnderTransition = () => {\n    _startTransition(() => {\n      updateFetchKeyThrottled();\n    });\n  };\n  const { resource_presets } = useLazyLoadQuery<ResourcePresetSelectQuery>(\n    graphql`\n      query ResourcePresetSelectQuery {\n        resource_presets {\n          name\n          resource_slots\n          shared_memory\n        }\n      }\n    `,\n    {},\n    {\n      fetchKey: fetchKey,\n      fetchPolicy: fetchKey === 'first' ? 'store-and-network' : 'network-only',\n    },\n  );\n  // const resourcePresetInfo = await globalThis.backendaiclient.resourcePreset.check(param);\n  return (\n    <Select\n      loading={isPendingUpdate}\n      // options={_.map(resource_presets, (preset) => {\n      //   return {\n      //     value: preset?.name,\n      //     label: preset?.name,\n      //   };\n      // })}\n      options={[\n        {\n          value: 'custom',\n          label: (\n            <Flex gap={'xs'} style={{ display: 'inline-flex' }}>\n              <EditOutlined /> Custom\n            </Flex>\n          ),\n          // label: (\n          //   <Flex direction=\"row\" gap=\"xs\">\n          //     <Typography.Text strong>Custom</Typography.Text>\n          //     <Typography.Text type=\"secondary\">\n          //       Customize allocation amount\n          //     </Typography.Text>\n          //   </Flex>\n          // ),\n        },\n        {\n          // value: 'preset1',\n          label: 'Preset',\n          // @ts-ignore\n          options: _.map(resource_presets, (preset, index) => {\n            const slotsInfo: {\n              [key in string]: string;\n            } = JSON.parse(preset?.resource_slots);\n            return {\n              value: preset?.name,\n              label: (\n                <Flex direction=\"row\" justify=\"between\" gap={'xs'}>\n                  {preset?.name}\n                  <Flex\n                    direction=\"row\"\n                    gap={'xxs'}\n                    style={{\n                      color: 'black',\n                      opacity: index === 1 ? 0.5 : 1,\n                    }}\n                  >\n                    {_.map(\n                      _.omitBy(slotsInfo, (slot, key) =>\n                        // @ts-ignore\n                        _.isEmpty(resourceSlots[key]),\n                      ),\n                      (slot, key) => {\n                        return (\n                          <ResourceNumber\n                            key={key}\n                            // @ts-ignore\n                            type={key}\n                            value={slot}\n                            hideTooltip\n                          />\n                        );\n                      },\n                    )}\n                  </Flex>\n                </Flex>\n              ),\n              preset,\n              // disabled: index === 1,\n            };\n          }),\n        },\n      ]}\n      showSearch\n      {...selectProps}\n      onDropdownVisibleChange={(open) => {\n        if (open) {\n          console.log(open);\n          updateFetchKeyUnderTransition();\n        }\n      }}\n    ></Select>\n  );\n};\n\nexport default ResourcePresetSelect;\n","import {\n  addNumberWithUnits,\n  compareNumberWithUnits,\n  iSizeToSize,\n} from '../helper';\nimport { useCurrentProjectValue, useSuspendedBackendaiClient } from '../hooks';\nimport { useResourceSlots } from '../hooks/backendai';\nimport { useCurrentKeyPairResourcePolicyLazyLoadQuery } from '../hooks/hooksUsingRelay';\nimport { useResourceLimitAndRemaining } from '../hooks/useResourceLimitAndRemaining';\nimport DynamicUnitInputNumberWithSlider from './DynamicUnitInputNumberWithSlider';\nimport Flex from './Flex';\nimport { ImageEnvironmentFormInput } from './ImageEnvironmentSelectFormItems';\nimport InputNumberWithSlider from './InputNumberWithSlider';\nimport ResourceGroupSelect from './ResourceGroupSelect';\nimport { ACCELERATOR_UNIT_MAP } from './ResourceNumber';\nimport ResourcePresetSelect from './ResourcePresetSelect';\nimport { CaretDownOutlined } from '@ant-design/icons';\nimport {\n  Card,\n  Col,\n  Divider,\n  Form,\n  Radio,\n  Row,\n  Select,\n  Switch,\n  theme,\n} from 'antd';\nimport _ from 'lodash';\nimport React, { useEffect, useState, useTransition } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\n\nexport const AUTOMATIC_DEFAULT_SHMEM = '64m';\nexport const RESOURCE_ALLOCATION_INITIAL_FORM_VALUES = {\n  resource: {\n    cpu: 0,\n    mem: '0g',\n    shmem: '0g',\n    accelerator: 0,\n  },\n  num_of_sessions: 1,\n  cluster_mode: 'single-node',\n  cluster_size: 1,\n  enabledAutomaticShmem: true,\n};\n\nexport interface ResourceAllocationFormValue {\n  resource: {\n    cpu: number;\n    mem: string;\n    shmem: string;\n    accelerator: number;\n    acceleratorType: string;\n  };\n  resourceGroup: string;\n  num_of_sessions?: number;\n  cluster_mode: 'single-node' | 'multi-node';\n  cluster_size: number;\n  enabledAutomaticShmem: boolean;\n}\n\ntype MergedResourceAllocationFormValue = ResourceAllocationFormValue &\n  ImageEnvironmentFormInput;\n\ninterface ResourceAllocationFormItemsProps {\n  enableNumOfSessions?: boolean;\n  enableResourcePresets?: boolean;\n}\n\nconst ResourceAllocationFormItems: React.FC<\n  ResourceAllocationFormItemsProps\n> = ({ enableNumOfSessions, enableResourcePresets }) => {\n  const form = Form.useFormInstance<MergedResourceAllocationFormValue>();\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const baiClient = useSuspendedBackendaiClient();\n  const [resourceSlots] = useResourceSlots();\n  const acceleratorSlots = _.omit(resourceSlots, ['cpu', 'mem', 'shmem']);\n\n  const [{ keypair, keypairResourcePolicy }] =\n    useCurrentKeyPairResourcePolicyLazyLoadQuery();\n\n  const currentProject = useCurrentProjectValue();\n\n  // Form watch\n  // const currentResourceGroup = Form.useWatch('resourceGroup', {\n  //   form,\n  //   preserve: true,\n  // });\n\n  // use `useState` instead of `Form.useWatch` for handling `resourcePreset.check` pending state\n  const [currentResourceGroup, setCurrentResourceGroup] = useState<string>(\n    form.getFieldValue('resourceGroup'),\n  );\n  const [isPendingCheckResets, startCheckRestsTransition] = useTransition();\n  const currentImage = Form.useWatch(['environments', 'image'], {\n    form,\n    preserve: true,\n  });\n  const [{ currentImageMinM, remaining, resourceLimits }] =\n    useResourceLimitAndRemaining({\n      currentProjectName: currentProject.name,\n      currentResourceGroup: currentResourceGroup,\n      currentImage: currentImage,\n    });\n\n  const currentImageAcceleratorLimits = _.filter(\n    currentImage?.resource_limits,\n    (limit) =>\n      limit ? !_.includes(['cpu', 'mem', 'shmem'], limit.key) : false,\n  );\n\n  const sessionSliderLimitAndRemaining = {\n    min: 1,\n    max: _.min([\n      keypairResourcePolicy.max_concurrent_sessions,\n      3, //BackendAiResourceBroker.DEFAULT_CONCURRENT_SESSION_COUNT\n    ]) as number,\n    remaining:\n      (keypairResourcePolicy.max_concurrent_sessions || 3) -\n      (keypair.concurrency_used || 0),\n  };\n\n  useEffect(() => {\n    // when image changed, set value of resources to min value\n\n    form.setFieldsValue({\n      resource: {\n        cpu: resourceLimits.cpu?.min,\n        mem:\n          iSizeToSize(\n            (iSizeToSize(resourceLimits.shmem?.min, 'm')?.number || 0) +\n              (iSizeToSize(resourceLimits.mem?.min, 'm')?.number || 0) +\n              'm',\n            'g',\n          )?.number + 'g', //to prevent loosing precision\n      },\n    });\n\n    if (currentImageAcceleratorLimits.length > 0) {\n      if (\n        _.find(\n          currentImageAcceleratorLimits,\n          (limit) =>\n            limit?.key === form.getFieldValue(['resource', 'acceleratorType']),\n        )\n      ) {\n        // if current selected accelerator type is supported in the selected image,\n        form.setFieldValue(\n          ['resource', 'accelerator'],\n          resourceLimits.accelerators[\n            form.getFieldValue(['resource', 'acceleratorType'])\n          ]?.min,\n        );\n      } else {\n        // if current selected accelerator type is not supported in the selected image,\n        // change accelerator type to the first supported accelerator type.\n        const nextImageSelectorType: string | undefined | null = // NOTE:\n          // filter from resourceSlots since resourceSlots and supported image could be non-identical.\n          // resourceSlots returns \"all resources enable to allocate(including AI accelerator)\"\n          // imageAcceleratorLimit returns \"all resources that is supported in the selected image\"\n          _.filter(currentImageAcceleratorLimits, (acceleratorInfo: any) =>\n            _.keys(resourceSlots).includes(acceleratorInfo?.key),\n          )[0]?.key;\n\n        if (nextImageSelectorType) {\n          form.setFieldValue(\n            ['resource', 'accelerator'],\n            resourceLimits.accelerators[nextImageSelectorType]?.min,\n          );\n          form.setFieldValue(\n            ['resource', 'acceleratorType'],\n            nextImageSelectorType,\n          );\n        }\n      }\n    } else {\n      form.setFieldValue(['resource', 'accelerator'], 0);\n    }\n\n    form\n      .validateFields([\n        ['resource', 'cpu'],\n        ['resource', 'mem'],\n        ['resource', 'shmem'],\n        ['resource', 'accelerator'],\n        ['resource', 'acceleratorType'],\n      ])\n      .catch(() => {});\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentImage]);\n\n  const runShmemAutomationRule = (M_plus_S: string) => {\n    // if M+S > 4G, S can be 1G regard to current image's minimum mem(M)\n    if (\n      // M+S > 4G\n      compareNumberWithUnits(M_plus_S, '4g') >= 0 &&\n      // M+S > M+1G\n      compareNumberWithUnits(\n        M_plus_S,\n        addNumberWithUnits(currentImageMinM, '1g') || '0b',\n      ) >= 0 &&\n      // if 1G < AUTOMATIC_DEFAULT_SHMEM, no need to apply 1G rule\n      compareNumberWithUnits('1g', AUTOMATIC_DEFAULT_SHMEM) > 0\n    ) {\n      form.setFieldValue(['resource', 'shmem'], '1g');\n    } else {\n      form.setFieldValue(['resource', 'shmem'], AUTOMATIC_DEFAULT_SHMEM);\n    }\n  };\n\n  return (\n    <>\n      <Form.Item\n        name=\"resourceGroup\"\n        label={t('session.ResourceGroup')}\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <ResourceGroupSelect\n          autoSelectDefault\n          showSearch\n          loading={isPendingCheckResets}\n          onChange={(v) => {\n            startCheckRestsTransition(() => {\n              setCurrentResourceGroup(v);\n            });\n          }}\n        />\n      </Form.Item>\n      {enableResourcePresets ? (\n        <Form.Item\n          label={t('resourcePreset.ResourcePresets')}\n          name=\"allocationPreset\"\n          required\n          style={{ marginBottom: token.marginXS }}\n        >\n          <ResourcePresetSelect\n            onChange={(value, options) => {\n              const slots = _.pick(\n                JSON.parse(options?.preset?.resource_slots || '{}'),\n                _.keys(resourceSlots),\n              );\n              form.setFieldsValue({\n                resource: {\n                  ...slots,\n                  // transform to GB based on preset values\n                  mem: iSizeToSize((slots?.mem || 0) + 'b', 'g', 2)?.numberUnit,\n                  shmem: iSizeToSize(\n                    (options?.preset?.shared_memory || 0) + 'b',\n                    'g',\n                    2,\n                  )?.numberUnit,\n                },\n              });\n            }}\n          />\n        </Form.Item>\n      ) : null}\n      <Card\n        style={{\n          marginBottom: token.margin,\n        }}\n      >\n        <Form.Item\n          shouldUpdate={(prev, cur) =>\n            prev.allocationPreset !== cur.allocationPreset\n          }\n          noStyle\n        >\n          {({ getFieldValue }) => {\n            return (\n              // getFieldValue('allocationPreset') === 'custom' && (\n              <>\n                {resourceSlots?.cpu && (\n                  <Form.Item\n                    name={['resource', 'cpu']}\n                    // initialValue={0}\n                    label={t('session.launcher.CPU')}\n                    tooltip={{\n                      placement: 'right',\n                      title: <Trans i18nKey={'session.launcher.DescCPU'} />,\n                    }}\n                    required\n                    rules={[\n                      {\n                        required: true,\n                      },\n                      {\n                        type: 'number',\n                        min: resourceLimits.cpu?.min,\n                        // TODO: set message\n                      },\n                      {\n                        warningOnly:\n                          baiClient._config?.always_enqueue_compute_session,\n                        validator: async (rule, value: number) => {\n                          if (\n                            _.isNumber(remaining.cpu) &&\n                            value > remaining.cpu\n                          ) {\n                            return Promise.reject(\n                              baiClient._config?.always_enqueue_compute_session\n                                ? t(\n                                    'session.launcher.EnqueueComputeSessionWarning',\n                                  )\n                                : t(\n                                    'session.launcher.ErrorCanNotExceedRemaining',\n                                    {\n                                      amount: remaining.cpu,\n                                    },\n                                  ),\n                            );\n                          } else {\n                            return Promise.resolve();\n                          }\n                        },\n                      },\n                    ]}\n                  >\n                    <InputNumberWithSlider\n                      inputNumberProps={{\n                        addonAfter: t('session.launcher.Core'),\n                      }}\n                      sliderProps={{\n                        marks: {\n                          // remaining mark code should be located before max mark code to prevent overlapping when it is same value\n                          ...(remaining.cpu\n                            ? {\n                                [remaining.cpu]: {\n                                  label: <RemainingMark />,\n                                },\n                              }\n                            : {}),\n                          ...(resourceLimits.cpu?.min\n                            ? {\n                                [resourceLimits.cpu?.min]:\n                                  resourceLimits.cpu?.min,\n                              }\n                            : {}),\n                          ...(resourceLimits.cpu?.max\n                            ? {\n                                [resourceLimits.cpu?.max]: {\n                                  style: {\n                                    color: token.colorTextSecondary,\n                                  },\n                                  label: resourceLimits.cpu?.max,\n                                },\n                              }\n                            : {}),\n                        },\n                      }}\n                      min={resourceLimits.cpu?.min}\n                      max={resourceLimits.cpu?.max}\n                    />\n                  </Form.Item>\n                )}\n                {resourceSlots?.mem && (\n                  <Form.Item\n                    label={t('session.launcher.Memory')}\n                    tooltip={{\n                      placement: 'right',\n                      props: {\n                        onClick: (e: any) => e.preventDefault(),\n                      },\n                      title: (\n                        <Flex\n                          direction=\"column\"\n                          onClick={(e) => e.preventDefault()}\n                        >\n                          <Trans i18nKey={'session.launcher.DescMemory'} />\n                          {/* <Divider\n                            style={{\n                              margin: 0,\n                              backgroundColor: token.colorBorderSecondary,\n                            }}\n                          />\n                         \n                          <Trans\n                            i18nKey={'session.launcher.DescSharedMemory'}\n                          /> */}\n                        </Flex>\n                      ),\n                    }}\n                    required\n                  >\n                    <Form.Item\n                      noStyle\n                      shouldUpdate={(prev, next) =>\n                        prev.resource.shmem !== next.resource.shmem\n                      }\n                    >\n                      {() => {\n                        return (\n                          <Form.Item\n                            name={['resource', 'mem']}\n                            noStyle\n                            rules={[\n                              {\n                                required: true,\n                              },\n                              {\n                                // TODO: min of mem should be shmem + image's mem limit??\n                                validator: async (rule, value: string) => {\n                                  // const memMinPlusShmem =\n                                  //   addNumberWithUnits(\n                                  //     resourceLimits.mem?.min,\n                                  //     form.getFieldValue(['resource', 'shmem']),\n                                  //   ) || '0b';\n\n                                  if (\n                                    !_.isElement(value) &&\n                                    resourceLimits.mem?.min &&\n                                    compareNumberWithUnits(\n                                      value,\n                                      resourceLimits.mem?.min || '0g',\n                                    ) < 0\n                                  ) {\n                                    return Promise.reject(\n                                      t('session.launcher.MinMemory', {\n                                        size: _.toUpper(\n                                          resourceLimits.mem?.min || '0g',\n                                        ),\n                                      }),\n                                    );\n                                  } else {\n                                    return Promise.resolve();\n                                  }\n                                },\n                              },\n                              {\n                                warningOnly:\n                                  baiClient._config\n                                    ?.always_enqueue_compute_session,\n                                validator: async (rule, value: string) => {\n                                  if (\n                                    !_.isElement(value) &&\n                                    resourceLimits.mem &&\n                                    compareNumberWithUnits(\n                                      value,\n                                      remaining.mem + 'b',\n                                    ) > 0\n                                  ) {\n                                    return Promise.reject(\n                                      baiClient._config\n                                        ?.always_enqueue_compute_session\n                                        ? t(\n                                            'session.launcher.EnqueueComputeSessionWarning',\n                                          )\n                                        : t(\n                                            'session.launcher.ErrorCanNotExceedRemaining',\n                                            {\n                                              amount:\n                                                iSizeToSize(\n                                                  remaining.mem + 'b',\n                                                  'g',\n                                                  3,\n                                                )?.numberUnit + 'iB',\n                                            },\n                                          ),\n                                    );\n                                  } else {\n                                    return Promise.resolve();\n                                  }\n                                },\n                              },\n                            ]}\n                          >\n                            <DynamicUnitInputNumberWithSlider\n                              max={resourceLimits.mem?.max}\n                              // min=\"256m\"\n                              // min={'0g'}\n                              // min={addNumberWithUnits(\n                              //   resourceLimits.mem?.min,\n                              //   form.getFieldValue(['resource', 'shmem']) || '0g',\n                              // )}\n                              min={resourceLimits.mem?.min}\n                              // warn={\n                              //   checkPresetInfo?.scaling_group_remaining.mem ===\n                              //   undefined\n                              //     ? undefined\n                              //     : checkPresetInfo?.scaling_group_remaining.mem + 'g'\n                              // }\n                              addonBefore={'MEM'}\n                              extraMarks={{\n                                // ...(checkPresetInfo?.scaling_group_remaining.mem\n                                //   ? {\n                                //       // @ts-ignore\n                                //       [iSizeToSize(\n                                //         checkPresetInfo?.scaling_group_remaining\n                                //           .mem,\n                                //         'g',\n                                //         3,\n                                //       ).numberFixed]: {\n                                //         label: '-',\n                                //       },\n                                //     }\n                                //   : {}),\n                                // ...(form.getFieldValue(['resource', 'shmem'])\n                                //   ? {\n                                //       [iSizeToSize(\n                                //         form.getFieldValue([\n                                //           'resource',\n                                //           'shmem',\n                                //         ]),\n                                //         'g',\n                                //       )?.number || 0]: (\n                                //         <Flex\n                                //           style={{\n                                //             height: 8,\n                                //             width: 8,\n                                //             borderRadius: 4,\n                                //             backgroundColor: token.colorInfo,\n                                //             position: 'absolute',\n                                //             top: -10,\n                                //             transform: 'translateX(-50%)',\n                                //             opacity: 0.5,\n                                //             pointerEvents: 'none',\n                                //           }}\n                                //         ></Flex>\n                                //       ),\n                                //     }\n                                //   : undefined),\n                                ...(remaining.mem\n                                  ? {\n                                      //@ts-ignore\n                                      [iSizeToSize(remaining.mem + 'b', 'g', 3)\n                                        ?.numberFixed]: {\n                                        label: <RemainingMark />,\n                                      },\n                                    }\n                                  : {}),\n                              }}\n                              onChange={(M_plus_S) => {\n                                if (\n                                  !M_plus_S ||\n                                  !form.getFieldValue('enabledAutomaticShmem')\n                                )\n                                  return;\n                                runShmemAutomationRule(M_plus_S);\n                              }}\n                            />\n                          </Form.Item>\n                        );\n                      }}\n                    </Form.Item>\n\n                    <Flex direction=\"column\" gap={'xxs'} align=\"start\">\n                      <Flex direction=\"row\" gap={'xs'}>\n                        {t('session.launcher.EnableAutomaticShmem')}{' '}\n                        <Form.Item\n                          noStyle\n                          name={'enabledAutomaticShmem'}\n                          valuePropName=\"checked\"\n                        >\n                          <Switch\n                            size=\"small\"\n                            onChange={(checked) => {\n                              if (checked)\n                                runShmemAutomationRule(\n                                  form.getFieldValue(['resource', 'mem']) ||\n                                    '0g',\n                                );\n                            }}\n                          />\n                        </Form.Item>\n                      </Flex>\n                      <Form.Item\n                        noStyle\n                        shouldUpdate={(prev, next) =>\n                          prev.resource.mem !== next.resource.mem ||\n                          prev.enabledAutomaticShmem !==\n                            next.enabledAutomaticShmem\n                        }\n                      >\n                        {() => {\n                          return (\n                            <Form.Item\n                              noStyle\n                              name={['resource', 'shmem']}\n                              // initialValue={'0g'}\n                              // label={t('session.launcher.SharedMemory')}\n                              hidden={form.getFieldValue(\n                                'enabledAutomaticShmem',\n                              )}\n                              tooltip={\n                                <Trans\n                                  i18nKey={'session.launcher.DescSharedMemory'}\n                                />\n                              }\n                              dependencies={[['resource', 'mem']]}\n                              rules={[\n                                {\n                                  required: true,\n                                },\n                                {},\n                                {\n                                  validator: async (rule, value: string) => {\n                                    if (\n                                      _.isEmpty(\n                                        getFieldValue('resource')?.mem,\n                                      ) ||\n                                      _.isEmpty(value) ||\n                                      compareNumberWithUnits(\n                                        getFieldValue('resource')?.mem,\n                                        value,\n                                      ) >= 0\n                                    ) {\n                                      return Promise.resolve();\n                                    } else {\n                                      throw t(\n                                        'resourcePreset.SHMEMShouldBeSmallerThanMemory',\n                                      );\n                                    }\n                                  },\n                                },\n                              ]}\n                            >\n                              <DynamicUnitInputNumberWithSlider\n                                // shmem max is mem max\n                                // min={resourceLimits.shmem?.min}\n                                min={resourceLimits.shmem?.min}\n                                // max={resourceLimits.mem?.max || '0g'}\n                                addonBefore={'SHM'}\n                                max={\n                                  form.getFieldValue(['resource', 'mem']) ||\n                                  '0g'\n                                }\n                                hideSlider\n                              />\n                            </Form.Item>\n                          );\n                        }}\n                      </Form.Item>\n                    </Flex>\n                  </Form.Item>\n                )}\n                <Form.Item\n                  noStyle\n                  shouldUpdate={(prev, next) => {\n                    return (\n                      prev.resource?.acceleratorType !==\n                        next.resource?.acceleratorType ||\n                      // ref: https://github.com/lablup/backend.ai-webui/issues/868\n                      // change gpu step to 1 when cluster_size > 1\n                      prev.cluster_size !== next.cluster_size\n                    );\n                  }}\n                >\n                  {({ getFieldValue }) => {\n                    const currentAcceleratorType = getFieldValue([\n                      'resource',\n                      'acceleratorType',\n                    ]);\n                    return (\n                      <Form.Item\n                        name={['resource', 'accelerator']}\n                        label={t(`session.launcher.AIAccelerator`)}\n                        tooltip={{\n                          placement: 'right',\n                          title: (\n                            <Trans\n                              i18nKey={'session.launcher.DescAIAccelerator'}\n                            />\n                          ),\n                        }}\n                        rules={[\n                          {\n                            required: currentImageAcceleratorLimits.length > 0,\n                          },\n                          {\n                            type: 'number',\n                            min:\n                              resourceLimits.accelerators[\n                                currentAcceleratorType\n                              ]?.min || 0,\n                          },\n                          {\n                            warningOnly:\n                              baiClient._config?.always_enqueue_compute_session,\n                            validator: async (rule: any, value: number) => {\n                              if (\n                                _.isNumber(\n                                  remaining.accelerators[\n                                    currentAcceleratorType\n                                  ],\n                                ) &&\n                                value >\n                                  remaining.accelerators[currentAcceleratorType]\n                              ) {\n                                return Promise.reject(\n                                  baiClient._config\n                                    ?.always_enqueue_compute_session\n                                    ? t(\n                                        'session.launcher.EnqueueComputeSessionWarning',\n                                      )\n                                    : t(\n                                        'session.launcher.ErrorCanNotExceedRemaining',\n                                        {\n                                          amount:\n                                            remaining.accelerators[\n                                              currentAcceleratorType\n                                            ],\n                                        },\n                                      ),\n                                );\n                              } else {\n                                return Promise.resolve();\n                              }\n                            },\n                          },\n                        ]}\n                      >\n                        <InputNumberWithSlider\n                          sliderProps={{\n                            marks: {\n                              0: 0,\n                              // remaining mark code should be located before max mark code to prevent overlapping when it is same value\n                              ...(remaining.accelerators[currentAcceleratorType]\n                                ? {\n                                    [remaining.accelerators[\n                                      currentAcceleratorType\n                                    ]]: {\n                                      label: <RemainingMark />,\n                                    },\n                                  }\n                                : {}),\n                              ...(_.isNumber(\n                                resourceLimits.accelerators[\n                                  currentAcceleratorType\n                                ]?.max,\n                              )\n                                ? {\n                                    // @ts-ignore\n                                    [resourceLimits.accelerators[\n                                      currentAcceleratorType\n                                    ]?.max]:\n                                      resourceLimits.accelerators[\n                                        currentAcceleratorType\n                                      ]?.max,\n                                  }\n                                : {}),\n                            },\n                            tooltip: {\n                              formatter: (value = 0) => {\n                                return `${value} ${ACCELERATOR_UNIT_MAP[currentAcceleratorType]}`;\n                              },\n                              open:\n                                currentImageAcceleratorLimits.length <= 0\n                                  ? false\n                                  : undefined,\n                            },\n                          }}\n                          disabled={\n                            currentImageAcceleratorLimits.length === 0 &&\n                            _.isEmpty(\n                              form.getFieldValue(['environments', 'manual']),\n                            )\n                          }\n                          min={0}\n                          max={\n                            resourceLimits.accelerators[currentAcceleratorType]\n                              ?.max\n                          }\n                          step={\n                            _.endsWith(currentAcceleratorType, 'shares') &&\n                            form.getFieldValue('cluster_size') < 2\n                              ? 0.1\n                              : 1\n                          }\n                          inputNumberProps={{\n                            addonAfter: (\n                              <Form.Item\n                                noStyle\n                                name={['resource', 'acceleratorType']}\n                                initialValue={_.keys(acceleratorSlots)[0]}\n                              >\n                                <Select\n                                  tabIndex={-1}\n                                  disabled={\n                                    currentImageAcceleratorLimits.length ===\n                                      0 &&\n                                    _.isEmpty(\n                                      form.getFieldValue([\n                                        'environments',\n                                        'manual',\n                                      ]),\n                                    )\n                                  }\n                                  suffixIcon={\n                                    _.size(acceleratorSlots) > 1\n                                      ? undefined\n                                      : null\n                                  }\n                                  // open={\n                                  //   _.size(acceleratorSlots) > 1\n                                  //     ? undefined\n                                  //     : false\n                                  // }\n                                  popupMatchSelectWidth={false}\n                                  options={_.map(\n                                    acceleratorSlots,\n                                    (value, name) => {\n                                      return {\n                                        value: name,\n                                        label:\n                                          ACCELERATOR_UNIT_MAP[name] || 'UNIT',\n                                        disabled:\n                                          currentImageAcceleratorLimits.length >\n                                            0 &&\n                                          !_.find(\n                                            currentImageAcceleratorLimits,\n                                            (limit) => limit?.key === name,\n                                          ),\n                                      };\n                                    },\n                                  )}\n                                />\n                              </Form.Item>\n                            ),\n                          }}\n                        />\n                      </Form.Item>\n                    );\n                  }}\n                </Form.Item>\n              </>\n            );\n          }}\n        </Form.Item>\n      </Card>\n      {enableNumOfSessions ? (\n        <Card\n          style={{\n            marginBottom: token.margin,\n          }}\n        >\n          <Form.Item\n            noStyle\n            shouldUpdate={(prev, next) =>\n              prev.cluster_size !== next.cluster_size\n            }\n          >\n            {() => {\n              return (\n                <Form.Item\n                  name={['num_of_sessions']}\n                  label={t('webui.menu.Sessions')}\n                  tooltip={<Trans i18nKey={'session.launcher.DescSession'} />}\n                  required\n                  rules={[\n                    {\n                      required: true,\n                    },\n                    {\n                      warningOnly:\n                        baiClient._config?.always_enqueue_compute_session,\n                      validator: async (rule, value: number) => {\n                        if (\n                          sessionSliderLimitAndRemaining &&\n                          value > sessionSliderLimitAndRemaining.remaining\n                        ) {\n                          return Promise.reject(\n                            baiClient._config?.always_enqueue_compute_session\n                              ? t(\n                                  'session.launcher.EnqueueComputeSessionWarning',\n                                )\n                              : t(\n                                  'session.launcher.ErrorCanNotExceedRemaining',\n                                  {\n                                    amount:\n                                      sessionSliderLimitAndRemaining.remaining,\n                                  },\n                                ),\n                          );\n                        } else {\n                          return Promise.resolve();\n                        }\n                      },\n                    },\n                  ]}\n                >\n                  <InputNumberWithSlider\n                    inputNumberProps={{\n                      addonAfter: '#',\n                    }}\n                    disabled={form.getFieldValue('cluster_size') > 1}\n                    sliderProps={{\n                      marks: {\n                        [sessionSliderLimitAndRemaining?.min]:\n                          sessionSliderLimitAndRemaining?.min,\n                        // remaining mark code should be located before max mark code to prevent overlapping when it is same value\n                        ...(sessionSliderLimitAndRemaining?.remaining\n                          ? {\n                              [sessionSliderLimitAndRemaining?.remaining]: {\n                                label: <RemainingMark />,\n                              },\n                            }\n                          : {}),\n                        [sessionSliderLimitAndRemaining?.max]:\n                          sessionSliderLimitAndRemaining?.max,\n                      },\n                    }}\n                    min={sessionSliderLimitAndRemaining?.min}\n                    max={sessionSliderLimitAndRemaining?.max}\n                  />\n                </Form.Item>\n              );\n            }}\n          </Form.Item>\n        </Card>\n      ) : null}\n      {/* TODO: Support cluster mode */}\n      {baiClient.supports('multi-container') && (\n        // {false && (\n        <Form.Item\n          label={t('session.launcher.ClusterMode')}\n          tooltip={\n            <Flex direction=\"column\" align=\"start\">\n              {t('session.launcher.SingleNode')}\n              <Trans i18nKey={'session.launcher.DescSingleNode'} />\n              <Divider style={{ backgroundColor: token.colorBorder }} />\n              {t('session.launcher.MultiNode')}\n              <Trans i18nKey={'session.launcher.DescMultiNode'} />\n            </Flex>\n          }\n          required\n        >\n          <Card\n            style={{\n              marginBottom: token.margin,\n            }}\n          >\n            <Row gutter={token.marginMD}>\n              <Col xs={24}>\n                {/* <Col xs={24} lg={12}> */}\n                <Form.Item name={'cluster_mode'} required>\n                  <Radio.Group\n                    onChange={(e) => {\n                      form.validateFields().catch(() => {});\n                    }}\n                  >\n                    <Radio.Button value=\"single-node\">\n                      {t('session.launcher.SingleNode')}\n                    </Radio.Button>\n                    <Radio.Button value=\"multi-node\">\n                      {t('session.launcher.MultiNode')}\n                    </Radio.Button>\n                  </Radio.Group>\n                </Form.Item>\n              </Col>\n              <Col xs={24}>\n                <Form.Item\n                  noStyle\n                  shouldUpdate={(prev, next) =>\n                    prev.cluster_mode !== next.cluster_mode\n                  }\n                >\n                  {() => {\n                    const derivedClusterSizeMaxLimit = _.min([\n                      resourceLimits.cpu?.max,\n                      keypairResourcePolicy.max_containers_per_session,\n                    ]);\n                    const clusterUnit =\n                      form.getFieldValue('cluster_mode') === 'single-node'\n                        ? t('session.launcher.Container')\n                        : t('session.launcher.Node');\n                    return (\n                      <Form.Item\n                        name={'cluster_size'}\n                        label={t('session.launcher.ClusterSize')}\n                        required\n                        rules={[\n                          {\n                            warningOnly:\n                              baiClient._config?.always_enqueue_compute_session,\n                            validator: async (rule, value: number) => {\n                              const minCPU = _.min([\n                                remaining.cpu,\n                                keypairResourcePolicy.max_containers_per_session,\n                              ]);\n                              if (_.isNumber(minCPU) && value > minCPU) {\n                                return Promise.reject(\n                                  t(\n                                    'session.launcher.EnqueueComputeSessionWarning',\n                                  ),\n                                );\n                              } else {\n                                return Promise.resolve();\n                              }\n                            },\n                          },\n                        ]}\n                      >\n                        <InputNumberWithSlider\n                          min={1}\n                          // TODO: max cluster size\n                          max={\n                            _.isNumber(derivedClusterSizeMaxLimit)\n                              ? derivedClusterSizeMaxLimit\n                              : undefined\n                          }\n                          disabled={derivedClusterSizeMaxLimit === 1}\n                          sliderProps={{\n                            marks: {\n                              1: '1',\n                              // remaining mark code should be located before max mark code to prevent overlapping when it is same value\n                              ...(remaining.cpu\n                                ? {\n                                    [remaining.cpu]: {\n                                      label: <RemainingMark />,\n                                    },\n                                  }\n                                : {}),\n                              ...(_.isNumber(derivedClusterSizeMaxLimit)\n                                ? {\n                                    [derivedClusterSizeMaxLimit]:\n                                      derivedClusterSizeMaxLimit,\n                                  }\n                                : {}),\n                            },\n                            tooltip: {\n                              formatter: (value = 0) => {\n                                return `${value} ${clusterUnit}`;\n                              },\n                            },\n                          }}\n                          inputNumberProps={{\n                            addonAfter: clusterUnit,\n                          }}\n                          onChange={(value) => {\n                            if (value > 1) {\n                              form.setFieldValue('num_of_sessions', 1);\n                            }\n                          }}\n                        />\n                      </Form.Item>\n                    );\n                  }}\n                </Form.Item>\n              </Col>\n            </Row>\n          </Card>\n        </Form.Item>\n      )}\n    </>\n  );\n};\n\nconst RemainingMark: React.FC<{ title?: string }> = () => {\n  const { token } = theme.useToken();\n  return (\n    <Flex\n      style={{\n        position: 'absolute',\n        top: -24,\n        transform: 'translateX(-50%)',\n        color: token.colorSuccess,\n        opacity: 0.5,\n      }}\n    >\n      <CaretDownOutlined />\n    </Flex>\n  );\n};\n\nconst MemoizedResourceAllocationFormItems = React.memo(\n  ResourceAllocationFormItems,\n);\n\nexport default MemoizedResourceAllocationFormItems;\n","/**\n * @generated SignedSource<<7a44bb06b700bc6990b9f284967ae6c0>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type ImageEnvironmentSelectFormItemsQuery$variables = {\n  installed?: boolean | null;\n};\nexport type ImageEnvironmentSelectFormItemsQuery$data = {\n  readonly images: ReadonlyArray<{\n    readonly architecture: string | null;\n    readonly digest: string | null;\n    readonly humanized_name: string | null;\n    readonly installed: boolean | null;\n    readonly labels: ReadonlyArray<{\n      readonly key: string | null;\n      readonly value: string | null;\n    } | null> | null;\n    readonly name: string | null;\n    readonly registry: string | null;\n    readonly resource_limits: ReadonlyArray<{\n      readonly key: string | null;\n      readonly max: string | null;\n      readonly min: string | null;\n    } | null> | null;\n    readonly tag: string | null;\n  } | null> | null;\n};\nexport type ImageEnvironmentSelectFormItemsQuery = {\n  response: ImageEnvironmentSelectFormItemsQuery$data;\n  variables: ImageEnvironmentSelectFormItemsQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"installed\"\n  }\n],\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"key\",\n  \"storageKey\": null\n},\nv2 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"is_installed\",\n        \"variableName\": \"installed\"\n      }\n    ],\n    \"concreteType\": \"Image\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"images\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"name\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"humanized_name\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"tag\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"registry\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"architecture\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"digest\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"installed\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"ResourceLimit\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"resource_limits\",\n        \"plural\": true,\n        \"selections\": [\n          (v1/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"min\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"max\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"KVPair\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"labels\",\n        \"plural\": true,\n        \"selections\": [\n          (v1/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"value\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ImageEnvironmentSelectFormItemsQuery\",\n    \"selections\": (v2/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ImageEnvironmentSelectFormItemsQuery\",\n    \"selections\": (v2/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"ea71f4a3948d4742dd6bb11ef80a8300\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ImageEnvironmentSelectFormItemsQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ImageEnvironmentSelectFormItemsQuery(\\n  $installed: Boolean\\n) {\\n  images(is_installed: $installed) {\\n    name\\n    humanized_name\\n    tag\\n    registry\\n    architecture\\n    digest\\n    installed\\n    resource_limits {\\n      key\\n      min\\n      max\\n    }\\n    labels {\\n      key\\n      value\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"33367bd6e1532b42b61629ef9d3dc46b\";\n\nexport default node;\n","/**\n * @generated SignedSource<<f8c3ae59478b8ffd874be16c33231c44>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type ResourcePresetSelectQuery$variables = {};\nexport type ResourcePresetSelectQuery$data = {\n  readonly resource_presets: ReadonlyArray<{\n    readonly name: string | null;\n    readonly resource_slots: any | null;\n    readonly shared_memory: any | null;\n  } | null> | null;\n};\nexport type ResourcePresetSelectQuery = {\n  response: ResourcePresetSelectQuery$data;\n  variables: ResourcePresetSelectQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"concreteType\": \"ResourcePreset\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"resource_presets\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"name\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"resource_slots\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"shared_memory\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ResourcePresetSelectQuery\",\n    \"selections\": (v0/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"ResourcePresetSelectQuery\",\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"bd89430b9924d926a1b8e91191746b4f\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ResourcePresetSelectQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ResourcePresetSelectQuery {\\n  resource_presets {\\n    name\\n    resource_slots\\n    shared_memory\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"9841642e96d89476c2848bfb093ed9c5\";\n\nexport default node;\n","/**\n * @generated SignedSource<<2d83f26a36e2c0f0fa14a758947b24ca>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type hooksUsingRelay_KeyPairQuery$variables = {\n  accessKey: string;\n};\nexport type hooksUsingRelay_KeyPairQuery$data = {\n  readonly keypair: {\n    readonly concurrency_used: number | null;\n    readonly id: string | null;\n    readonly resource_policy: string | null;\n  } | null;\n};\nexport type hooksUsingRelay_KeyPairQuery = {\n  response: hooksUsingRelay_KeyPairQuery$data;\n  variables: hooksUsingRelay_KeyPairQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"accessKey\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"access_key\",\n        \"variableName\": \"accessKey\"\n      }\n    ],\n    \"concreteType\": \"KeyPair\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"keypair\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"id\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"resource_policy\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"concurrency_used\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"hooksUsingRelay_KeyPairQuery\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"hooksUsingRelay_KeyPairQuery\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"1f8fc324e9907111de581f5cd2dc3640\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"hooksUsingRelay_KeyPairQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query hooksUsingRelay_KeyPairQuery(\\n  $accessKey: String!\\n) {\\n  keypair(access_key: $accessKey) {\\n    id\\n    resource_policy\\n    concurrency_used\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"d8f5c91f0fc46a3366f57566ab688d81\";\n\nexport default node;\n","/**\n * @generated SignedSource<<35444e48a9d4ab1fa713e5dd086d175e>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type hooksUsingRelay_KeyPairResourcePolicyQuery$variables = {\n  name: string;\n};\nexport type hooksUsingRelay_KeyPairResourcePolicyQuery$data = {\n  readonly keypair_resource_policy: {\n    readonly max_concurrent_sessions: number | null;\n    readonly max_containers_per_session: number | null;\n  } | null;\n};\nexport type hooksUsingRelay_KeyPairResourcePolicyQuery = {\n  response: hooksUsingRelay_KeyPairResourcePolicyQuery$data;\n  variables: hooksUsingRelay_KeyPairResourcePolicyQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"name\"\n      }\n    ],\n    \"concreteType\": \"KeyPairResourcePolicy\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"keypair_resource_policy\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"max_containers_per_session\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"max_concurrent_sessions\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"hooksUsingRelay_KeyPairResourcePolicyQuery\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"hooksUsingRelay_KeyPairResourcePolicyQuery\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"ad7039c1935637fe3f3841f0ea8bf347\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"hooksUsingRelay_KeyPairResourcePolicyQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query hooksUsingRelay_KeyPairResourcePolicyQuery(\\n  $name: String!\\n) {\\n  keypair_resource_policy(name: $name) {\\n    max_containers_per_session\\n    max_concurrent_sessions\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"f3f7364c63aefe9b03111b584c48c103\";\n\nexport default node;\n","import { useSuspendedBackendaiClient, useUpdatableState } from '.';\nimport { maskString, useBaiSignedRequestWithPromise } from '../helper';\nimport { useTanMutation, useTanQuery } from './reactQueryAlias';\nimport _ from 'lodash';\nimport { useEffect, useState } from 'react';\n\nexport interface QuotaScope {\n  id: string;\n  quota_scope_id: string;\n  storage_host_name: string;\n  details: {\n    hard_limit_bytes: number | null;\n    usage_bytes: number | null;\n    usage_count: number | null;\n  };\n}\n\nexport const useResourceSlots = () => {\n  const [key, checkUpdate] = useUpdatableState('first');\n  const baiClient = useSuspendedBackendaiClient();\n  const { data: resourceSlots } = useTanQuery<{\n    cpu?: string;\n    mem?: string;\n    'cuda.shares'?: string;\n    'cuda.device'?: string;\n    'rocm.device'?: string;\n    'tpu.device'?: string;\n    'ipu.device'?: string;\n    'atom.device'?: string;\n    'warboy.device'?: string;\n  }>({\n    queryKey: ['useResourceSlots', key],\n    queryFn: () => {\n      return baiClient.get_resource_slots();\n    },\n    staleTime: 0,\n  });\n  return [\n    resourceSlots,\n    {\n      refresh: () => checkUpdate(),\n    },\n  ] as const;\n};\n\nexport const useResourceSlotsByResourceGroup = (name?: string) => {\n  const [key, checkUpdate] = useUpdatableState('first');\n  const baiRequestWithPromise = useBaiSignedRequestWithPromise();\n  const { data: resourceSlots } = useTanQuery<{\n    cpu: string;\n    mem: string;\n    'cuda.shares': string;\n    'cuda.device': string;\n    'rocm.device': string;\n    'ipu.device': string;\n    'atom.device': string;\n    'warboy.device': string;\n    [key: string]: string;\n  }>({\n    queryKey: ['useResourceSlots', name, key],\n    queryFn: () => {\n      // return baiClient.get_resource_slots();\n      if (_.isEmpty(name)) {\n        return;\n      } else {\n        return baiRequestWithPromise({\n          method: 'GET',\n          url: `/config/resource-slots/details?sgroup=${name}`,\n        });\n      }\n    },\n    staleTime: 0,\n  });\n  return [\n    resourceSlots,\n    {\n      refresh: () => checkUpdate(),\n    },\n  ] as const;\n};\n\ninterface UserInfo {\n  full_name: string;\n  email: string;\n}\n\ntype mutationOptions<T> = {\n  onSuccess?: (value: T) => void;\n  onError?: (error: any) => void;\n};\n\nexport const useCurrentUserInfo = () => {\n  const baiClient = useSuspendedBackendaiClient();\n\n  const [userInfo, _setUserInfo] = useState<UserInfo>({\n    full_name: baiClient.full_name,\n    email: baiClient.email,\n  });\n\n  const getUsername = () => {\n    let name: string =\n      _.trim(userInfo.full_name).length > 0\n        ? userInfo.full_name\n        : userInfo.email;\n    // mask username only when the configuration is enabled\n    if (baiClient._config.maskUserInfo) {\n      const maskStartIdx = 2;\n      const emailPattern =\n        /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      const isEmail: boolean = emailPattern.test(name);\n      const maskLength = isEmail\n        ? name.split('@')[0].length - maskStartIdx\n        : name.length - maskStartIdx;\n      name = maskString(name, '*', maskStartIdx, maskLength);\n    }\n    return name;\n  };\n\n  useEffect(() => {\n    const handler = (e: any) => {\n      if (baiClient.supports('change-user-name')) {\n        const input = e.detail;\n        _setUserInfo((v) => ({\n          ...v,\n          full_name: input,\n        }));\n      }\n    };\n    document.addEventListener('current-user-info-changed', handler);\n    return () => {\n      document.removeEventListener('current-user-info-changed', handler);\n    };\n  }, [baiClient]);\n\n  const mutationToUpdateUserFullName = useTanMutation({\n    mutationFn: (values: { email: string; full_name: string }) => {\n      return baiClient.update_full_name(values.email, values.full_name);\n    },\n  });\n  const mutationToUpdateUserPassword = useTanMutation({\n    mutationFn: (values: {\n      old_password: string;\n      new_password: string;\n      new_password2: string;\n    }) => {\n      return baiClient.update_password(\n        values.old_password,\n        values.new_password,\n        values.new_password2,\n      );\n    },\n  });\n\n  return [\n    {\n      ...userInfo,\n      username: getUsername(),\n      isPendingMutation:\n        mutationToUpdateUserFullName.isLoading ||\n        mutationToUpdateUserPassword.isLoading,\n    },\n    {\n      updateFullName: (\n        newFullName: string,\n        options?: mutationOptions<string>,\n      ) => {\n        mutationToUpdateUserFullName.mutate(\n          {\n            full_name: newFullName,\n            email: baiClient.email,\n          },\n          {\n            onSuccess: () => {\n              options?.onSuccess && options.onSuccess(newFullName);\n              document.dispatchEvent(\n                new CustomEvent('current-user-info-changed', {\n                  detail: newFullName,\n                }),\n              );\n              _setUserInfo((v) => ({\n                ...v,\n                full_name: newFullName,\n              }));\n            },\n            onError: (error: any) => {\n              options?.onError && options.onError(error);\n            },\n          },\n        );\n      },\n      updatePassword: (\n        params: {\n          old_password: string;\n          new_password: string;\n          new_password2: string;\n        },\n        options?: mutationOptions<undefined>,\n      ) => {\n        mutationToUpdateUserPassword.mutate(params, {\n          onSuccess: () => {\n            options?.onSuccess && options.onSuccess(undefined);\n          },\n          onError: (error: any) => {\n            options?.onError && options.onError(error);\n          },\n        });\n      },\n    },\n  ] as const;\n};\n","import { useLocalStorageState } from 'ahooks';\nimport { useEffect } from 'react';\n\nexport const useLocalStorageGlobalState = <T extends unknown>(\n  key: string,\n  defaultValue: T,\n) => {\n  const [storageValue, setStorageValue] = useLocalStorageState<T>(key, {\n    defaultValue: defaultValue,\n  });\n  const eventName = 'useLocalStorageGlobalState:' + key;\n\n  useEffect(() => {\n    const handler = (event: any) => {\n      setStorageValue(event.detail);\n    };\n    document.addEventListener(eventName, handler);\n    return () => document.removeEventListener(eventName, handler);\n  }, [setStorageValue, eventName]);\n\n  return [\n    storageValue,\n    (value: T) => {\n      document.dispatchEvent(\n        new CustomEvent(eventName, {\n          detail: value,\n        }),\n      );\n    },\n  ] as const;\n};\n","import { useLocalStorageGlobalState } from './useLocalStorageGlobalState';\nimport { useEffect } from 'react';\n\ntype themeModeValue = 'system' | 'dark' | 'light';\n\nexport const useThemeMode = () => {\n  const [themeMode, setThemeMode] = useLocalStorageGlobalState<themeModeValue>(\n    'backendaiwebui.settings.themeMode',\n    'system',\n  );\n  // TODO: remove this when all components are ready\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [isDarkMode, setIsDarkMode] = useLocalStorageGlobalState<boolean>(\n    'backendaiwebui.settings.isDarkMode',\n    window.matchMedia('(prefers-color-scheme: dark)').matches,\n  );\n\n  useEffect(() => {\n    if (themeMode === 'system') {\n      const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n      setIsDarkMode(mediaQuery.matches);\n      const handler = (event: any) => {\n        setIsDarkMode(event.matches);\n      };\n      mediaQuery.addEventListener('change', handler);\n      return () => mediaQuery.removeEventListener('change', handler);\n    } else {\n      if (themeMode === 'dark') {\n        setIsDarkMode(true);\n      } else {\n        setIsDarkMode(false);\n      }\n    }\n  }, [themeMode, setIsDarkMode]);\n\n  return {\n    themeMode,\n    isDarkMode: false, //TODO: use isDarkMode when all components are ready\n    setThemeMode: (value: themeModeValue) => {\n      setThemeMode(value);\n    },\n  };\n};\n"],"names":["_ref","objectValues","_ref$values","values","length","React","map","value","label","color","_jsx","Flex","direction","children","_","objValue","idx","Tag","style","undefined","margin","marginRight","getImageFullName","image","concat","registry","name","tag","architecture","filter","showPrivate","form","Form","useFormInstance","environments","useWatch","preserve","baiClient","useSuspendedBackendaiClient","_useState","useState","_useState2","_slicedToArray","environmentSearch","setEnvironmentSearch","_useState3","_useState4","versionSearch","setVersionSearch","t","useTranslation","_useBackendAIImageMet","useBackendAIImageMetaData","_useBackendAIImageMet2","metadata","getImageMeta","token","theme","useToken","isDarkMode","useThemeMode","envSelectRef","useRef","versionSelectRef","images","useLazyLoadQuery","_ImageEnvironmentSelectFormItemsQuery","require","installed","fetchPolicy","useEffect","_form$getFieldValue","_imageGroups$","_imageGroups$$environ","_nextEnvironmentGroup","manual","nextEnvironmentGroup","nextEnvironmentName","getFieldValue","environment","imageGroups","environmentGroups","environmentName","group","_form$getFieldValue2","version","_nextEnvironmentGroup2","nextNewImage","setFieldsValue","useMemo","labels","_label$value","key","split","includes","isPrivateImage","groupBy","_metadata$imageInfo$g","imageInfo","groupName","_environmentName$spli","_metadata$imageInfo$i","imageKey","displayName","prefix","dropRight","join","sort","a","b","_b$tag$split$","_b$tag","_b$tag$split","_a$tag$split$","_a$tag","_a$tag$split","version1","version2","v1","Number","v2","i","Math","max","num1","num2","compareVersions","sortBy","item","_useMemo","fullNameMatchedImage","fullNameMatchedImageGroup","flatMap","find","envGroup","_jsxs","_Fragment","Item","className","rules","required","marginBottom","Select","ref","showSearch","searchValue","onSearch","defaultActiveFirstOption","optionFilterProp","onChange","disabled","_config","allow_manual_image_name_for_session","Option","filterValue","align","gap","display","ImageMetaIcon","width","height","OptGroup","environmentGroup","_environmentGroup$env","firstImage","currentMetaImageInfo","extraFilterValues","environmentPrefixTag","push","TextHighlighter","keyword","tagsFromMetaImageInfoLabel","category","justify","marginLeft","marginXS","flexShrink","noStyle","shouldUpdate","prev","cur","_prev$environments","_cur$environments","_ref2","_selectedEnvironmentG","selectedEnvironmentGroup","_getFieldValue","selectedImage","setFieldValue","dropdownRender","menu","fontWeight","fontWeightStrong","paddingLeft","paddingSM","Divider","type","_image$tag","_ref3","_ref4","_toArray","requirements","slice","tagAlias","_i","_Object$entries","Object","entries","tagReplace","_Object$entries$_i","replaceString","pattern","RegExp","test","replace","requirementTags","requirement","DoubleTag","str","digest","Input","allowClear","hidden","bordered","_ref$style","alt","arguments","getImageIcon","src","_objectSpread","useCurrentKeyPairResourcePolicyLazyLoadQuery","options","_useUpdatableState3","useUpdatableState","_useUpdatableState4","fetchKey","updateFetchKey","_useKeyPairLazyLoadQu","accessKey","_useUpdatableState","_useUpdatableState2","_hooksUsingRelay_KeyPairQuery","keypair","refresh","useCallback","useKeyPairLazyLoadQuery","keypairResourcePolicy","_hooksUsingRelay_KeyPairResourcePolicyQuery","resource_policy","keypair_resource_policy","limitParser","limit","_ref$dynamicSteps","dynamicSteps","_ref$units","units","_ref$disableAutoUnit","disableAutoUnit","_ref$min","min","_ref$max","inputNumberProps","_objectWithoutProperties","_excluded","_useControllableValue","useControllableValue","defaultValue","_useControllableValue2","setValue","parseUnit","numValue","_unitFromValue","previousUnit","usePrevious","unit","_parseUnit","_parseUnit2","minNumValue","minUnit","_parseUnit3","_parseUnit4","maxNumValue","maxUnit","current","onInput","e","_e$target","target","addEventListener","removeEventListener","InputNumber","newValue","iSizeToSize","number","addonAfter","tabIndex","newUnit","onDropdownVisibleChange","open","Typography","Text","fontFamily","toUpperCase","suffixIcon","cursor","step","onStep","afterStepValue","info","nextIndex","numValueNotNull","index","currentUnitIndex","indexOf","nextValue","nextUnit","nextNumValue","warn","extraMarks","hideSlider","otherProps","minGiB","maxGiB","valueGiB","flex","minWidth","DynamicUnitInputNumber","visibility","Slider","trackStyle","backgroundColor","compareNumberWithUnits","colorWarning","railStyle","tooltip","formatter","toFixed","newNumValue","marks","_defineProperty","colorTextSecondary","sliderProps","round","selectProps","assign","_objectDestructuringEmpty","updateFetchKeyThrottled","useThrottleFn","wait","trailing","leading","run","_useResourceSlots","useResourceSlots","resourceSlots","_useTransition","useTransition","_useTransition2","isPendingUpdate","_startTransition","resource_presets","_ResourcePresetSelectQuery","loading","EditOutlined","preset","slotsInfo","JSON","parse","resource_slots","opacity","slot","ResourceNumber","hideTooltip","console","log","AUTOMATIC_DEFAULT_SHMEM","RESOURCE_ALLOCATION_INITIAL_FORM_VALUES","resource","cpu","mem","shmem","accelerator","num_of_sessions","cluster_mode","cluster_size","enabledAutomaticShmem","ResourceAllocationFormItems","enableNumOfSessions","enableResourcePresets","acceleratorSlots","_useCurrentKeyPairRes","_useCurrentKeyPairRes3","currentProject","useCurrentProjectValue","currentResourceGroup","setCurrentResourceGroup","isPendingCheckResets","startCheckRestsTransition","currentImage","_useResourceLimitAndR","_$find","_checkPresetInfo$scal","_checkPresetInfo$scal2","_checkPresetInfo$scal3","_checkPresetInfo$scal4","_checkPresetInfo$scal5","_checkPresetInfo$scal6","_checkPresetInfo$scal7","_checkPresetInfo$scal8","_checkPresetInfo$scal9","_checkPresetInfo$scal10","_iSizeToSize","_checkPresetInfo$scal11","_checkPresetInfo$scal12","_$find2","_iSizeToSize2","_iSizeToSize3","_iSizeToSize4","_iSizeToSize5","_iSizeToSize6","_$min2","_$min3","currentProjectName","_useTanQuery","useTanQuery","queryKey","queryFn","resourcePreset","check","scaling_group","staleTime","suspense","checkPresetInfo","data","refetch","isRefetching","currentImageMinM","resource_limits","resourceGroupResourceSize","scaling_groups","using","remaining","numberFixed","accelerators","result","_checkPresetInfo$scal13","_checkPresetInfo$scal14","_checkPresetInfo$scal15","_checkPresetInfo$scal16","_checkPresetInfo$scal17","_checkPresetInfo$scal18","resourceLimits","maxCPUCoresPerContainer","keypair_limits","group_limits","addNumberWithUnits","maxMemoryPerContainer","_$filter","_$filter$","configName","parseInt","supportedAcceleratorInfo","_$min","keypair_remaining","group_remaining","scaling_group_remaining","MAX_SAFE_INTEGER","useResourceLimitAndRemaining","_useResourceLimitAndR3","currentImageAcceleratorLimits","sessionSliderLimitAndRemaining","max_concurrent_sessions","concurrency_used","_resourceLimits$cpu","_resourceLimits$shmem","_resourceLimits$mem","_resourceLimits$accel","_resourceLimits$accel2","nextImageSelectorType","acceleratorInfo","validateFields","catch","runShmemAutomationRule","M_plus_S","ResourceGroupSelect","autoSelectDefault","v","ResourcePresetSelect","_options$preset","_options$preset2","slots","numberUnit","shared_memory","Card","allocationPreset","_resourceLimits$cpu2","_baiClient$_config","_resourceLimits$cpu3","_resourceLimits$cpu4","_resourceLimits$cpu5","_resourceLimits$cpu6","_resourceLimits$cpu7","_resourceLimits$cpu8","_resourceLimits$cpu9","_resourceLimits$cpu10","placement","title","Trans","i18nKey","warningOnly","always_enqueue_compute_session","validator","_validator","_asyncToGenerator","_regeneratorRuntime","mark","_callee","rule","_baiClient$_config2","wrap","_context","next","abrupt","Promise","reject","amount","resolve","stop","_x","_x2","apply","InputNumberWithSlider","RemainingMark","props","onClick","preventDefault","_baiClient$_config3","_resourceLimits$mem5","_resourceLimits$mem6","_iSizeToSize7","_validator2","_callee2","_resourceLimits$mem2","_resourceLimits$mem3","_resourceLimits$mem4","_context2","size","_x3","_x4","_validator3","_callee3","_baiClient$_config4","_context3","_x5","_x6","DynamicUnitInputNumberWithSlider","addonBefore","valuePropName","Switch","checked","_resourceLimits$shmem2","dependencies","_validator4","_callee4","_getFieldValue2","_context4","_x7","_x8","_prev$resource","_next$resource","acceleratorType","_ref7","_resourceLimits$accel3","_baiClient$_config5","_resourceLimits$accel4","_resourceLimits$accel5","_resourceLimits$accel6","_resourceLimits$accel7","currentAcceleratorType","_validator5","_callee5","_baiClient$_config6","_context5","_x9","_x10","ACCELERATOR_UNIT_MAP","initialValue","popupMatchSelectWidth","_baiClient$_config7","_validator6","_callee6","_baiClient$_config8","_context6","_x11","_x12","supports","colorBorder","Row","gutter","marginMD","Col","xs","Radio","_resourceLimits$cpu11","_baiClient$_config9","derivedClusterSizeMaxLimit","max_containers_per_session","clusterUnit","_validator7","_callee7","minCPU","_context7","_x13","_x14","position","top","transform","colorSuccess","CaretDownOutlined","node","v0","hash","checkUpdate","get_resource_slots","useCurrentUserInfo","full_name","email","userInfo","_setUserInfo","handler","input","detail","document","mutationToUpdateUserFullName","useTanMutation","mutationFn","update_full_name","mutationToUpdateUserPassword","update_password","old_password","new_password","new_password2","username","maskUserInfo","maskLength","maskString","getUsername","isPendingMutation","isLoading","updateFullName","newFullName","mutate","onSuccess","dispatchEvent","CustomEvent","onError","error","updatePassword","params","useLocalStorageGlobalState","_useLocalStorageState","useLocalStorageState","_useLocalStorageState2","storageValue","setStorageValue","eventName","event","_useLocalStorageGloba","_useLocalStorageGloba2","themeMode","setThemeMode","_useLocalStorageGloba3","window","matchMedia","matches","_useLocalStorageGloba4","setIsDarkMode","mediaQuery"],"sourceRoot":""}