"""add_app_vfolder_type

Revision ID: 747153681ed4
Revises: eb9441fcf90a
Create Date: 2023-07-14 16:27:22.520967

"""
import enum
import textwrap

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects.postgresql import ENUM
from sqlalchemy.sql import text

from ai.backend.manager.models.base import GUID, convention

# revision identifiers, used by Alembic.
revision = "747153681ed4"
down_revision = "eb9441fcf90a"
branch_labels = None
depends_on = None

enum_name = "vfolderusagemode"
enum_val = "app"

PAGE_SIZE = 100


class VFolderUsageMode(str, enum.Enum):
    GENERAL = "general"
    MODEL = "model"
    DATA = "data"
    APP = "app"


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(f"ALTER TYPE {enum_name} ADD VALUE '{enum_val}'")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Update VFolderUsageMode.APP usage_mode to VFolderUsageMode.GENERAL
    connection = op.get_bind()
    metadata = sa.MetaData(naming_convention=convention)
    vfolders = sa.Table(
        "vfolders",
        metadata,
        sa.Column(
            "id",
            GUID(),
            nullable=False,
            primary_key=True,
        ),
        sa.Column(
            "usage_mode",
            ENUM,
            nullable=False,
        ),
    )

    while True:
        vf_subq = (
            sa.select([vfolders.c.id])
            .where(vfolders.c.usage_mode == VFolderUsageMode.APP)
            .limit(PAGE_SIZE)
        )
        vfolder_fetch_query = (
            sa.update(vfolders)
            .values({"usage_mode": VFolderUsageMode.GENERAL.value})
            .where(vfolders.c.id.in_(vf_subq))
        )
        result = connection.execute(vfolder_fetch_query)
        if result.rowcount < PAGE_SIZE:
            break

    sql = textwrap.dedent(f"""DELETE FROM pg_enum
        WHERE enumlabel = '{enum_val}'
        AND enumtypid = (
            SELECT oid FROM pg_type WHERE typname = '{enum_name}'
        )""")
    op.execute(text(sql))
    # ### end Alembic commands ###
