"""service_app_vfolder

Revision ID: fdd7c60f3d34
Revises: d6a02307a057
Create Date: 2023-05-19 17:10:58.268838

"""
import textwrap

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects.postgresql import ENUM, JSONB
from sqlalchemy.sql import text

from ai.backend.manager.models.base import GUID, convention
from ai.backend.manager.models.vfolder import VFolderUsageMode

# revision identifiers, used by Alembic.
revision = "fdd7c60f3d34"
down_revision = "d6a02307a057"
branch_labels = None
depends_on = None

enum_name = "vfolderusagemode"
enum_val = "app"


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(f"ALTER TYPE {enum_name} ADD VALUE '{enum_val}'")
    op.add_column("vfolders", sa.Column("app_config", JSONB(astext_type=sa.Text()), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Update VFolderUsageMode.APP usage_mode to VFolderUsageMode.GENERAL
    op.drop_column("vfolders", "app_config")
    connection = op.get_bind()
    metadata = sa.MetaData(naming_convention=convention)
    vfolders = sa.Table(
        "vfolders",
        metadata,
        sa.Column(
            "id",
            GUID(),
            nullable=False,
            primary_key=True,
        ),
        sa.Column(
            "usage_mode",
            ENUM,
            nullable=False,
        ),
    )
    vfolder_fetch_query = (
        sa.update(vfolders)
        .where(vfolders.c.usage_mode == VFolderUsageMode.APP)
        .values({"usage_mode": VFolderUsageMode.GENERAL.value})
    )
    connection.execute(vfolder_fetch_query)

    sql = textwrap.dedent(f"""DELETE FROM pg_enum
        WHERE enumlabel = '{enum_val}'
        AND enumtypid = (
            SELECT oid FROM pg_type WHERE typname = '{enum_name}'
        )""")
    op.execute(text(sql))
    # ### end Alembic commands ###
